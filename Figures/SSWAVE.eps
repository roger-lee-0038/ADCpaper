%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SSWAVE.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: lwzz0
%%CreationDate: 2022/5/31, 0:56:58
%%BoundingBox: 0 0 1126 556
%%HiResBoundingBox: 0 0 1125.1156 555.4567
%%CropBox: 0 0 1125.1156 555.4567
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1181 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® LTSC"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® LTSC"
   xmp:CreateDate="2022-05-30T13:41:32+08:00"
   xmp:ModifyDate="2022-05-31T00:56:45+08:00"
   xmp:MetadataDate="2022-05-31T00:56:45+08:00"
   xmpMM:DocumentID="uuid:24609816-B5F3-4EE0-9961-8AF523FC9A45"
   xmpMM:InstanceID="uuid:02e8b48e-31ce-4778-8d71-ef9439edcb92">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>李 王臻</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -555.457 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 555.457 li
1125.12 555.457 li
1125.12 0 li
cp
clp
gsave
-.0107422 555.685 mo
1125.99 555.685 li
1125.99 -.314941 li
-.0107422 -.314941 li
cp
clp
gsave
-6.01074 769.685 mo
1148.51 769.685 li
1148.51 -72.1151 li
-6.01074 -72.1151 li
cp
eclp
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
-6.01074 769.775 mo
1148.54 769.775 li
1148.54 -72.1152 li
-6.01074 -72.1152 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
grestore
218.458 507.329 mo
638.95 507.329 li
638.95 144.024 li
218.458 144.024 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.166293 .082826 0 0 cmyk
ef
218.458 507.329 mo
638.95 507.329 li
638.95 144.024 li
218.458 144.024 li
cp
.874327 .707973 .187198 0 cmyk
.55 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
639.528 506.445 mo
947.81 506.445 li
947.81 143.14 li
639.528 143.14 li
cp
.00628672 .137575 .155398 0 cmyk
ef
639.528 506.445 mo
947.81 506.445 li
947.81 143.14 li
639.528 143.14 li
cp
.874327 .707973 .187198 0 cmyk
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
89.8029 511.871 mo
89.8054 229.627 li
83.715 229.627 li
83.7125 511.871 li
cp
95.8957 232.672 mo
86.7589 214.453 li
77.6247 232.672 li
cp
.997223 .918425 .647791 .507591 cmyk
f
86.7589 507.827 mo
1009.7 507.827 li
1009.7 513.904 li
86.7589 513.904 li
cp
1006.65 501.75 mo
1024.91 510.865 li
1006.65 519.982 li
cp
f
87.7925 350.206 mo
197.657 350.206 li
197.657 358.309 li
87.7925 358.309 li
cp
.00161746 .252781 .875608 0 cmyk
f
229.827 383.796 mo
401.304 383.796 li
401.304 391.899 li
229.827 391.899 li
cp
f
404.256 386.608 mo
407.111 391.175 li
407.037 391.091 li
408.489 393.282 li
408.44 393.201 li
409.867 395.283 li
409.793 395.182 li
411.245 397.134 li
411.073 396.925 li
412.549 398.676 li
412.377 398.475 li
413.853 400.002 li
413.558 399.732 li
415.084 401.021 li
414.665 400.719 li
416.191 401.714 li
415.723 401.456 li
417.274 402.212 li
416.782 402.008 li
418.332 402.524 li
417.938 402.413 li
419.513 402.762 li
419.119 402.693 li
420.694 402.877 li
420.473 402.858 li
422.048 402.951 li
421.801 402.944 li
425 402.924 li
425.05 411.027 li
421.703 411.047 li
419.882 410.941 li
417.963 410.72 li
415.97 410.278 li
413.952 409.613 li
411.934 408.626 li
409.99 407.349 li
408.144 405.767 li
406.422 404 li
404.773 402.045 li
403.223 399.936 li
401.722 397.765 li
400.221 395.492 li
397.366 390.883 li
cp
f
425.025 410.971 mo
950.148 408.105 li
950.099 400.002 li
425 402.868 li
cp
f
935.113 305.844 mo
628.455 456.455 li
632.023 463.725 li
938.705 313.112 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
199.852 352.026 mo
202.859 356.539 li
205.844 360.985 li
205.822 360.956 li
208.758 365.246 li
208.731 365.206 li
211.573 369.258 li
211.538 369.209 li
214.27 372.985 li
214.213 372.909 li
215.542 374.66 li
215.515 374.623 li
216.79 376.263 li
216.721 376.177 li
217.976 377.707 li
217.941 377.663 li
219.122 379.065 li
219.014 378.942 li
220.178 380.211 li
220.119 380.15 li
221.209 381.292 li
221.086 381.169 li
222.12 382.163 li
221.933 381.996 li
222.929 382.844 li
222.764 382.709 li
223.704 383.428 li
223.458 383.254 li
224.364 383.843 li
224.108 383.688 li
224.976 384.167 li
224.691 384.025 li
225.503 384.393 li
225.023 384.211 li
226.573 384.69 li
225.894 384.543 li
227.317 384.727 li
226.63 384.697 li
227.996 384.641 li
227.528 384.688 li
228.82 384.484 li
228.589 384.528 li
229.861 384.251 li
231.588 392.169 li
230.198 392.471 li
228.559 392.729 li
226.613 392.808 li
224.504 392.533 li
222.375 391.877 li
221.184 391.337 li
220.048 390.708 li
218.891 389.955 li
217.747 389.08 li
216.573 388.083 li
215.387 386.942 li
214.208 385.707 li
212.963 384.344 li
211.711 382.863 li
210.404 381.27 li
209.083 379.571 li
207.712 377.766 li
204.936 373.928 li
202.064 369.832 li
199.104 365.508 li
196.1 361.027 li
193.09 356.514 li
cp
.00161746 .252781 .875608 0 cmyk
f
205.655 305.844 mo
84.8002 365.901 li
88.4224 373.155 li
209.274 313.087 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
228.055 456.281 mo
631.211 456.281 li
631.211 464.383 li
228.055 464.383 li
cp
f
211.142 310.264 mo
213.357 333.239 li
214.481 344.591 li
215.608 355.8 li
215.606 355.78 li
216.767 366.793 li
216.767 366.775 li
217.949 377.53 li
217.946 377.513 li
219.145 387.99 li
219.142 387.961 li
220.377 398.089 li
220.375 398.053 li
221.02 402.968 li
221.664 407.764 li
222.309 412.446 li
222.304 412.419 li
222.968 417.004 li
222.964 416.972 li
223.648 421.428 li
223.643 421.396 li
224.344 425.742 li
224.339 425.72 li
225.04 429.919 li
225.033 429.877 li
225.754 433.929 li
225.749 433.904 li
226.468 437.808 li
226.455 437.742 li
227.213 441.499 li
227.206 441.464 li
227.961 445.054 li
227.944 444.976 li
228.739 448.401 li
228.727 448.352 li
229.519 451.593 li
229.502 451.522 li
230.314 454.599 li
230.292 454.515 li
231.121 457.405 li
231.094 457.312 li
231.943 460.02 li
224.191 462.439 li
223.328 459.686 li
222.471 456.705 li
221.64 453.553 li
220.833 450.25 li
220.023 446.761 li
219.255 443.115 li
218.487 439.306 li
217.759 435.358 li
217.033 431.272 li
216.327 427.041 li
215.621 422.668 li
214.934 418.18 li
214.265 413.563 li
213.615 408.842 li
212.968 404.022 li
212.321 399.086 li
211.078 388.926 li
209.877 378.421 li
208.694 367.649 li
207.53 356.617 li
206.403 345.389 li
205.276 334.015 li
203.061 311.049 li
cp
f
208.613 251.211 mo
121.455 251.211 li
121.455 259.314 li
208.613 259.314 li
cp
.61709 .780514 0 0 cmyk
f
211.14 253.789 mo
220.367 386.235 li
212.267 386.797 li
203.039 254.354 li
cp
f
216.844 390.792 mo
626.486 389.837 li
626.486 381.734 li
216.824 382.689 li
cp
f
635.468 496.193 mo
620.9 384.543 li
628.947 383.494 li
643.539 495.145 li
cp
f
637.043 490.165 mo
736.285 490.423 li
736.26 498.526 li
637.018 498.268 li
cp
f
738.524 495.761 mo
754.174 254.329 li
746.054 253.813 li
730.428 495.238 li
cp
f
748.391 251.211 mo
950.049 252.438 li
950 260.541 li
748.318 259.314 li
cp
f
640.315 407 mo
640.315 419.154 li
637.289 419.154 li
637.289 407 li
cp
640.315 428.271 mo
640.315 440.426 li
637.289 440.426 li
637.289 428.271 li
cp
640.315 449.54 mo
640.315 461.695 li
637.289 461.695 li
637.289 449.54 li
cp
640.315 470.812 mo
640.315 482.966 li
637.289 482.966 li
637.289 470.812 li
cp
640.315 492.081 mo
640.315 504.235 li
637.289 504.235 li
637.289 492.081 li
cp
640.315 513.352 mo
640.315 525.506 li
637.289 525.506 li
637.289 513.352 li
cp
640.315 534.621 mo
640.315 541.363 li
637.289 541.363 li
637.289 534.621 li
cp
.899962 .828183 .680751 .520256 cmyk
f
26.7409 377.415 mo
33.3588 377.415 li
33.3588 378.203 li
32.944 378.252 32.6369 378.367 32.4373 378.549 cv
32.238 378.733 32.1383 378.991 32.1383 379.325 cv
32.1383 379.588 32.1622 379.846 32.2099 380.096 cv
32.2579 380.346 32.3576 380.747 32.5092 381.297 cv
34.8788 389.871 li
37.8344 381.331 li
37.955 380.997 38.0485 380.683 38.115 380.388 cv
38.1839 380.094 38.2183 379.784 38.2183 379.458 cv
38.2183 379.067 38.115 378.77 37.9132 378.561 cv
37.709 378.355 37.3964 378.235 36.9732 378.203 cv
36.9732 377.415 li
42.1309 377.415 li
42.1309 378.203 li
41.8282 378.252 41.5699 378.348 41.3582 378.495 cv
41.1466 378.642 40.9571 378.854 40.7849 379.129 cv
40.6126 379.404 40.4108 379.85 40.1795 380.472 cv
35.166 393.8 li
32.4016 393.8 li
28.4524 380.425 li
28.2767 379.828 28.1293 379.404 28.0094 379.153 cv
27.8898 378.903 27.7343 378.699 27.5429 378.544 cv
27.3514 378.389 27.084 378.274 26.7409 378.203 cv
cp
.997223 .918425 .647791 .507591 cmyk
ef
41.2253 386.745 mo
49.7297 386.745 li
49.7297 389.537 li
48.5239 389.537 li
48.332 388.98 48.1671 388.604 48.0318 388.408 cv
47.8964 388.211 47.7365 388.056 47.5495 387.944 cv
47.36 387.828 47.0425 387.772 46.5898 387.772 cv
44.8919 387.772 li
44.8919 392.238 li
46.0189 392.238 li
46.2945 392.238 46.5061 392.196 46.6562 392.113 cv
46.8063 392.027 46.9294 391.884 47.0253 391.686 cv
47.1213 391.487 47.2025 391.207 47.2665 390.843 cv
48.2606 390.843 li
48.2606 394.669 li
47.2665 394.669 li
47.1976 394.301 47.1115 394.016 47.013 393.814 cv
46.9121 393.613 46.7891 393.471 46.6439 393.39 cv
46.4963 393.306 46.2871 393.267 46.0189 393.267 cv
44.8919 393.267 li
44.8919 396.523 li
44.8919 396.977 44.9165 397.296 44.9632 397.473 cv
45.01 397.652 45.101 397.795 45.2388 397.905 cv
45.3766 398.013 45.6178 398.092 45.9574 398.146 cv
45.9574 398.725 li
41.2253 398.725 li
41.2253 398.146 li
41.5354 398.07 41.747 397.976 41.8627 397.868 cv
41.9759 397.76 42.0571 397.62 42.0989 397.448 cv
42.1432 397.274 42.1654 396.962 42.1654 396.513 cv
42.1654 388.958 li
42.1654 388.513 42.1457 388.204 42.1088 388.032 cv
42.0718 387.858 41.9931 387.72 41.875 387.615 cv
41.7593 387.509 41.5403 387.413 41.2253 387.325 cv
cp
55.4903 386.605 mo
56.012 386.605 56.5115 386.632 56.9864 386.689 cv
57.4613 386.743 58.0027 386.841 58.613 386.981 cv
58.613 389.527 li
57.4072 389.527 li
57.2497 388.867 57.0135 388.386 56.7034 388.083 cv
56.3934 387.781 55.9455 387.632 55.3574 387.632 cv
54.8308 387.632 54.4076 387.769 54.0877 388.044 cv
53.7678 388.319 53.6078 388.692 53.6078 389.166 cv
53.6078 389.508 53.6743 389.8 53.8047 390.05 cv
53.9376 390.298 54.159 390.541 54.4691 390.777 cv
54.7816 391.015 55.2319 391.285 55.8249 391.59 cv
56.5459 391.963 57.1119 392.331 57.5253 392.69 cv
57.9387 393.051 58.2439 393.444 58.4407 393.866 cv
58.6376 394.291 58.736 394.784 58.736 395.347 cv
58.736 396.066 58.5687 396.69 58.234 397.22 cv
57.8993 397.748 57.4146 398.156 56.7748 398.44 cv
56.135 398.723 55.3968 398.865 54.5577 398.865 cv
53.9597 398.865 53.3371 398.831 52.69 398.765 cv
52.0403 398.696 51.4325 398.598 50.8641 398.47 cv
50.8641 395.767 li
52.0699 395.767 li
52.215 396.464 52.4611 396.982 52.8032 397.326 cv
53.1452 397.667 53.6496 397.839 54.3116 397.839 cv
54.8923 397.839 55.3451 397.689 55.6699 397.39 cv
55.9947 397.092 56.1596 396.668 56.1596 396.118 cv
56.1596 395.58 56.0021 395.131 55.6871 394.772 cv
55.3746 394.411 54.8308 394.038 54.0557 393.652 cv
53.411 393.336 52.8745 393.009 52.4414 392.673 cv
52.0108 392.336 51.6712 391.946 51.4227 391.501 cv
51.1741 391.057 51.0486 390.549 51.0486 389.974 cv
51.0486 389.255 51.2283 388.643 51.5851 388.14 cv
51.9419 387.637 52.4611 387.256 53.1378 386.996 cv
53.8145 386.735 54.5995 386.605 55.4903 386.605 cv
cp
ef
67.5627 246.349 mo
67.0681 246.349 66.7113 246.349 66.4972 246.373 cv
66.4972 259.805 li
66.6399 259.829 67.0041 259.829 67.5848 259.829 cv
68.8152 259.829 69.77 259.584 70.4516 259.093 cv
71.1332 258.601 71.6525 257.84 72.0068 256.834 cv
72.3636 255.827 72.5408 254.55 72.5408 253.028 cv
72.5408 250.842 72.1126 249.173 71.2587 248.043 cv
70.4073 246.914 69.1745 246.349 67.5627 246.349 cv
cp
49.8453 246.349 mo
49.3507 246.349 48.9939 246.349 48.7798 246.373 cv
48.7798 259.805 li
48.9226 259.829 49.2867 259.829 49.8675 259.829 cv
51.0979 259.829 52.0526 259.584 52.7343 259.093 cv
53.4159 258.601 53.9351 257.84 54.2894 256.834 cv
54.6462 255.827 54.8234 254.55 54.8234 253.028 cv
54.8234 250.842 54.3953 249.173 53.5414 248.043 cv
52.69 246.914 51.4571 246.349 49.8453 246.349 cv
cp
61.5068 244.949 mo
67.73 244.949 li
69.0613 244.949 70.176 245.048 71.0693 245.269 cv
71.9625 245.465 72.7549 245.784 73.4488 246.226 cv
74.1452 246.693 74.7038 247.208 75.1319 247.822 cv
75.5576 248.436 75.8751 249.173 76.0818 249.983 cv
76.2909 250.793 76.3943 251.726 76.3943 252.733 cv
76.3943 254.427 76.1335 255.851 75.6167 257.03 cv
75.1541 258.086 74.4848 258.97 73.6112 259.608 cv
72.7376 260.271 71.6943 260.713 70.4811 260.959 cv
69.5559 261.155 68.3747 261.253 66.9401 261.253 cv
61.5068 261.253 li
61.5068 260.468 li
61.9374 260.345 62.2303 260.222 62.3853 260.075 cv
62.5428 259.927 62.6486 259.756 62.7027 259.51 cv
62.7593 259.264 62.7864 258.847 62.7864 258.258 cv
62.7864 247.945 li
62.7864 247.356 62.7618 246.938 62.7101 246.693 cv
62.6584 246.472 62.5526 246.275 62.3927 246.128 cv
62.2327 245.981 61.9374 245.858 61.5068 245.735 cv
cp
43.7894 244.949 mo
50.0127 244.949 li
51.3439 244.949 52.4586 245.048 53.3519 245.269 cv
54.2451 245.465 55.0375 245.784 55.7314 246.226 cv
56.4278 246.693 56.9864 247.208 57.4146 247.822 cv
57.8403 248.436 58.1577 249.173 58.3644 249.983 cv
58.5736 250.793 58.6769 251.726 58.6769 252.733 cv
58.6769 254.427 58.4161 255.851 57.8993 257.03 cv
57.4367 258.086 56.7674 258.97 55.8938 259.608 cv
55.0203 260.271 53.9769 260.713 52.7638 260.959 cv
51.8385 261.155 50.6574 261.253 49.2228 261.253 cv
43.7894 261.253 li
43.7894 260.468 li
44.2201 260.345 44.5129 260.222 44.6679 260.075 cv
44.8254 259.927 44.9312 259.756 44.9854 259.51 cv
45.042 259.264 45.069 258.847 45.069 258.258 cv
45.069 247.945 li
45.069 247.356 45.0444 246.938 44.9927 246.693 cv
44.9411 246.472 44.8353 246.275 44.6753 246.128 cv
44.5154 245.981 44.2201 245.858 43.7894 245.735 cv
cp
26.8864 244.949 mo
33.504 244.949 li
33.504 245.735 li
33.0894 245.784 32.782 245.907 32.5827 246.079 cv
32.3832 246.275 32.2835 246.521 32.2835 246.865 cv
32.2835 247.11 32.3074 247.38 32.3554 247.626 cv
32.4031 247.871 32.503 248.289 32.6546 248.829 cv
35.024 257.398 li
37.9796 248.853 li
38.1002 248.534 38.1937 248.215 38.2602 247.92 cv
38.3291 247.626 38.3635 247.307 38.3635 246.987 cv
38.3635 246.594 38.2602 246.3 38.0584 246.103 cv
37.8541 245.882 37.5416 245.76 37.1184 245.735 cv
37.1184 244.949 li
42.2761 244.949 li
42.2761 245.735 li
41.9734 245.784 41.715 245.882 41.5034 246.03 cv
41.2918 246.177 41.1023 246.373 40.9301 246.668 cv
40.7578 246.938 40.556 247.38 40.3247 247.994 cv
35.3112 261.327 li
32.5468 261.327 li
28.5976 247.945 li
28.4221 247.356 28.2745 246.938 28.1549 246.693 cv
28.035 246.423 27.8795 246.226 27.6881 246.079 cv
27.4966 245.931 27.2294 245.809 26.8864 245.735 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
89.2689 387.804 mo
101.45 387.804 li
101.45 390.841 li
89.2689 390.841 li
cp
110.584 387.804 mo
122.765 387.804 li
122.765 390.841 li
110.584 390.841 li
cp
131.901 387.804 mo
144.082 387.804 li
144.082 390.841 li
131.901 390.841 li
cp
153.216 387.804 mo
165.397 387.804 li
165.397 390.841 li
153.216 390.841 li
cp
174.534 387.804 mo
186.714 387.804 li
186.714 390.841 li
174.534 390.841 li
cp
195.849 387.804 mo
208.029 387.804 li
208.029 390.841 li
195.849 390.841 li
cp
217.166 387.804 mo
229.347 387.804 li
229.347 390.841 li
217.166 390.841 li
cp
238.481 387.804 mo
242.125 387.804 li
242.125 390.841 li
238.481 390.841 li
cp
.997223 .918425 .647791 .507591 cmyk
f
88.9736 457.636 mo
101.154 457.636 li
101.154 460.673 li
88.9736 460.673 li
cp
110.289 457.636 mo
122.469 457.636 li
122.469 460.673 li
110.289 460.673 li
cp
131.606 457.636 mo
143.787 457.636 li
143.787 460.673 li
131.606 460.673 li
cp
152.921 457.636 mo
165.102 457.636 li
165.102 460.673 li
152.921 460.673 li
cp
174.238 457.636 mo
186.419 457.636 li
186.419 460.673 li
174.238 460.673 li
cp
195.553 457.636 mo
207.734 457.636 li
207.734 460.673 li
195.553 460.673 li
cp
216.871 457.636 mo
229.051 457.636 li
229.051 460.673 li
216.871 460.673 li
cp
238.186 457.636 mo
250.366 457.636 li
250.366 460.673 li
238.186 460.673 li
cp
259.491 457.636 mo
271.672 457.636 li
271.672 460.673 li
259.491 460.673 li
cp
280.825 457.636 mo
293.006 457.636 li
293.006 460.673 li
280.825 460.673 li
cp
302.136 457.636 mo
314.316 457.636 li
314.316 460.673 li
302.136 460.673 li
cp
323.446 457.636 mo
335.626 457.636 li
335.626 460.673 li
323.446 460.673 li
cp
344.756 457.636 mo
356.936 457.636 li
356.936 460.673 li
344.756 460.673 li
cp
366.09 457.636 mo
378.271 457.636 li
378.271 460.673 li
366.09 460.673 li
cp
387.4 457.636 mo
399.581 457.636 li
399.581 460.673 li
387.4 460.673 li
cp
408.71 457.636 mo
420.891 457.636 li
420.891 460.673 li
408.71 460.673 li
cp
430.02 457.636 mo
442.201 457.636 li
442.201 460.673 li
430.02 460.673 li
cp
451.355 457.636 mo
463.536 457.636 li
463.536 460.673 li
451.355 460.673 li
cp
472.665 457.636 mo
484.846 457.636 li
484.846 460.673 li
472.665 460.673 li
cp
493.975 457.636 mo
506.156 457.636 li
506.156 460.673 li
493.975 460.673 li
cp
515.285 457.636 mo
527.466 457.636 li
527.466 460.673 li
515.285 460.673 li
cp
536.62 457.636 mo
548.8 457.636 li
548.8 460.673 li
536.62 460.673 li
cp
557.93 457.636 mo
570.11 457.636 li
570.11 460.673 li
557.93 460.673 li
cp
579.24 457.636 mo
591.421 457.636 li
591.421 460.673 li
579.24 460.673 li
cp
600.55 457.636 mo
612.731 457.636 li
612.731 460.673 li
600.55 460.673 li
cp
621.885 457.636 mo
634.065 457.636 li
634.065 460.673 li
621.885 460.673 li
cp
643.195 457.636 mo
655.375 457.636 li
655.375 460.673 li
643.195 460.673 li
cp
664.505 457.636 mo
676.685 457.636 li
676.685 460.673 li
664.505 460.673 li
cp
685.815 457.636 mo
697.995 457.636 li
697.995 460.673 li
685.815 460.673 li
cp
707.149 457.636 mo
719.33 457.636 li
719.33 460.673 li
707.149 460.673 li
cp
728.459 457.636 mo
740.64 457.636 li
740.64 460.673 li
728.459 460.673 li
cp
749.769 457.636 mo
761.95 457.636 li
761.95 460.673 li
749.769 460.673 li
cp
771.079 457.636 mo
783.26 457.636 li
783.26 460.673 li
771.079 460.673 li
cp
792.414 457.636 mo
804.595 457.636 li
804.595 460.673 li
792.414 460.673 li
cp
813.724 457.636 mo
825.905 457.636 li
825.905 460.673 li
813.724 460.673 li
cp
835.034 457.636 mo
847.215 457.636 li
847.215 460.673 li
835.034 460.673 li
cp
856.344 457.636 mo
868.525 457.636 li
868.525 460.673 li
856.344 460.673 li
cp
877.679 457.636 mo
889.86 457.636 li
889.86 460.673 li
877.679 460.673 li
cp
898.989 457.636 mo
911.17 457.636 li
911.17 460.673 li
898.989 460.673 li
cp
920.299 457.636 mo
932.48 457.636 li
932.48 460.673 li
920.299 460.673 li
cp
f
88.9785 311.54 mo
101.159 311.516 li
101.149 308.471 li
88.9687 308.52 li
cp
110.296 311.467 mo
122.477 311.418 li
122.464 308.373 li
110.284 308.422 li
cp
131.611 311.393 mo
143.792 311.344 li
143.779 308.299 li
131.601 308.348 li
cp
152.928 311.319 mo
165.109 311.27 li
165.097 308.226 li
152.916 308.275 li
cp
174.243 311.221 mo
186.424 311.172 li
186.412 308.152 li
174.231 308.177 li
cp
195.561 311.148 mo
207.739 311.099 li
207.729 308.054 li
195.548 308.103 li
cp
216.876 311.074 mo
229.056 311.025 li
229.044 307.98 li
216.863 308.029 li
cp
238.191 310.976 mo
250.371 310.951 li
250.362 307.906 li
238.181 307.956 li
cp
259.515 310.902 mo
271.696 310.853 li
271.672 307.808 li
259.491 307.857 li
cp
280.825 310.828 mo
293.006 310.779 li
292.982 307.735 li
280.801 307.784 li
cp
302.136 310.755 mo
314.316 310.706 li
314.316 307.661 li
302.136 307.71 li
cp
323.446 310.657 mo
335.626 310.607 li
335.626 307.587 li
323.446 307.612 li
cp
344.78 310.583 mo
356.961 310.534 li
356.936 307.489 li
344.756 307.538 li
cp
366.09 310.509 mo
378.271 310.46 li
378.246 307.415 li
366.066 307.464 li
cp
387.4 310.411 mo
399.581 310.362 li
399.581 307.342 li
387.4 307.391 li
cp
408.71 310.337 mo
420.891 310.288 li
420.891 307.243 li
408.71 307.293 li
cp
430.045 310.264 mo
442.226 310.215 li
442.201 307.17 li
430.02 307.219 li
cp
451.355 310.19 mo
463.536 310.141 li
463.511 307.096 li
451.33 307.145 li
cp
472.665 310.092 mo
484.846 310.043 li
484.846 307.022 li
472.665 307.047 li
cp
493.975 310.018 mo
506.156 309.969 li
506.156 306.924 li
493.975 306.973 li
cp
515.31 309.944 mo
527.49 309.895 li
527.466 306.851 li
515.285 306.9 li
cp
536.62 309.846 mo
548.8 309.797 li
548.776 306.777 li
536.595 306.826 li
cp
557.93 309.773 mo
570.11 309.723 li
570.11 306.679 li
557.93 306.728 li
cp
579.24 309.699 mo
591.421 309.65 li
591.421 306.605 li
579.24 306.654 li
cp
600.575 309.625 mo
612.755 309.576 li
612.731 306.531 li
600.55 306.581 li
cp
621.885 309.527 mo
634.065 309.478 li
634.041 306.458 li
621.86 306.482 li
cp
643.195 309.453 mo
655.375 309.404 li
655.375 306.36 li
643.195 306.409 li
cp
664.505 309.38 mo
676.685 309.331 li
676.685 306.286 li
664.505 306.335 li
cp
685.839 309.281 mo
698.02 309.232 li
697.995 306.212 li
685.815 306.261 li
cp
707.149 309.208 mo
719.33 309.159 li
719.305 306.114 li
707.125 306.163 li
cp
728.459 309.134 mo
740.64 309.085 li
740.64 306.04 li
728.459 306.089 li
cp
749.769 309.061 mo
761.95 309.011 li
761.95 305.967 li
749.769 306.016 li
cp
771.104 308.962 mo
783.285 308.913 li
783.26 305.893 li
771.079 305.918 li
cp
792.414 308.889 mo
804.595 308.84 li
804.57 305.795 li
792.39 305.844 li
cp
813.724 308.815 mo
825.905 308.766 li
825.905 305.721 li
813.724 305.77 li
cp
835.034 308.717 mo
847.215 308.668 li
847.215 305.647 li
835.034 305.697 li
cp
856.344 308.643 mo
868.525 308.594 li
868.525 305.549 li
856.344 305.598 li
cp
877.679 308.569 mo
889.86 308.52 li
889.835 305.476 li
877.654 305.525 li
cp
898.989 308.471 mo
911.17 308.447 li
911.17 305.402 li
898.989 305.451 li
cp
920.299 308.398 mo
932.48 308.348 li
932.48 305.328 li
920.299 305.353 li
cp
f
909.447 326.494 mo
899.014 352.256 li
901.647 349.887 li
896.356 351.431 li
891.213 353.111 li
886.291 354.889 li
881.591 356.784 li
877.113 358.78 li
872.856 360.877 li
868.845 363.075 li
865.055 365.336 li
861.463 367.713 li
858.141 370.176 li
855.065 372.708 li
852.21 375.34 li
849.626 378.046 li
847.289 380.808 li
845.197 383.654 li
843.376 386.571 li
841.826 389.544 li
840.571 392.592 li
839.587 395.685 li
838.922 398.816 li
838.553 401.993 li
838.504 405.176 li
838.75 408.37 li
839.341 411.565 li
840.251 414.713 li
841.457 417.853 li
842.982 420.93 li
844.828 423.957 li
846.944 426.928 li
849.38 429.865 li
852.136 432.711 li
855.188 435.5 li
858.485 438.214 li
862.004 440.77 li
865.744 443.213 li
869.681 445.536 li
873.791 447.731 li
878.097 449.81 li
882.551 451.745 li
887.153 453.582 li
891.927 455.286 li
896.823 456.872 li
901.868 458.323 li
907.036 459.659 li
912.302 460.862 li
917.666 461.933 li
923.104 462.891 li
928.641 463.716 li
934.276 464.391 li
939.911 464.953 li
945.645 465.383 li
951.403 465.682 li
957.21 465.832 li
963.018 465.869 li
968.849 465.758 li
974.681 465.496 li
980.489 465.103 li
986.296 464.558 li
992.079 463.885 li
997.837 463.057 li
1003.52 462.083 li
1009.16 460.956 li
1014.74 459.679 li
1020.23 458.267 li
1025.59 456.7 li
1030.74 455.023 li
1035.66 453.246 li
1040.36 451.348 li
1044.84 449.354 li
1049.09 447.254 li
1053.11 445.059 li
1056.89 442.795 li
1060.49 440.421 li
1063.81 437.958 li
1066.89 435.427 li
1069.74 432.794 li
1072.32 430.088 li
1074.66 427.326 li
1076.75 424.48 li
1078.57 421.556 li
1080.12 418.57 li
1081.38 415.547 li
1082.36 412.449 li
1083.03 409.316 li
1083.4 406.138 li
1083.45 402.958 li
1083.2 399.764 li
1082.61 396.572 li
1081.7 393.402 li
1080.49 390.276 li
1078.97 387.209 li
1077.12 384.155 li
1074.98 381.174 li
1072.55 378.274 li
1069.81 375.409 li
1066.79 372.634 li
1064.35 370.616 li
1061.77 368.676 li
1059.11 366.805 li
1056.3 364.998 li
1053.4 363.252 li
1050.37 361.565 li
1047.25 359.959 li
1043.98 358.407 li
1037.26 355.517 li
1030.12 352.885 li
1022.67 350.545 li
1014.89 348.475 li
1006.84 346.69 li
998.551 345.187 li
990.036 343.986 li
981.35 343.105 li
972.516 342.526 li
963.534 342.263 li
954.503 342.339 li
945.472 342.746 li
947.293 343.085 li
cp
944.882 350.884 mo
954.799 350.437 li
954.651 350.439 li
963.534 350.366 li
963.387 350.366 li
972.196 350.624 li
972.048 350.616 li
980.759 351.186 li
980.612 351.174 li
989.126 352.04 li
988.978 352.021 li
997.345 353.199 li
997.173 353.175 li
1005.32 354.648 li
1005.17 354.616 li
1013.04 356.364 li
1012.87 356.325 li
1020.48 358.351 li
1020.3 358.302 li
1027.61 360.585 li
1027.42 360.519 li
1034.35 363.08 li
1034.16 363.001 li
1040.7 365.818 li
1040.56 365.754 li
1043.71 367.247 li
1043.58 367.19 li
1046.58 368.737 li
1046.49 368.676 li
1049.39 370.296 li
1049.27 370.228 li
1052.07 371.902 li
1051.95 371.831 li
1054.63 373.562 li
1054.51 373.479 li
1057.04 375.264 li
1056.92 375.18 li
1059.36 377.022 li
1059.23 376.909 li
1061.52 378.804 li
1061.37 378.674 li
1064.23 381.289 li
1064.03 381.095 li
1066.57 383.767 li
1066.39 383.57 li
1068.66 386.259 li
1068.48 386.036 li
1070.45 388.761 li
1070.26 388.471 li
1071.93 391.234 li
1071.76 390.942 li
1073.14 393.704 li
1072.99 393.387 li
1074.07 396.167 li
1073.95 395.796 li
1074.74 398.595 li
1074.66 398.227 li
1075.18 401.026 li
1075.13 400.611 li
1075.35 403.41 li
1075.33 403.037 li
1075.3 405.817 li
1075.33 405.392 li
1074.98 408.174 li
1075.06 407.808 li
1074.46 410.57 li
1074.56 410.195 li
1073.68 412.94 li
1073.8 412.606 li
1072.69 415.312 li
1072.82 415.015 li
1071.44 417.703 li
1071.61 417.406 li
1069.94 420.058 li
1070.11 419.813 li
1068.19 422.428 li
1068.36 422.211 li
1066.2 424.772 li
1066.37 424.581 li
1063.96 427.105 li
1064.13 426.928 li
1061.47 429.396 li
1061.64 429.244 li
1058.72 431.638 li
1058.89 431.513 li
1055.71 433.853 li
1055.89 433.73 li
1052.49 435.996 li
1052.64 435.893 li
1049 438.066 li
1049.14 437.99 li
1045.26 440.107 li
1045.43 440.028 li
1041.32 442.054 li
1041.44 441.987 li
1037.11 443.92 li
1037.23 443.863 li
1032.68 445.705 li
1032.83 445.651 li
1028.03 447.382 li
1028.15 447.343 li
1023.13 448.981 li
1023.26 448.944 li
1018.02 450.473 li
1018.16 450.437 li
1012.77 451.817 li
1012.87 451.792 li
1007.41 453.044 li
1007.51 453.02 li
1001.97 454.125 li
1002.09 454.105 li
996.508 455.063 li
996.631 455.045 li
990.971 455.856 li
991.095 455.841 li
985.41 456.504 li
985.484 456.497 li
979.8 457.029 li
979.898 457.022 li
974.165 457.408 li
974.263 457.403 li
968.53 457.66 li
968.628 457.658 li
962.919 457.768 li
963.018 457.766 li
957.284 457.729 li
957.382 457.732 li
951.673 457.584 li
951.772 457.589 li
946.112 457.295 li
946.211 457.3 li
940.575 456.875 li
940.674 456.885 li
935.113 456.332 li
935.186 456.342 li
929.674 455.679 li
929.797 455.694 li
924.359 454.883 li
924.482 454.901 li
919.118 453.96 li
919.216 453.977 li
913.95 452.929 li
914.073 452.951 li
908.906 451.772 li
909.004 451.802 li
903.984 450.493 li
904.083 450.523 li
899.137 449.103 li
899.284 449.143 li
894.486 447.596 li
894.609 447.635 li
889.958 445.978 li
890.106 446.029 li
885.602 444.244 li
885.726 444.293 li
881.419 442.415 li
881.567 442.481 li
877.408 440.475 li
877.556 440.549 li
873.594 438.43 li
873.742 438.513 li
869.952 436.286 li
870.124 436.389 li
866.556 434.052 li
866.704 434.157 li
863.357 431.726 li
863.554 431.876 li
860.429 429.315 li
860.601 429.467 li
857.747 426.835 li
857.895 426.997 li
855.335 424.345 li
855.532 424.574 li
853.293 421.865 li
853.465 422.094 li
851.521 419.368 li
851.693 419.633 li
850.02 416.888 li
850.192 417.19 li
848.814 414.428 li
848.962 414.754 li
847.879 411.955 li
848.002 412.311 li
847.215 409.532 li
847.289 409.907 li
846.772 407.108 li
846.821 407.523 li
846.6 404.724 li
846.624 405.097 li
846.649 402.315 li
846.624 402.742 li
846.969 399.96 li
846.895 400.326 li
847.486 397.564 li
847.387 397.937 li
848.273 395.194 li
848.15 395.519 li
849.282 392.793 li
849.134 393.11 li
850.512 390.441 li
850.34 390.726 li
852.013 388.074 li
851.841 388.322 li
853.76 385.707 li
853.588 385.92 li
855.754 383.362 li
855.581 383.553 li
857.993 381.029 li
857.821 381.206 li
860.478 378.738 li
860.306 378.89 li
863.234 376.496 li
863.062 376.619 li
866.236 374.282 li
866.064 374.402 li
869.46 372.138 li
869.312 372.239 li
872.954 370.066 li
872.807 370.144 li
876.67 368.028 li
876.522 368.106 li
880.632 366.08 li
880.509 366.147 li
884.84 364.212 li
884.717 364.268 li
889.269 362.427 li
889.121 362.483 li
893.92 360.752 li
893.797 360.791 li
898.817 359.154 li
898.694 359.19 li
905.805 357.108 li
915.402 333.394 li
910.013 335.586 li
cp
.46949 .402014 .372625 0 cmyk
f
877.113 440.664 mo
925.393 440.73 li
925.368 448.833 li
877.088 448.767 li
cp
.997223 .918425 .647791 .507591 cmyk
f
924.95 418.239 mo
971.95 418.123 li
971.925 410.02 li
924.925 410.136 li
cp
f
971.064 377.611 mo
1020.01 378.397 li
1019.89 386.497 li
970.941 385.712 li
cp
f
972.983 415.577 mo
976.01 378.75 li
967.914 378.09 li
964.888 414.914 li
cp
f
925.442 447.991 mo
929.084 411.528 li
921.013 410.723 li
917.346 447.186 li
cp
f
1022.59 385.029 mo
1024.17 355.358 li
1016.07 354.928 li
1014.5 384.599 li
cp
f
1042.08 402.077 mo
1042.08 408.405 li
1042.55 408.429 1043.09 408.441 1043.71 408.441 cv
1044.47 408.441 1045.08 408.348 1045.58 408.162 cv
1046.07 407.972 1046.46 407.646 1046.73 407.182 cv
1047 406.715 1047.13 406.077 1047.13 405.264 cv
1047.13 404.579 1047.03 404.007 1046.81 403.545 cv
1046.61 403.084 1046.26 402.723 1045.8 402.465 cv
1045.33 402.205 1044.64 402.077 1043.73 402.077 cv
cp
1043.71 394.934 mo
1043.14 394.934 1042.6 394.956 1042.08 394.996 cv
1042.08 400.68 li
1043.68 400.68 li
1044.47 400.68 1045.08 400.564 1045.55 400.334 cv
1045.99 400.103 1046.34 399.774 1046.58 399.347 cv
1046.83 398.922 1046.93 398.335 1046.93 397.586 cv
1046.93 396.67 1046.68 396 1046.17 395.575 cv
1045.65 395.148 1044.84 394.934 1043.71 394.934 cv
cp
1037.09 393.537 mo
1044.94 393.537 li
1045.75 393.537 1046.41 393.574 1046.95 393.645 cv
1047.47 393.716 1047.96 393.832 1048.38 393.986 cv
1048.82 394.141 1049.17 394.315 1049.41 394.512 cv
1049.68 394.706 1049.91 394.932 1050.08 395.187 cv
1050.25 395.44 1050.4 395.732 1050.5 396.059 cv
1050.6 396.385 1050.64 396.746 1050.64 397.144 cv
1050.64 398.944 1049.56 400.292 1047.4 401.193 cv
1047.4 401.301 li
1048.5 401.65 1049.36 402.158 1049.96 402.823 cv
1050.52 403.486 1050.82 404.284 1050.82 405.217 cv
1050.82 406.013 1050.69 406.705 1050.42 407.295 cv
1050.15 407.884 1049.76 408.368 1049.19 408.746 cv
1048.65 409.124 1048.01 409.402 1047.27 409.576 cv
1046.54 409.75 1045.6 409.839 1044.47 409.839 cv
1037.09 409.839 li
1037.09 409.05 li
1037.53 408.937 1037.82 408.812 1037.97 408.667 cv
1038.12 408.525 1038.22 408.336 1038.29 408.1 cv
1038.34 407.867 1038.37 407.447 1038.37 406.84 cv
1038.37 396.547 li
1038.37 395.943 1038.34 395.523 1038.29 395.288 cv
1038.24 395.052 1038.14 394.863 1037.97 394.721 cv
1037.82 394.578 1037.53 394.446 1037.09 394.325 cv
cp
1010.21 393.537 mo
1016.49 393.537 li
1016.49 394.325 li
1016.07 394.438 1015.78 394.566 1015.63 394.708 cv
1015.48 394.851 1015.36 395.042 1015.31 395.283 cv
1015.23 395.521 1015.21 395.934 1015.21 396.523 cv
1015.21 408.417 li
1017.52 408.417 li
1018.04 408.417 1018.43 408.324 1018.75 408.137 cv
1019.07 407.95 1019.34 407.636 1019.57 407.194 cv
1019.79 406.752 1020.03 406.025 1020.25 405.014 cv
1021.88 405.014 li
1021.63 409.839 li
1010.21 409.839 li
1010.21 409.05 li
1010.66 408.937 1010.95 408.812 1011.1 408.667 cv
1011.25 408.525 1011.35 408.333 1011.42 408.095 cv
1011.47 407.857 1011.49 407.435 1011.49 406.828 cv
1011.49 396.547 li
1011.49 395.943 1011.47 395.523 1011.42 395.288 cv
1011.37 395.052 1011.27 394.863 1011.1 394.721 cv
1010.95 394.578 1010.66 394.446 1010.21 394.325 cv
cp
1030.24 393.348 mo
1030.96 393.348 1031.62 393.385 1032.29 393.461 cv
1032.93 393.537 1033.67 393.67 1034.5 393.861 cv
1034.5 397.323 li
1032.85 397.323 li
1032.63 396.425 1032.31 395.769 1031.89 395.359 cv
1031.48 394.949 1030.86 394.745 1030.07 394.745 cv
1029.36 394.745 1028.77 394.932 1028.33 395.305 cv
1027.91 395.681 1027.69 396.189 1027.69 396.835 cv
1027.69 397.296 1027.78 397.697 1027.96 398.035 cv
1028.13 398.372 1028.42 398.703 1028.87 399.025 cv
1029.29 399.347 1029.9 399.715 1030.71 400.13 cv
1031.67 400.641 1032.46 401.139 1033.03 401.628 cv
1033.59 402.119 1033.99 402.652 1034.26 403.229 cv
1034.53 403.806 1034.67 404.476 1034.67 405.24 cv
1034.67 406.219 1034.43 407.069 1033.99 407.791 cv
1033.52 408.51 1032.85 409.065 1031.99 409.451 cv
1031.13 409.836 1030.12 410.03 1028.99 410.03 cv
1028.15 410.03 1027.32 409.983 1026.43 409.893 cv
1025.54 409.799 1024.73 409.667 1023.95 409.492 cv
1023.95 405.814 li
1025.59 405.814 li
1025.79 406.762 1026.14 407.467 1026.58 407.933 cv
1027.05 408.4 1027.73 408.633 1028.65 408.633 cv
1029.43 408.633 1030.05 408.429 1030.49 408.024 cv
1030.93 407.616 1031.16 407.039 1031.16 406.29 cv
1031.16 405.559 1030.93 404.947 1030.52 404.459 cv
1030.1 403.97 1029.36 403.462 1028.3 402.936 cv
1027.42 402.507 1026.68 402.062 1026.11 401.606 cv
1025.52 401.146 1025.05 400.616 1024.71 400.01 cv
1024.36 399.405 1024.19 398.713 1024.19 397.932 cv
1024.19 396.952 1024.44 396.123 1024.93 395.438 cv
1025.42 394.752 1026.14 394.232 1027.05 393.878 cv
1027.96 393.525 1029.04 393.348 1030.24 393.348 cv
cp
ef
1060.29 404.537 mo
1075.03 404.537 li
1075.03 406.124 li
1060.29 406.124 li
cp
1060.29 399.58 mo
1075.03 399.58 li
1075.03 401.168 li
1060.29 401.168 li
cp
ef
1083.96 374.974 mo
1090.58 374.974 li
1090.58 375.762 li
1090.16 375.811 1089.87 375.927 1089.67 376.108 cv
1089.47 376.293 1089.38 376.55 1089.38 376.887 cv
1089.38 377.15 1089.38 377.405 1089.43 377.655 cv
1089.47 377.906 1089.57 378.306 1089.75 378.856 cv
1092.11 387.43 li
1095.06 378.893 li
1095.18 378.556 1095.28 378.242 1095.33 377.948 cv
1095.41 377.653 1095.45 377.343 1095.45 377.017 cv
1095.45 376.626 1095.33 376.329 1095.13 376.121 cv
1094.94 375.914 1094.62 375.794 1094.2 375.762 cv
1094.2 374.974 li
1099.37 374.974 li
1099.37 375.762 li
1099.05 375.811 1098.8 375.909 1098.58 376.057 cv
1098.38 376.204 1098.19 376.415 1098.01 376.688 cv
1097.84 376.963 1097.64 377.412 1097.4 378.031 cv
1092.4 391.359 li
1089.62 391.359 li
1085.69 377.984 li
1085.51 377.388 1085.37 376.963 1085.24 376.712 cv
1085.12 376.462 1084.97 376.258 1084.78 376.103 cv
1084.58 375.949 1084.31 375.836 1083.96 375.762 cv
cp
ef
1098.46 384.305 mo
1106.95 384.305 li
1106.95 387.096 li
1105.74 387.096 li
1105.57 386.539 1105.4 386.163 1105.25 385.967 cv
1105.13 385.773 1104.95 385.616 1104.78 385.503 cv
1104.58 385.387 1104.26 385.331 1103.82 385.331 cv
1102.12 385.331 li
1102.12 389.8 li
1103.26 389.8 li
1103.53 389.8 1103.72 389.756 1103.87 389.672 cv
1104.04 389.586 1104.17 389.444 1104.24 389.245 cv
1104.34 389.046 1104.44 388.766 1104.49 388.403 cv
1105.49 388.403 li
1105.49 392.231 li
1104.49 392.231 li
1104.41 391.86 1104.34 391.575 1104.24 391.374 cv
1104.14 391.172 1104.02 391.03 1103.87 390.949 cv
1103.72 390.866 1103.53 390.826 1103.26 390.826 cv
1102.12 390.826 li
1102.12 394.082 li
1102.12 394.539 1102.15 394.856 1102.2 395.035 cv
1102.25 395.212 1102.32 395.356 1102.47 395.465 cv
1102.62 395.573 1102.84 395.654 1103.18 395.705 cv
1103.18 396.285 li
1098.46 396.285 li
1098.46 395.705 li
1098.75 395.629 1098.97 395.536 1099.1 395.428 cv
1099.19 395.32 1099.29 395.18 1099.32 395.008 cv
1099.37 394.836 1099.39 394.524 1099.39 394.072 cv
1099.39 386.517 li
1099.39 386.073 1099.37 385.763 1099.34 385.591 cv
1099.29 385.417 1099.22 385.279 1099.1 385.174 cv
1098.97 385.068 1098.78 384.972 1098.46 384.884 cv
cp
1113 384.165 mo
1113.54 384.165 1114.03 384.192 1114.5 384.248 cv
1114.99 384.302 1115.53 384.4 1116.12 384.543 cv
1116.12 387.087 li
1114.92 387.087 li
1114.77 386.426 1114.53 385.945 1114.23 385.643 cv
1113.91 385.341 1113.47 385.191 1112.88 385.191 cv
1112.36 385.191 1111.92 385.328 1111.6 385.604 cv
1111.28 385.879 1111.13 386.254 1111.13 386.728 cv
1111.13 387.067 1111.2 387.359 1111.33 387.61 cv
1111.45 387.858 1111.67 388.101 1111.99 388.336 cv
1112.31 388.575 1112.75 388.845 1113.34 389.149 cv
1114.06 389.525 1114.62 389.891 1115.04 390.252 cv
1115.46 390.61 1115.76 391.003 1115.95 391.428 cv
1116.15 391.85 1116.25 392.344 1116.25 392.906 cv
1116.25 393.625 1116.1 394.249 1115.76 394.779 cv
1115.41 395.31 1114.94 395.715 1114.3 396 cv
1113.66 396.282 1112.93 396.425 1112.09 396.425 cv
1111.47 396.425 1110.86 396.39 1110.22 396.324 cv
1109.55 396.258 1108.96 396.159 1108.37 396.029 cv
1108.37 393.326 li
1109.58 393.326 li
1109.73 394.023 1109.97 394.541 1110.32 394.885 cv
1110.66 395.226 1111.18 395.398 1111.84 395.398 cv
1112.41 395.398 1112.88 395.248 1113.2 394.951 cv
1113.52 394.652 1113.69 394.227 1113.69 393.677 cv
1113.69 393.139 1113.52 392.69 1113.22 392.331 cv
1112.9 391.97 1112.36 391.597 1111.57 391.212 cv
1110.93 390.895 1110.39 390.568 1109.97 390.232 cv
1109.53 389.896 1109.19 389.505 1108.94 389.061 cv
1108.69 388.616 1108.57 388.108 1108.57 387.533 cv
1108.57 386.814 1108.74 386.203 1109.11 385.699 cv
1109.46 385.196 1109.97 384.815 1110.66 384.555 cv
1111.33 384.295 1112.11 384.165 1113 384.165 cv
cp
ef
1093.83 409.848 mo
1094.99 409.848 1095.95 410.006 1096.71 410.32 cv
1097.45 410.634 1097.96 411.059 1098.31 411.597 cv
1098.63 412.134 1098.8 412.761 1098.8 413.478 cv
1098.8 414.106 1098.68 414.693 1098.46 415.233 cv
1098.21 415.773 1097.82 416.392 1097.23 417.085 cv
1096.66 417.777 1095.68 418.769 1094.3 420.058 cv
1093.88 420.456 1093.39 420.979 1092.8 421.627 cv
1092.21 422.278 1091.74 422.833 1091.39 423.294 cv
1091.39 423.412 li
1095.65 423.412 li
1096.17 423.412 1096.56 423.375 1096.81 423.299 cv
1097.05 423.223 1097.25 423.093 1097.4 422.906 cv
1097.55 422.717 1097.67 422.437 1097.77 422.064 cv
1099.15 422.064 li
1098.88 426.339 li
1087.92 426.339 li
1087.92 425.551 li
1088.54 424.141 1089.79 422.327 1091.69 420.105 cv
1092.55 419.093 1093.19 418.263 1093.66 417.61 cv
1094.1 416.957 1094.45 416.341 1094.67 415.759 cv
1094.89 415.177 1094.99 414.578 1094.99 413.956 cv
1094.99 413.08 1094.81 412.392 1094.42 411.896 cv
1094.03 411.398 1093.49 411.15 1092.8 411.15 cv
1091.52 411.15 1090.68 412.085 1090.31 413.956 cv
1088.15 413.956 li
1088.15 411.137 li
1089.45 410.612 1090.51 410.266 1091.3 410.099 cv
1092.11 409.932 1092.94 409.848 1093.83 409.848 cv
cp
ef
1102.27 406.993 mo
1105.81 406.993 li
1108.94 412.39 li
1109.14 412.729 1109.38 413.188 1109.7 413.767 cv
1110 414.347 1110.29 414.894 1110.51 415.41 cv
1110.66 415.41 li
1110.59 414.01 1110.56 412.483 1110.56 410.828 cv
1110.56 409.195 li
1110.56 408.81 1110.56 408.532 1110.51 408.365 cv
1110.49 408.198 1110.44 408.073 1110.39 407.985 cv
1110.32 407.896 1110.24 407.825 1110.15 407.769 cv
1110.05 407.715 1109.87 407.648 1109.63 407.572 cv
1109.63 406.993 li
1112.95 406.993 li
1112.95 407.572 li
1112.7 407.648 1112.56 407.712 1112.46 407.766 cv
1112.36 407.818 1112.29 407.889 1112.21 407.975 cv
1112.14 408.063 1112.09 408.196 1112.06 408.375 cv
1112.02 408.554 1111.99 408.827 1111.99 409.195 cv
1111.99 418.973 li
1109.78 418.973 li
1105.81 412.144 li
1105.27 411.221 1104.88 410.494 1104.63 409.969 cv
1104.56 409.969 li
1104.61 411.226 1104.63 412.554 1104.63 413.951 cv
1104.63 416.778 li
1104.63 417.217 1104.66 417.524 1104.71 417.701 cv
1104.76 417.875 1104.83 418.015 1104.95 418.116 cv
1105.05 418.219 1105.27 418.312 1105.59 418.393 cv
1105.59 418.973 li
1102.27 418.973 li
1102.27 418.393 li
1102.57 418.312 1102.79 418.216 1102.91 418.108 cv
1103.01 418 1103.08 417.86 1103.13 417.691 cv
1103.18 417.522 1103.21 417.217 1103.21 416.778 cv
1103.21 409.188 li
1103.21 408.748 1103.18 408.446 1103.16 408.279 cv
1103.11 408.112 1103.03 407.972 1102.91 407.862 cv
1102.79 407.751 1102.57 407.653 1102.27 407.572 cv
cp
ef
1083.59 402.178 mo
1100.57 402.178 li
1117.55 402.178 li
1117.55 403.651 li
1100.57 403.651 li
1083.59 403.651 li
cp
ef
427.018 434.017 mo
422.983 444.502 li
430.316 444.502 li
cp
426.526 430.769 mo
429.577 430.769 li
434.745 446.316 li
434.745 447.176 li
420.276 447.176 li
420.276 446.294 li
cp
ef
435.828 435.505 mo
441.118 435.505 li
441.118 436.507 li
440.651 436.62 440.356 436.706 440.232 436.767 cv
440.109 436.826 440.036 436.902 439.986 436.988 cv
439.937 437.077 439.913 437.204 439.913 437.371 cv
439.913 437.575 439.937 437.781 439.986 437.992 cv
440.011 438.204 440.085 438.432 440.183 438.673 cv
442.029 444.521 li
444.194 438.992 li
444.342 438.614 444.44 438.314 444.514 438.096 cv
444.563 437.877 444.588 437.671 444.588 437.477 cv
444.588 437.219 444.514 437.023 444.391 436.89 cv
444.243 436.757 443.899 436.632 443.358 436.514 cv
443.358 435.505 li
448.23 435.505 li
448.23 436.512 li
447.836 436.593 447.565 436.689 447.442 436.794 cv
447.295 436.902 447.147 437.086 447 437.349 cv
446.852 437.609 446.655 437.988 446.434 438.481 cv
442.423 447.294 li
440.7 447.294 li
437.452 438.39 li
437.23 437.806 437.083 437.411 436.96 437.207 cv
436.837 437.003 436.714 436.858 436.591 436.77 cv
436.468 436.681 436.221 436.595 435.828 436.514 cv
cp
ef
455.711 441.875 mo
470.45 441.875 li
470.45 443.463 li
455.711 443.463 li
cp
455.711 436.919 mo
470.45 436.919 li
470.45 438.508 li
455.711 438.508 li
cp
ef
488.832 430.076 mo
490.309 430.076 li
490.309 440.143 li
490.702 440.143 li
490.998 440.143 491.219 440.116 491.367 440.06 cv
491.539 440.003 491.687 439.915 491.859 439.792 cv
492.031 439.667 492.302 439.444 492.671 439.122 cv
493.015 438.8 493.286 438.513 493.483 438.263 cv
493.655 438.012 493.778 437.794 493.852 437.607 cv
493.901 437.418 493.951 437.239 493.951 437.062 cv
493.951 436.514 493.581 436.19 492.892 436.094 cv
492.892 435.331 li
498.872 435.331 li
498.872 436.094 li
498.552 436.144 498.208 436.286 497.839 436.524 cv
497.445 436.765 496.854 437.266 496.042 438.029 cv
494.295 439.643 li
497.396 444.205 li
497.839 444.88 498.183 445.346 498.38 445.602 cv
498.601 445.855 498.798 446.036 498.946 446.145 cv
499.118 446.253 499.315 446.334 499.561 446.388 cv
499.561 447.176 li
493.704 447.176 li
493.704 446.388 li
494.049 446.316 494.246 446.13 494.246 445.828 cv
494.246 445.622 494.172 445.376 494.024 445.094 cv
493.901 444.811 493.606 444.372 493.212 443.773 cv
492.277 442.388 li
492.08 442.078 491.908 441.852 491.785 441.715 cv
491.662 441.575 491.539 441.469 491.416 441.398 cv
491.293 441.325 491.121 441.29 490.899 441.29 cv
490.309 441.29 li
490.309 443.726 li
490.309 444.482 490.333 445.003 490.382 445.29 cv
490.432 445.577 490.53 445.806 490.678 445.978 cv
490.825 446.147 491.096 446.284 491.514 446.388 cv
491.514 447.176 li
485.658 447.176 li
485.658 446.388 li
486.052 446.284 486.322 446.149 486.494 445.982 cv
486.642 445.815 486.741 445.59 486.79 445.307 cv
486.839 445.025 486.864 444.497 486.864 443.726 cv
486.864 434.412 li
486.864 433.56 486.839 432.952 486.814 432.586 cv
486.79 432.217 486.741 431.942 486.667 431.756 cv
486.593 431.567 486.494 431.419 486.347 431.314 cv
486.199 431.206 485.904 431.112 485.51 431.031 cv
485.51 430.243 li
cp
ef
622.721 425.421 mo
625.207 426.071 627.126 427.763 628.479 430.494 cv
629.833 433.227 630.497 436.458 630.497 440.19 cv
630.497 443.925 629.833 447.156 628.479 449.887 cv
627.126 452.619 625.207 454.309 622.721 454.962 cv
622.426 453.985 li
624.345 453.26 625.822 451.682 626.806 449.248 cv
627.79 446.817 628.307 443.802 628.307 440.202 cv
628.307 436.598 627.79 433.575 626.806 431.139 cv
625.822 428.704 624.345 427.122 622.426 426.398 cv
cp
509.625 425.421 mo
509.921 426.398 li
508.001 427.122 506.525 428.704 505.541 431.139 cv
504.532 433.575 504.04 436.598 504.04 440.202 cv
504.04 443.802 504.532 446.817 505.541 449.248 cv
506.525 451.682 508.001 453.26 509.921 453.985 cv
509.625 454.962 li
507.14 454.309 505.221 452.619 503.867 449.887 cv
502.514 447.156 501.85 443.925 501.85 440.19 cv
501.85 436.458 502.514 433.227 503.867 430.494 cv
505.221 427.763 507.14 426.071 509.625 425.421 cv
cp
ef
510.979 430.877 mo
517.598 430.877 li
517.598 431.665 li
517.18 431.714 516.885 431.829 516.688 432.011 cv
516.491 432.195 516.392 432.453 516.392 432.787 cv
516.392 433.05 516.417 433.308 516.466 433.558 cv
516.491 433.808 516.614 434.209 516.762 434.759 cv
519.124 443.331 li
522.077 434.793 li
522.2 434.459 522.298 434.145 522.372 433.85 cv
522.421 433.556 522.471 433.246 522.471 432.92 cv
522.471 432.529 522.372 432.23 522.151 432.023 cv
521.954 431.817 521.634 431.697 521.216 431.665 cv
521.216 430.877 li
526.383 430.877 li
526.383 431.665 li
526.063 431.714 525.817 431.81 525.596 431.957 cv
525.399 432.104 525.202 432.316 525.03 432.591 cv
524.857 432.866 524.661 433.312 524.414 433.934 cv
519.419 447.262 li
516.639 447.262 li
512.701 433.887 li
512.529 433.288 512.381 432.866 512.258 432.615 cv
512.135 432.365 511.988 432.161 511.791 432.006 cv
511.594 431.849 511.323 431.736 510.979 431.665 cv
cp
ef
537.506 443.34 mo
537.924 443.34 538.342 443.358 538.761 443.392 cv
539.154 443.426 539.696 443.502 540.336 443.62 cv
540.336 445.666 li
539.179 445.666 li
539.056 445.29 538.908 445 538.736 444.796 cv
538.588 444.593 538.391 444.45 538.195 444.372 cv
538.022 444.291 537.776 444.251 537.506 444.251 cv
537.137 444.251 536.817 444.34 536.595 444.517 cv
536.349 444.691 536.251 444.936 536.251 445.253 cv
536.251 445.474 536.275 445.666 536.374 445.823 cv
536.448 445.98 536.595 446.135 536.817 446.284 cv
537.013 446.434 537.432 446.633 538.022 446.886 cv
538.908 447.247 539.523 447.642 539.893 448.065 cv
540.262 448.489 540.434 449 540.434 449.597 cv
540.434 450.473 540.139 451.149 539.499 451.62 cv
538.884 452.092 537.973 452.327 536.841 452.327 cv
535.857 452.327 534.799 452.19 533.618 451.915 cv
533.618 449.815 li
534.774 449.815 li
534.922 450.348 535.143 450.748 535.463 451.014 cv
535.759 451.281 536.177 451.414 536.669 451.414 cv
537.112 451.414 537.456 451.313 537.678 451.114 cv
537.899 450.915 538.022 450.626 538.022 450.248 cv
538.022 450.007 537.973 449.801 537.85 449.631 cv
537.752 449.462 537.579 449.3 537.358 449.145 cv
537.112 448.99 536.694 448.787 536.128 448.536 cv
535.316 448.178 534.725 447.785 534.356 447.355 cv
533.987 446.925 533.79 446.442 533.79 445.901 cv
533.79 445.376 533.938 444.919 534.257 444.534 cv
534.553 444.146 534.996 443.851 535.562 443.647 cv
536.128 443.441 536.767 443.34 537.506 443.34 cv
cp
531.28 443.34 mo
531.624 443.34 531.994 443.377 532.387 443.453 cv
532.387 445.877 li
530.812 445.877 li
530.714 445.536 530.566 445.275 530.419 445.096 cv
530.246 444.914 530.025 444.823 529.754 444.823 cv
529.631 444.823 529.484 444.863 529.336 444.941 cv
529.188 445.02 529.041 445.13 528.918 445.275 cv
528.77 445.418 528.672 445.565 528.622 445.712 cv
528.573 445.862 528.524 446.014 528.524 446.167 cv
528.499 446.319 528.499 446.545 528.499 446.849 cv
528.499 449.651 li
528.499 450.206 528.499 450.594 528.549 450.817 cv
528.598 451.038 528.672 451.213 528.795 451.34 cv
528.918 451.465 529.139 451.554 529.434 451.608 cv
529.434 452.185 li
525.079 452.185 li
525.079 451.608 li
525.374 451.532 525.571 451.431 525.669 451.308 cv
525.768 451.186 525.842 451.019 525.891 450.807 cv
525.94 450.599 525.94 450.213 525.94 449.658 cv
525.94 446.051 li
525.94 445.619 525.94 445.297 525.916 445.091 cv
525.916 444.882 525.866 444.715 525.817 444.59 cv
525.768 444.465 525.669 444.362 525.571 444.283 cv
525.448 444.205 525.251 444.136 524.98 444.077 cv
524.98 443.48 li
527.392 443.409 li
528.499 443.409 li
528.376 444.735 li
528.475 444.762 li
528.918 444.259 529.361 443.895 529.803 443.672 cv
530.246 443.451 530.739 443.34 531.28 443.34 cv
cp
543.018 441.285 mo
545.134 441.285 li
545.134 443.48 li
547.644 443.48 li
547.644 444.578 li
545.134 444.578 li
545.134 448.536 li
545.134 449.197 545.159 449.685 545.232 450 cv
545.282 450.316 545.38 450.55 545.528 450.699 cv
545.675 450.847 545.872 450.923 546.069 450.923 cv
546.364 450.923 546.61 450.874 546.807 450.773 cv
547.029 450.675 547.201 450.547 547.373 450.395 cv
547.939 451.134 li
547.422 451.571 546.955 451.88 546.537 452.06 cv
546.094 452.236 545.651 452.327 545.183 452.327 cv
544.322 452.327 543.657 452.092 543.239 451.62 cv
542.796 451.149 542.575 450.437 542.575 449.484 cv
542.575 444.578 li
541.492 444.578 li
541.492 443.971 li
541.837 443.913 542.107 443.824 542.279 443.709 cv
542.452 443.591 542.575 443.434 542.673 443.24 cv
542.772 443.043 542.845 442.785 542.895 442.471 cv
542.944 442.154 542.993 441.759 543.018 441.285 cv
cp
ef
555.814 440.978 mo
570.557 440.978 li
570.557 439.39 li
555.814 439.39 li
cp
ef
583.62 430.877 mo
590.239 430.877 li
590.239 431.665 li
589.821 431.714 589.526 431.829 589.329 432.011 cv
589.132 432.195 589.034 432.453 589.034 432.787 cv
589.034 433.05 589.058 433.308 589.107 433.558 cv
589.132 433.808 589.255 434.209 589.403 434.759 cv
591.765 443.331 li
594.718 434.793 li
594.841 434.459 594.939 434.145 595.013 433.85 cv
595.062 433.556 595.112 433.246 595.112 432.92 cv
595.112 432.529 595.013 432.23 594.792 432.023 cv
594.595 431.817 594.275 431.697 593.857 431.665 cv
593.857 430.877 li
599.024 430.877 li
599.024 431.665 li
598.704 431.714 598.458 431.81 598.237 431.957 cv
598.04 432.104 597.843 432.316 597.671 432.591 cv
597.499 432.866 597.302 433.312 597.056 433.934 cv
592.06 447.262 li
589.28 447.262 li
585.342 433.887 li
585.17 433.288 585.023 432.866 584.9 432.615 cv
584.777 432.365 584.629 432.161 584.432 432.006 cv
584.235 431.849 583.964 431.736 583.62 431.665 cv
cp
ef
614.527 452.747 mo
614.33 452.912 614.158 453.091 614.059 453.282 cv
613.961 453.476 613.887 453.697 613.887 453.95 cv
613.887 454.37 614.084 454.682 614.453 454.886 cv
614.822 455.087 615.388 455.188 616.176 455.188 cv
616.914 455.188 617.48 455.065 617.874 454.82 cv
618.243 454.574 618.44 454.228 618.44 453.783 cv
618.44 453.415 618.316 453.155 618.095 453.007 cv
617.849 452.858 617.504 452.784 617.061 452.784 cv
615.536 452.784 li
615.117 452.784 614.773 452.772 614.527 452.747 cv
cp
616.126 444.244 mo
615.683 444.244 615.364 444.411 615.167 444.747 cv
614.945 445.084 614.847 445.602 614.847 446.297 cv
614.847 447.033 614.945 447.583 615.167 447.942 cv
615.364 448.303 615.708 448.482 616.151 448.482 cv
616.545 448.482 616.865 448.315 617.086 447.981 cv
617.283 447.65 617.406 447.139 617.406 446.456 cv
617.406 445.734 617.283 445.187 617.086 444.809 cv
616.865 444.433 616.545 444.244 616.126 444.244 cv
cp
608.596 443.409 mo
609.704 443.409 li
609.704 449.651 li
609.704 450.211 609.704 450.596 609.753 450.805 cv
609.778 451.011 609.852 451.178 609.95 451.303 cv
610.073 451.429 610.27 451.532 610.565 451.608 cv
610.565 452.185 li
606.283 452.185 li
606.283 451.608 li
606.579 451.532 606.776 451.431 606.874 451.308 cv
606.972 451.186 607.046 451.019 607.095 450.807 cv
607.145 450.599 607.145 450.213 607.145 449.658 cv
607.145 445.577 li
607.145 445.167 607.12 444.878 607.071 444.703 cv
607.022 444.531 606.923 444.401 606.825 444.31 cv
606.702 444.219 606.48 444.141 606.185 444.077 cv
606.185 443.48 li
cp
616.151 443.34 mo
616.446 443.34 616.717 443.355 616.938 443.385 cv
617.185 443.412 617.406 443.446 617.603 443.48 cv
620.802 443.48 li
620.802 444.657 li
619.276 444.49 li
619.252 444.585 li
619.424 444.75 619.547 444.973 619.67 445.258 cv
619.768 445.54 619.818 445.882 619.818 446.28 cv
619.818 447.299 619.522 448.07 618.882 448.597 cv
618.267 449.123 617.357 449.386 616.176 449.386 cv
615.585 449.386 615.117 449.334 614.748 449.229 cv
614.453 449.491 614.305 449.776 614.305 450.081 cv
614.305 450.255 614.33 450.39 614.404 450.483 cv
614.478 450.577 614.601 450.648 614.773 450.699 cv
614.97 450.748 615.216 450.773 615.536 450.773 cv
617.701 450.773 li
618.686 450.773 619.424 450.962 619.916 451.343 cv
620.408 451.723 620.63 452.315 620.63 453.115 cv
620.63 453.742 620.457 454.282 620.113 454.731 cv
619.744 455.18 619.252 455.524 618.587 455.762 cv
617.923 455.998 617.135 456.118 616.225 456.118 cv
615.56 456.118 614.97 456.089 614.429 456.03 cv
613.887 455.971 613.42 455.866 613.05 455.711 cv
612.657 455.554 612.361 455.343 612.165 455.072 cv
611.943 454.805 611.845 454.461 611.845 454.046 cv
611.845 453.712 611.943 453.405 612.165 453.125 cv
612.361 452.845 612.681 452.605 613.05 452.406 cv
612.804 452.229 612.632 452.028 612.509 451.799 cv
612.411 451.571 612.337 451.291 612.337 450.957 cv
612.337 450.601 612.46 450.262 612.657 449.938 cv
612.854 449.616 613.223 449.265 613.715 448.887 cv
613.272 448.629 612.927 448.291 612.681 447.873 cv
612.435 447.453 612.337 446.965 612.337 446.402 cv
612.337 445.7 612.484 445.121 612.829 444.661 cv
613.174 444.202 613.616 443.866 614.182 443.655 cv
614.773 443.446 615.413 443.34 616.151 443.34 cv
cp
601.583 443.34 mo
602.002 443.34 602.42 443.358 602.838 443.392 cv
603.232 443.426 603.773 443.502 604.413 443.62 cv
604.413 445.666 li
603.257 445.666 li
603.134 445.29 602.986 445 602.814 444.796 cv
602.666 444.593 602.469 444.45 602.272 444.372 cv
602.1 444.291 601.854 444.251 601.583 444.251 cv
601.214 444.251 600.894 444.34 600.673 444.517 cv
600.427 444.691 600.328 444.936 600.328 445.253 cv
600.328 445.474 600.353 445.666 600.451 445.823 cv
600.525 445.98 600.673 446.135 600.894 446.284 cv
601.091 446.434 601.51 446.633 602.1 446.886 cv
602.986 447.247 603.601 447.642 603.97 448.065 cv
604.339 448.489 604.512 449 604.512 449.597 cv
604.512 450.473 604.216 451.149 603.577 451.62 cv
602.961 452.092 602.051 452.327 600.919 452.327 cv
599.935 452.327 598.877 452.19 597.695 451.915 cv
597.695 449.815 li
598.852 449.815 li
599 450.348 599.221 450.748 599.541 451.014 cv
599.836 451.281 600.255 451.414 600.747 451.414 cv
601.19 451.414 601.534 451.313 601.756 451.114 cv
601.977 450.915 602.1 450.626 602.1 450.248 cv
602.1 450.007 602.051 449.801 601.928 449.631 cv
601.829 449.462 601.657 449.3 601.436 449.145 cv
601.19 448.99 600.771 448.787 600.205 448.536 cv
599.393 448.178 598.803 447.785 598.434 447.355 cv
598.065 446.925 597.868 446.442 597.868 445.901 cv
597.868 445.376 598.015 444.919 598.335 444.534 cv
598.63 444.146 599.073 443.851 599.639 443.647 cv
600.205 443.441 600.845 443.34 601.583 443.34 cv
cp
607.219 439.979 mo
609.63 439.979 li
609.63 442.127 li
607.219 442.127 li
cp
ef
26.5153 456.443 mo
33.1332 456.443 li
33.1332 457.231 li
32.7183 457.277 32.411 457.393 32.2116 457.577 cv
32.0121 457.759 31.9124 458.019 31.9124 458.353 cv
31.9124 458.616 31.9363 458.871 31.9843 459.124 cv
32.032 459.374 32.1319 459.775 32.2835 460.322 cv
34.653 468.897 li
37.6081 460.359 li
37.7286 460.025 37.8221 459.711 37.891 459.416 cv
37.9575 459.121 37.9919 458.81 37.9919 458.483 cv
37.9919 458.095 37.891 457.796 37.6868 457.589 cv
37.4826 457.381 37.17 457.263 36.7468 457.231 cv
36.7468 456.443 li
41.9045 456.443 li
41.9045 457.231 li
41.6018 457.277 41.3435 457.376 41.1343 457.523 cv
40.9227 457.67 40.7307 457.881 40.5585 458.156 cv
40.3862 458.431 40.1869 458.878 39.9556 459.5 cv
34.9401 472.825 li
32.1757 472.825 li
28.2265 459.45 li
28.051 458.854 27.9034 458.431 27.7838 458.179 cv
27.6639 457.928 27.5084 457.727 27.317 457.57 cv
27.1255 457.415 26.8583 457.302 26.5153 457.231 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
53.6866 469.817 mo
53.2362 469.817 52.877 470.046 52.6088 470.502 cv
52.343 470.959 52.183 471.617 52.1314 472.477 cv
55.0597 472.477 li
55.035 471.58 54.9194 470.915 54.7078 470.475 cv
54.4961 470.036 54.1566 469.817 53.6866 469.817 cv
cp
53.8293 468.904 mo
54.3608 468.904 54.8283 468.965 55.2319 469.088 cv
55.633 469.211 55.9775 469.383 56.2654 469.601 cv
56.5509 469.822 56.7896 470.087 56.9766 470.397 cv
57.2005 470.765 57.3678 471.19 57.4835 471.669 cv
57.5967 472.15 57.6582 472.734 57.6631 473.424 cv
52.0871 473.424 li
52.092 474.483 52.2815 475.263 52.653 475.764 cv
53.0271 476.263 53.593 476.513 54.3559 476.513 cv
54.8013 476.513 55.2024 476.43 55.5616 476.263 cv
55.9184 476.096 56.3048 475.804 56.7207 475.381 cv
57.4343 476.155 li
56.8363 476.786 56.2433 477.233 55.6576 477.498 cv
55.072 477.761 54.3977 477.891 53.6349 477.891 cv
52.2692 477.891 51.2406 477.518 50.5516 476.774 cv
49.8626 476.027 49.5181 474.92 49.5181 473.451 cv
49.5181 472.504 49.6952 471.686 50.0496 470.998 cv
50.4064 470.311 50.9084 469.79 51.558 469.437 cv
52.2101 469.081 52.9656 468.904 53.8293 468.904 cv
cp
47.0942 468.904 mo
47.451 468.904 47.8275 468.943 48.2188 469.019 cv
48.2188 471.44 li
46.6291 471.44 li
46.5283 471.101 46.3978 470.841 46.2354 470.659 cv
46.0755 470.478 45.8589 470.387 45.5907 470.387 cv
45.4603 470.387 45.32 470.426 45.1625 470.507 cv
45.0075 470.586 44.8648 470.696 44.7319 470.839 cv
44.6015 470.984 44.508 471.128 44.4514 471.278 cv
44.3948 471.428 44.3579 471.578 44.3407 471.73 cv
44.3234 471.882 44.316 472.111 44.316 472.415 cv
44.316 475.214 li
44.316 475.772 44.3357 476.16 44.3776 476.383 cv
44.4169 476.604 44.5006 476.778 44.6236 476.904 cv
44.7467 477.029 44.9534 477.12 45.2462 477.171 cv
45.2462 477.751 li
40.9104 477.751 li
40.9104 477.171 li
41.1934 477.095 41.3878 476.997 41.496 476.874 cv
41.6043 476.751 41.6781 476.584 41.715 476.373 cv
41.7544 476.162 41.7741 475.779 41.7741 475.224 cv
41.7741 471.617 li
41.7741 471.182 41.7667 470.863 41.752 470.655 cv
41.7372 470.448 41.7003 470.281 41.6461 470.156 cv
41.5895 470.028 41.5059 469.928 41.3902 469.849 cv
41.277 469.768 41.0777 469.699 40.7972 469.643 cv
40.7972 469.046 li
43.2062 468.975 li
44.316 468.975 li
44.1905 470.301 li
44.3062 470.326 li
44.7344 469.822 45.1748 469.461 45.6252 469.238 cv
46.0779 469.017 46.5676 468.904 47.0942 468.904 cv
cp
68.4953 465.184 mo
69.5953 465.184 li
69.5953 475.214 li
69.5953 475.772 69.6125 476.155 69.6469 476.363 cv
69.6839 476.575 69.7552 476.744 69.8635 476.869 cv
69.9718 476.995 70.176 477.095 70.4737 477.171 cv
70.4737 477.751 li
66.165 477.751 li
66.165 477.171 li
66.4652 477.095 66.6694 476.997 66.7802 476.874 cv
66.8934 476.751 66.9647 476.584 67.0016 476.378 cv
67.0361 476.169 67.0533 475.782 67.0533 475.214 cv
67.0533 468.369 li
67.0533 467.75 67.0459 467.303 67.0262 467.03 cv
67.009 466.758 66.9721 466.554 66.918 466.417 cv
66.8614 466.279 66.7802 466.171 66.6719 466.092 cv
66.5636 466.014 66.3594 465.945 66.0592 465.886 cv
66.0592 465.307 li
cp
63.9109 465.15 mo
64.4154 465.15 64.8633 465.189 65.257 465.272 cv
65.257 467.062 li
64.0611 467.062 li
63.9602 466.741 63.8494 466.502 63.7313 466.35 cv
63.6107 466.198 63.4533 466.122 63.2589 466.122 cv
63.0079 466.122 62.8135 466.205 62.6781 466.372 cv
62.5452 466.539 62.4517 466.777 62.4025 467.084 cv
62.3533 467.391 62.3287 467.823 62.3287 468.378 cv
62.3287 469.046 li
64.0241 469.046 li
64.0241 470.141 li
62.3287 470.141 li
62.3287 475.548 li
62.3287 475.988 62.3508 476.297 62.3976 476.479 cv
62.4443 476.661 62.528 476.803 62.6486 476.909 cv
62.7692 477.014 62.9808 477.103 63.2859 477.171 cv
63.2859 477.751 li
58.9058 477.751 li
58.9058 477.171 li
59.1814 477.09 59.3733 476.999 59.4816 476.899 cv
59.5899 476.801 59.6686 476.661 59.7154 476.484 cv
59.7621 476.305 59.7867 475.993 59.7867 475.548 cv
59.7867 470.141 li
58.7139 470.141 li
58.7139 469.537 li
59.0239 469.491 59.238 469.432 59.3586 469.365 cv
59.4791 469.299 59.5776 469.191 59.6539 469.046 cv
59.7301 468.899 59.7818 468.668 59.8113 468.351 cv
59.9049 467.298 60.2961 466.502 60.9851 465.96 cv
61.6741 465.42 62.651 465.15 63.9109 465.15 cv
cp
ef
63.1776 491.673 mo
62.683 491.673 62.3287 491.68 62.1146 491.698 cv
62.1146 505.131 li
62.2573 505.156 62.6191 505.168 63.2023 505.168 cv
64.4302 505.168 65.3874 504.92 66.069 504.427 cv
66.7506 503.933 67.2699 503.182 67.6242 502.17 cv
67.9786 501.158 68.1582 499.889 68.1582 498.362 cv
68.1582 496.171 67.73 494.509 66.8761 493.375 cv
66.0223 492.24 64.7894 491.673 63.1776 491.673 cv
cp
57.1242 490.276 mo
63.3474 490.276 li
64.6787 490.276 65.791 490.379 66.6842 490.588 cv
67.5799 490.794 68.3723 491.121 69.0662 491.565 cv
69.7601 492.012 70.3212 492.542 70.7469 493.161 cv
71.1751 493.777 71.4925 494.494 71.6992 495.31 cv
71.9059 496.125 72.0117 497.048 72.0117 498.074 cv
72.0117 499.746 71.7509 501.176 71.2317 502.362 cv
70.769 503.427 70.1022 504.287 69.2286 504.94 cv
68.355 505.593 67.3117 506.042 66.0985 506.29 cv
65.1733 506.482 63.9922 506.577 62.5575 506.577 cv
57.1242 506.577 li
57.1242 505.789 li
57.5548 505.676 57.8477 505.549 58.0027 505.406 cv
58.1577 505.264 58.2635 505.075 58.3201 504.839 cv
58.3767 504.603 58.4038 504.183 58.4038 503.579 cv
58.4038 493.286 li
58.4038 492.68 58.3767 492.26 58.3251 492.027 cv
58.2734 491.791 58.1676 491.602 58.0076 491.459 cv
57.8501 491.315 57.5548 491.184 57.1242 491.064 cv
cp
39.9605 490.276 mo
44.8082 490.276 li
49.0431 497.62 li
49.3064 498.082 49.6509 498.708 50.0717 499.496 cv
50.495 500.284 50.8715 501.028 51.1987 501.728 cv
51.3882 501.728 li
51.3021 499.825 51.2578 497.748 51.2578 495.494 cv
51.2578 493.274 li
51.2578 492.749 51.2381 492.373 51.1987 492.144 cv
51.1569 491.919 51.0929 491.744 51.0068 491.626 cv
50.9182 491.506 50.8099 491.408 50.6771 491.334 cv
50.5466 491.258 50.3129 491.167 49.9782 491.064 cv
49.9782 490.276 li
54.5011 490.276 li
54.5011 491.064 li
54.1812 491.167 53.9572 491.256 53.8244 491.327 cv
53.6939 491.398 53.5807 491.494 53.4897 491.614 cv
53.3986 491.734 53.3273 491.914 53.2805 492.157 cv
53.2313 492.4 53.2092 492.773 53.2092 493.274 cv
53.2092 506.577 li
50.1677 506.577 li
44.7836 497.286 li
44.0577 496.029 43.5237 495.042 43.1792 494.325 cv
43.0709 494.325 li
43.1521 496.036 43.1915 497.844 43.1915 499.746 cv
43.1915 503.592 li
43.1915 504.188 43.221 504.606 43.2825 504.844 cv
43.3416 505.085 43.4499 505.274 43.6049 505.411 cv
43.7599 505.551 44.0527 505.676 44.4834 505.789 cv
44.4834 506.577 li
39.9605 506.577 li
39.9605 505.789 li
40.3838 505.676 40.6717 505.549 40.8292 505.401 cv
40.9842 505.254 41.0925 505.065 41.1515 504.834 cv
41.2106 504.603 41.2401 504.188 41.2401 503.592 cv
41.2401 493.262 li
41.2401 492.665 41.2155 492.253 41.1638 492.027 cv
41.1122 491.798 41.0039 491.609 40.839 491.459 cv
40.6766 491.307 40.3838 491.177 39.9605 491.064 cv
cp
31.4985 490.084 mo
33.2457 490.084 34.8493 490.296 36.3093 490.718 cv
36.3093 494.109 li
34.6697 494.109 li
34.4864 493.441 34.2769 492.925 34.0415 492.564 cv
33.8062 492.201 33.503 491.931 33.132 491.752 cv
32.7609 491.572 32.2842 491.482 31.7018 491.482 cv
30.9121 491.482 30.214 491.722 29.6077 492.206 cv
29.0014 492.687 28.5225 493.456 28.1716 494.509 cv
27.8205 495.565 27.645 496.901 27.645 498.516 cv
27.645 500.721 27.9263 502.416 28.4885 503.597 cv
29.0511 504.78 29.8429 505.369 30.8641 505.369 cv
31.5662 505.369 32.0849 505.161 32.4198 504.743 cv
32.755 504.326 32.9226 503.658 32.9226 502.742 cv
32.9226 502.29 li
32.9226 501.684 32.9026 501.252 32.8628 500.994 cv
32.8229 500.736 32.7609 500.542 32.6772 500.414 cv
32.5933 500.287 32.4838 500.184 32.3482 500.105 cv
32.2124 500.024 31.9732 499.933 31.6302 499.83 cv
31.6302 499.042 li
37.7582 499.042 li
37.7582 499.83 li
37.3595 499.948 37.0864 500.085 36.9437 500.235 cv
36.8009 500.387 36.7025 500.589 36.6508 500.839 cv
36.5992 501.09 36.5726 501.441 36.5726 501.895 cv
36.5726 506.398 li
34.8493 506.757 li
34.0355 505.895 li
33.0862 506.477 31.9971 506.767 30.7684 506.767 cv
28.4388 506.767 26.7016 506.089 25.5566 504.731 cv
24.4118 503.373 23.8395 501.318 23.8395 498.563 cv
23.8395 496.78 24.1485 495.253 24.7669 493.984 cv
25.3851 492.714 26.2788 491.747 27.4474 491.081 cv
28.6163 490.418 29.9667 490.084 31.4985 490.084 cv
cp
ef
.61709 .780514 0 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f329fef63f1000000cc000000606376
74203fba58ec0000012c000006886670676da1ea42ac000007b400000913
676c7966eba0f3e30000f8b80000446868656164f85c7982000010c80000
0036686865610dbb1cd30000110000000024686d747831ce1a2500001124
000069ac6c6f636101b7f29300007ad0000036566d61787028a8181e0000
b128000000206e616d65df42d3300000b1480000308b70726570f940ca73
0000e1d4000016e1676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e4002effc000247b00000009000000004d53202000200000
25cc0600fe0001c4079e0226200001ff0000000003c0050e000000200014
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000005aa001500a0fff8ff42fea2fdbc03b6015401cc
0108010e00ff00f5006e014000a0055e006b0570fff60122fff10547ffec
04faffec0131fff4000a03a0036600b400e1044c007c40465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d000001000000063ae1bdcd10815f0f3cf50019080000000000
bbeb7ccc00000000d7497752fbdafd350a1a085000010009000200000000
0000000100000600fe0001c40aa0fbdafa860a1a00010000000000000000
00000000000019ac040e0000000000000000000001cf0000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000043c004f000000000000
0000000000000000000000000000050b008d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000005190049000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000006fe008d00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000481008d00000000000000000000000003c8003f0000
00000000000000000000000000000000000003f6000c0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000447000a00000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003cb005a0000000000000000
00000000000000000000000004910086000000000000000000000000038f
008600000000000000000000000000000000000000000000000000000000
000000000000000000000000049c00580000000000000000000000000000
0000049c0086000000000000000002100086000000000000000000000000
000000000000000000000000000000000210001800000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000648008604c700860000000000000000000000000000
00000000000004da00550000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003fd00860000
00000000000004250086000000000000000000000000036f004300000000
00000000000000000000000000000000037b001b00000000000000000000
000004ac0084000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003f30047000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000359004800000000000000000000
00000000000000000000077d004800000000060e004800000000044b004b
0000000000000000000000000407004a0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000044b007e000000000000000001f7006b0000
000000000000000000000000000000000000000000000000000000000000
01f7007e0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0682007e044b007e00000000000000000000000000000000000000000000
0000044d0048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000044b007e000000000000
000002d8007e000000000000000000000000033100490000000000000000
00000000000000000000000005d4004900000000000000000000000002c6
00170000000000000000000000000000000004af00170000000000000000
00000000000000000000000000000000000000000000000004af00170540
001700000000072800170000000000000000000000000000000000000000
00000000000000000000000007280017044b007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002bf0036000000000244003802f5
003a02c7003a000000000000000002fb005a017a004f0000000000000000
00000000046c005a02f9005a02f5003902f5005a000000000200005a023a
003c01fa001c02fb005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001f7000001e200000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000029b00e600000000000000000000
0000000000000000000000000000026900cf000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000038200790000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004c1006600000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003160054036b00780000
000000000000037c00550000000000000000000000000000000000000000
049a007800000000000000000000000000000000030d00780288003a02b0
001e00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000036b007800000000
00000000037c00550000000000000000000000000000000000000000049a
00780000000000000000000000000000000000000000030d007802b0001e
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000019900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000ffba000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00>
<0000009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e01300130013001300130013001990199019901990199
0199019901990199019901990199019901990199025b025b025b025b025b
025b025b025b025b025b025b025b025b025b025b025b025b025b025b025b
025b025b025b025b025b025b025b025b025b031e031e031e031e031e031e
031e031e031e031e031e031e031e031e031e031e031e031e031e031e031e
031e03ce03ce03ce03ce04890489048904890489048904e704e704e704e7
04e704e704e704e704e704e704e704e704e704e704e704e704e704e704e7
04e704e704e704e704e704e704e704e704e704e704e704e7054d054d054d
054d054d054d054d054d054d054d054d054d054d054d05b405b405b405b4
05b405b405f905f905f905f9065806580658065806580658065806580658
0658065806d406d406d406d406d4073207320732075e075e075e075e075e
075e075e075e076907690769076907690769076907690769076907690769
076907df084a084a084a084a084a084a0898089808980898089808980898
0898089808980898089808f208f208f2096f096f096f096f09f809f809f8
09f809f809f80a380a380a380a380a880a880a880a880a880a880a880a88
0a880a880a880a880a880a880a880a880a880a880a880a880a880a880a88
0a880a880a880a880b730b730b730b730b730b730b730b730b730b730b73
0b730b730b730c080c080c080c080c080c080cd90cd90db60db60e510e51
0e510e510f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f990f990f990fed0fed0fed0fed0fed0fed0fed0fed0fed1019
1019101910191019101910191019101910191019101910191019101910da
116011601160116011601160116011d211d211d211d211d211d211d211d2
11d211d211d211d212731273127312f112f112f112f113c313c313c313c3
13c313c314c414c414c414c4155a155a155a155a155a1566156615661566
1566156615661566156615dd168d168d1699169916991699169916991699
16991699175617d117d117d117d117d117d117d117d117d117d117d117d1
17d117d117d117d117d117d117d117d117d117d117d117d117d117d117d1
17d117d117d118401840189d190319661966196619c31a061a061a061a06
1a861adc1b251b8f1b8f1be21c581cb11d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d2e1d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521da01da01da01da01da01da01da01ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e
1f4e1f4e1f4e1f4e1fba1fc21fc21fc21fca1fca1fca1fca1fca1fca1fd2
1fd21fd21fd21fd21fda2055205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d20a220a220a2
211a211a211a211a211a211a217c217c217c217c217c217c21ef22232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
22342234223422342234223422342234223422340000000100001b2a0093
00100078000300020010002f006000000cf816e1000200010000002d0222
0000000300000000021000000000000300000001000e0210000000030000
0002000804d60000000300000003002e04b00000000300000004001804c6
0000000300000005001804de0000000300000006001804f6000000030000
00070076050e0000000300000008002a0592000000030000000900200796
000000030000000a02a00210000000030000000b005607b6000000030000
000c002a080c000000030000000d0e060836000000030000000e004a07b6
00010000000000000108163c000100000000000100071744000100000000
0002000418a70001000000000003001718940001000000000004000c189f
0001000000000005000c18ab0001000000000006000c18b7000100000000
0007003b18c30001000000000008001516430001000000000009001018fe
000100000000000a01501744000100000000000b002b190e000100000000
000c00151939000100000000000d0703194e000100000000000e0025190e
0003000104090000021205840003000104090001000e0210000300010409
0002000804d60003000104090003002e04b00003000104090004001804c6
0003000104090005001804de0003000104090006001804f6000300010409
00070076050e0003000104090008002a0592000300010409000900200796
000300010409000a02a00210000300010409000b005607b6000300010409
000c002a080c000300010409000d0e182051000300010409000e004a07b6
00a9002000320030003100380020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00430061006c006900620072
0069002000690073002000610020006d006f006400650072006e00200073
0061006e0073002000730065007200690066002000660061006d0069006c
00790020007700690074006800200073007500620074006c006500200072
006f0075006e00640069006e006700730020006f006e0020007300740065
006d007300200061006e006400200063006f0072006e006500720073002e
002000490074002000660065006100740075007200650073002000720065
0061006c0020006900740061006c006900630073002c00200073006d0061
006c006c00200063006100700073002c00200061006e00640020006d0075
006c007400690070006c00650020006e0075006d006500720061006c0020
0073006500740073002e0020004900740073002000700072006f0070006f
007200740069006f006e007300200061006c006c006f0077002000680069
0067006800200069006d007000610063007400200069006e002000740069
006700680074006c007900200073006500740020006c0069006e00650073
0020006f0066002000620069006700200061006e006400200073006d0061
006c006c0020007400650078007400200061006c0069006b0065002e0020
00430061006c0069006200720069002700730020006d0061006e00790020
00630075007200760065007300200061006e006400200074006800650020
006e00650077002000720061007300740065007200690073006500720020
007400650061006d00200075007000200069006e00200062006900670067
00650072002000730069007a0065007300200074006f0020007200650076
00650061006c002000610020007700610072006d00200061006e00640020
0073006f006600740020006300680061007200610063007400650072002e
004d006900630072006f0073006f00660074003a002000430061006c0069
00620072006900200042006f006c006400560065007200730069006f006e
00200036002e0032003300430061006c0069006200720069002d0042006f
006c006400430061006c0069006200720069002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000740068
00650020004d006900630072006f0073006f00660074002000670072006f
007500700020006f006600200063006f006d00700061006e006900650073
002e00a9002000320030003100380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e000d000a0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
00700073003a002f002f0064006f00630073002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f00610062006f007500740068007400740070003a
002f002f006c00750063006100730066006f006e00740073002e0063006f
006d004d006900630072006f0073006f0066007400200073007500700070
006c00690065006400200066006f006e0074002e00200059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e007400200074006f0020006300720065006100740065002c00200064
006900730070006c00610079002c00200061006e00640020007000720069
006e007400200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
0020006c006900630065006e007300650020007400650072006d00730020
006f00720020007400650072006d00730020006f00660020007500730065
002c0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000700072006f0064007500630074002c002000730065
00720076006900630065002c0020006f007200200063006f006e00740065
006e007400200069006e0020007700680069006300680020007400680069
007300200066006f006e0074002000770061007300200069006e0063006c
0075006400650064002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e00200041006e00790020006f00740068006500720020
007500730065002000690073002000700072006f00680069006200690074
00650064002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c6456657273696f6e20362e323343616c
696272692d426f6c6443616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f7468747470733a
2f2f646f63732e6d6963726f736f66742e636f6d2f7479706f6772617068
792f61626f7574687474703a2f2f6c75636173666f6e74732e636f6d4d69
63726f736f667420737570706c69656420666f6e742e20596f75206d6179
20757365207468697320666f6e7420746f206372656174652c2064697370
6c61792c20616e64207072696e7420636f6e74656e74206173207065726d
697474656420627920746865206c6963656e7365207465726d73206f7220
7465726d73206f66207573652c206f6620746865204d6963726f736f6674
2070726f647563742c20736572766963652c206f7220636f6e74656e7420
696e207768696368207468697320666f6e742077617320696e636c756465
642e20596f75206d6179206f6e6c792028692920656d6265642074686973
20666f6e7420696e20636f6e74656e74206173207065726d697474656420
62792074686520656d62656464696e67207265737472696374696f6e7320
696e636c7564656420696e207468697320666f6e743b20616e6420286969
292074656d706f726172696c7920646f776e6c6f6164207468697320666f
6e7420746f2061207072696e746572206f72206f74686572206f75747075
742064657669636520746f2068656c70207072696e7420636f6e74656e74
2e20416e79206f74686572207573652069732070726f686962697465642e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d004d0069006300
72006f0073006f0066007400200073007500700070006c00690065006400
200066006f006e0074002e00200059006f00750020006d00610079002000
75007300650020007400680069007300200066006f006e00740020007400
6f0020006300720065006100740065002c00200064006900730070006c00
610079002c00200061006e00640020007000720069006e00740020006300
6f006e00740065006e00740020006100730020007000650072006d006900
7400740065006400200062007900200074006800650020006c0069006300
65006e007300650020007400650072006d00730020006f00720020007400
650072006d00730020006f00660020007500730065002c0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
700072006f0064007500630074002c002000730065007200760069006300
65002c0020006f007200200063006f006e00740065006e00740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e0074002000770061007300200069006e0063006c007500640065006400
2e00200059006f00750020006d006100790020006f006e006c0079002000
280069002900200065006d00620065006400200074006800690073002000
66006f006e007400200069006e00200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
79002000740068006500200065006d00620065006400640069006e006700
20007200650073007400720069006300740069006f006e00730020006900
6e0063006c007500640065006400200069006e0020007400680069007300
200066006f006e0074003b00200061006e00640020002800690069002900
2000740065006d0070006f0072006100720069006c007900200064006f00
77006e006c006f006100640020007400680069007300200066006f006e00
7400200074006f002000610020007000720069006e007400650072002000
6f00720020006f00740068006500720020006f0075007400700075007400
2000640065007600690063006500200074006f002000680065006c007000
20007000720069006e007400200063006f006e00740065006e0074002e00
200041006e00790020006f00740068006500720020007500730065002000
690073002000700072006f0068006900620069007400650064002e000d00
0a000d000a00540068006500200066006f006c006c006f00770069006e00
670020006c006900630065006e00730065002c0020006200610073006500
640020006f006e00200074006800650020004d004900540020006c006900
630065006e00730065002000280068007400740070003a002f002f006500
6e002e00770069006b006900700065006400690061002e006f0072006700
2f00770069006b0069002f004d00490054005f004c006900630065006e00
7300650029002c0020006100700070006c00690065007300200074006f00
200074006800650020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200066006f007200
20004200690062006c006900630061006c00200048006500620072006500
770020201c004c00610079006f007500740020004c006f00670069006320
1d0020006100730020006a006f0069006e0074006c007900200064006500
760065006c006f007000650064002000620079002000520061006c007000
68002000480061006e0063006f0063006b00200061006e00640020004a00
6f0068006e00200048007500640073006f006e002e0020000d000a000d00
0a005000650072006d0069007300730069006f006e002000690073002000
68006500720065006200790020006700720061006e007400650064002c00
2000660072006500650020006f0066002000630068006100720067006500
2c00200074006f00200061006e007900200070006500720073006f006e00
20006f0062007400610069006e0069006e00670020006100200063006f00
7000790020006f006600200074006800650020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
480065006200720065007700200061006e00640020006100730073006f00
630069006100740065006400200064006f00630075006d0065006e007400
6100740069006f006e002000660069006c00650073002000280074006800
650020201c004c00610079006f007500740020004c006f00670069006300
200053006f006600740077006100720065201d0029002c00200074006f00
20006400650061006c00200069006e00200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
7700610072006500200077006900740068006f0075007400200072006500
73007400720069006300740069006f006e002c00200069006e0063006c00
7500640069006e006700200077006900740068006f007500740020006c00
69006d00690074006100740069006f006e00200074006800650020007200
69006700680074007300200074006f0020007500730065002c0020006300
6f00700079002c0020006d006f0064006900660079002c0020006d006500
7200670065002c0020007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c0020007300750062006c00
6900630065006e00730065002c00200061006e0064002f006f0072002000
730065006c006c00200063006f00700069006500730020006f0066002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f006600740077006100720065002c00200061006e006400
200074006f0020007000650072006d006900740020007000650072007300
6f006e007300200074006f002000770068006f006d002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f0066007400770061007200650020006900730020006600750072006e00
69007300680065006400200074006f00200064006f00200073006f002c00
20007300750062006a00650063007400200074006f002000740068006500
200066006f006c006c006f00770069006e006700200063006f006e006400
6900740069006f006e0073003a000d000a000d000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
20006e006f007400690063006500200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c0020006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f007200200073007500620073007400
61006e007400690061006c00200070006f007200740069006f006e007300
20006f006600200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002e00
0d000a000d000a00540048004500200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002700
4100530020004900530027002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f002000540048004500
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054002e00200049004e0020004e00
4f0020004500560045004e00540020005300480041004c004c0020005400
48004500200041005500540048004f005200530020004f00520020004300
4f005000590052004900470048005400200048004f004c00440045005200
530020004200450020004c004900410042004c004500200046004f005200
200041004e005900200043004c00410049004d002c002000440041004d00
410047004500530020004f00520020004f00540048004500520020004c00
49004100420049004c004900540059002c00200057004800450054004800
45005200200049004e00200041004e00200041004300540049004f004e00
20004f004600200043004f004e00540052004100430054002c0020005400
4f005200540020004f00520020004f005400480045005200570049005300
45002c002000410052004900530049004e0047002000460052004f004d00
2c0020004f005500540020004f00460020004f005200200049004e002000
43004f004e004e0045004300540049004f004e0020005700490054004800
2000540048004500200053004f0046005400570041005200450020004f00
52002000540048004500200055005300450020004f00520020004f005400
48004500520020004400450041004c0049004e0047005300200049004e00
2000540048004500200053004f004600540057004100520045002e000d00
0a0000>
<b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[16309 1205 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 316 18 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>IAAAAA+Calibri-Bold AddT42Char 
3 5392 258 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>IAAAAA+Calibri-Bold AddT42Char 
3 8242 373 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>IAAAAA+Calibri-Bold AddT42Char 
3 8896 381 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>IAAAAA+Calibri-Bold AddT42Char 
3 9124 393 <0002007efe95040003d7002a003d0094b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022711140e0223222e
023511343e0233321e0215153e0333321e0205342e0223220e0207111616
33323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e2919
0a274b4e532f628a5728fefa11294332193133361e35603431452c1501ed
77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a6928
3d29144d86b277396952310f223628feda4349325166>IAAAAA+Calibri-Bold AddT42Char 
3 9446 396 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>IAAAAA+Calibri-Bold AddT42Char 
3 9698 400 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>IAAAAA+Calibri-Bold AddT42Char 
3 10632 410 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>IAAAAA+Calibri-Bold AddT42Char 
3 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>IAAAAA+Calibri-Bold AddT42Char 
IAAAAA+Calibri-Bold /CharStrings get begin
/C 18 def
/a 258 def
/m 373 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
end
IAAAAA+Calibri-Bold /Encoding get
dup 67 /C put
dup 97 /a put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/IILCON+Calibri-Bold /IAAAAA+Calibri-Bold findfont ct_VMDictPut
/IILCON+Calibri-Bold*1 
[67{/.notdef}rp /C 29{/.notdef}rp /a 11{/.notdef}rp /m /.notdef /o 
/p /.notdef /r /s /t 139{/.notdef}rp]
IILCON+Calibri-Bold nf
IILCON+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
959.991 212.98 mo
(Comparators)
[12.9655 13.2837 20.0485 13.2595 11.8134 8.2594 11.8134 8.25952 12.9897 8.2594 0 ]xsh
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCON+Calibri-Bold gcheck setglobal} if

3 0 3 <> IILCON+Calibri-Bold AddT42Char 
3 818 39 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>IILCON+Calibri-Bold AddT42Char 
3 1596 90 <0002008dfffa044d050e00360044009bb10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1aed2b12392fed2b39012fed32d4edd4ed1112393930311bb12e10b8ffe8
b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b6402151
1755055500183f3f3f1aed2b12392fed2b3930315925140e0223222e0227
032e03232311140e0223222e023511343633213216171e0315140e02071e
031717161601342627262623231133323e02044d081e3a322a321d0c0474
152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e3c1d
332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b110c01
21314c331afe130a100a06060a100a04972c2704030b3657774d416b543e
130e2839492eff262303644058120506fe911b314400>IILCON+Calibri-Bold AddT42Char 
3 2322 100 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>IILCON+Calibri-Bold AddT42Char 
3 7330 286 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>IILCON+Calibri-Bold AddT42Char 
3 7736 346 <0001007efffa03d205700032006bb10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1aed2b1239012fed32d4ed30311bb22a1910b8ffe8b40b0f
014c10b8014d4009402d4a2446194c054c00183f3f3f3f1aed2b12393031
5925140e0223222e023511342e022322060711140e0223222e023511343e
0233321e021511363633321e021503d20c1c312425311c0c132439263062
350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a0505
0a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b06060b10
0afe13403f3c688b6300>IILCON+Calibri-Bold AddT42Char 
3 8628 374 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>IILCON+Calibri-Bold AddT42Char 
IILCON+Calibri-Bold /CharStrings get begin
/space 3 def
/G 39 def
/R 90 def
/T 100 def
/e 286 def
/h 346 def
/n 374 def
end
IILCON+Calibri-Bold /Encoding get
dup 32 /space put
dup 71 /G put
dup 82 /R put
dup 84 /T put
dup 101 /e put
dup 104 /h put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCON+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 10{/.notdef}rp /R 
/.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h 
4{/.notdef}rp /m /n /o /p /.notdef /r /s 
/t 139{/.notdef}rp]
IILCON+Calibri-Bold nf
IILCON+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
959.991 256.932 mo
(The Ramp )
[12.1318 13.2349 12.3773 5.02429 13.8477 12.1075 20.0483 13.2594 0 ]xsh
959.991 290.522 mo
(Generator)
[15.6121 12.4262 13.2595 12.3771 8.25946 11.8134 7.96533 13.2593 0 ]xsh
0 .356603 .845365 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCON+Calibri-Bold gcheck setglobal} if
3 608 24 <0002008d000004c0050e0012001f006fb10102435558bf0013029b000000
1a029200090018ffe8b40b0f014c18b8012e40090e511b180b0f014c1bb8
0154b240055400183f1aed2b3fed2b012fedd4ed30311bb90018ffe8b40b
0f014c18b8012e40090e511b180b0f014c1bb80154b240055400183f1aed
2b3fed2b30315901140e0223212226351134363321321e0205342e022323
1133323e0204c05daef9acfecb212d2d21014cadf1a556fef02b5f957985
896c946331029ab2fda04b272c04682c27519feaa35c9e7441fc903871a8
>IILCON+Calibri-Bold AddT42Char 
3 1948 94 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>IILCON+Calibri-Bold AddT42Char 
3 5862 272 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>IILCON+Calibri-Bold AddT42Char 
3 7986 349 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>IILCON+Calibri-Bold AddT42Char 
3 11948 437 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>IILCON+Calibri-Bold AddT42Char 
IILCON+Calibri-Bold /CharStrings get begin
/D 24 def
/S 94 def
/c 272 def
/i 349 def
/u 437 def
end
IILCON+Calibri-Bold /Encoding get
dup 68 /D put
dup 83 /S put
dup 99 /c put
dup 105 /i put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCON+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 2{/.notdef}rp /G 10{/.notdef}rp 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
IILCON+Calibri-Bold nf
IILCON+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
959.991 329.711 mo
(CDS Circuits)
[12.9655 15.4407 11.4704 5.539 13.039 5.90668 8.55359 10.3181 13.2595 5.90662 8.25964 0 
]xsh
113.404 495.697 mo
125.282 254.28 li
117.171 253.887 li
105.293 495.302 li
cp
.61709 .780514 0 0 cmyk
f
85.7254 491.049 mo
111 491.049 li
111 499.152 li
85.7254 499.152 li
cp
f
417.963 207.823 mo
417.963 219.978 li
414.936 219.978 li
414.936 207.823 li
cp
417.963 229.087 mo
417.963 241.242 li
414.936 241.242 li
414.936 229.087 li
cp
417.963 250.351 mo
417.963 262.506 li
414.936 262.506 li
414.936 250.351 li
cp
417.963 271.615 mo
417.963 283.77 li
414.936 283.77 li
414.936 271.615 li
cp
417.963 292.904 mo
417.963 305.058 li
414.936 305.058 li
414.936 292.904 li
cp
417.963 314.168 mo
417.963 326.322 li
414.936 326.322 li
414.936 314.168 li
cp
417.963 335.437 mo
417.963 347.591 li
414.936 347.591 li
414.936 335.437 li
cp
417.963 356.708 mo
417.963 368.862 li
414.936 368.862 li
414.936 356.708 li
cp
417.963 377.977 mo
417.963 390.131 li
414.936 390.131 li
414.936 377.977 li
cp
.899962 .828183 .680751 .520256 cmyk
f
741.009 404.933 mo
741.058 417.087 li
738.007 417.099 li
737.982 404.945 li
cp
741.108 426.204 mo
741.157 438.356 li
738.105 438.368 li
738.056 426.214 li
cp
741.181 447.473 mo
741.231 459.627 li
738.179 459.64 li
738.13 447.485 li
cp
741.255 468.742 mo
741.304 480.896 li
738.253 480.908 li
738.204 468.754 li
cp
741.354 490.013 mo
741.378 502.168 li
738.352 502.177 li
738.302 490.025 li
cp
741.427 511.282 mo
741.477 523.436 li
738.425 523.449 li
738.376 511.294 li
cp
741.501 532.553 mo
741.526 538.621 li
738.475 538.633 li
738.45 532.563 li
cp
f
688.398 538.638 mo
684.387 549.122 li
691.696 549.122 li
cp
687.906 535.389 mo
690.982 535.389 li
696.125 550.937 li
696.125 551.797 li
681.656 551.797 li
681.656 550.913 li
cp
.997223 .918425 .647791 .507591 cmyk
ef
gsave
12.1984 572.301 mo
1130.46 572.301 li
1130.46 17.7671 li
12.1984 17.7671 li
cp
eclp
%ADOBeginSubsetFont: KAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f328821eb1d000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c796625e47cb50000d1bc00004aa268656164fa71cec900001a800000
00366868656112c41fa400001ab800000024686d74789174285f00001adc
000054546c6f6361fcdfe92e00006f3000003b7e6d61787027ff11d80000
aab0000000206e616d65030148160000aad0000015c370726570664ecf85
0000c0940000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00006ff420024ff02000000000000004d53202000c00000
20830639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006fd719b9d5c595f0f3cf5001b080000000000b9e6
983d00000000d630eee4f434ec4a16f118ef000000090002000000000000
00010000063bfe390161175af434fda416f1000100000000000000000000
000000000c6c054400be0000000001c3000001c3000004fc000600000000
0480007700000000049a00790000000000000000057e0079000000000000
000005090079044b0079068600750000000000000000048b007900000000
0000000003f8007000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004700069000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034f
00530000000002b500250000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000045dfffe0000000003ef006904aa006a04170068000000000000
000004e3006800000000000000000476006803b7006805bb006500000000
000000000433006800000000046a006803a4005e04390039000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000034e005d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000284004e00000000021c002e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000024900c0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000002bf
002b03ae003103b000330000000000000000000000000000000000000000
0000000000000000043600b10436006f0436008100000000000000000000
00000000000000000000000000000000000002e5002c03e0002903e3003f
00000000000000000000000000000000000000000000000000000000046e
00b2046e0081046e00900000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000342007e03420063034200730000000000000000000000000000
000000000000000000000000000003b00015000000000351006400000000
035b005d000000000000000003f6005d000000000000000003af005d031a
005d04af005d00000000000000000357005d000000000000000002fa0062
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004a100b704a10088
04a1009d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000005970014
000000000509008e00000000051f008a00000000000000000613008a0000
000000000000059d008a04c0008a0731008800000000000000000515008a
0000000000000000047c008a000000000000000000000000000000000000
000000000000000000000000000000000000000000000501008200000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003c6006b000000000321003a
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c200b804c2
009004c200a8000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000060d
002200000000057100a40000000005810099000000000000000006800099
0000000000000000060b00990517009907af00990000000000000000057b
0099000000000000000004e200a100000000000000000000000000000000
000000000000000000000000000000000000000000000000056c00990000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004210080000000000376
004b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000>
<000000760076007600760110011001a401a4024f024f024f02e502e502e5
039503fd049f049f049f05140514051405cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
0663066306630663066306630663066306630663066306630663066306ee
06ee07660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
0766076607660766076607660766076607dc07dc08430899092209220922
0995099509950a2c0a7c0af70af70af70b610b610bed0c630cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90d380d380d380d380d380d380d380d380d380d380d380d38
0d380d380d990d990df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e99
0f090f9e0f9e0f9e0f9e0f9e0f9e0f9e0f9e0fe8105810e910e910e910e9
10e910e910e910e91133119d12201220122012201220122012201220127b
130513a713a713a713a713a713a713a713a713b513c313d113d113d113d1
13d113d113d113d113d113d113d113d113d113e413f7140a140a140a140a
140a140a140a140a140a140a140a140a140a1489151a15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15dc15ea15f815f815f815f815f8
15f815f815f8165f165f16ac16ac17231723172317a917a917a9183c1888
19111911191119741974197419df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df1a2b1a841ae31ae31ae31ae31ae31ae31ae31ae3
1ae31ae31ae31ae31ae31ae31b351b351b8c1b8c1bfe1bfe1bfe1c6d1c6d
1c6d1cff1d441dc61dc61dc61e1e1e1e1e1e1e901e901e901e901e901e90
1e901e901e901e901e901f141f141f141f141f141f141f141f141f141f14
1f141f141f141f141f771f771fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc82008205f
20c620c620c620c620c620c620c620c620c620c620c620c620c620c62118
21182169216921d421d421d4224c224c224c22cd231023832383238323df
23df23df2445244524452445244524452445244524452445244524b424b4
24b424b424b424b424b424b424b424b424b424b424b424b4250a250a2551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
25512551255125512551255125512551255125510000000100001dbe0050
0004002e000100020010002f0086000009a41128000100010000002f023a
000000000000000d03880000000000000000000e006c0388000000030000
0000006403f400000003000000010018046e0000000300000002000e0486
0000000300000003002e045800000003000000040018046e000000030000
0005001804940000000300000006001604ac0000000300000007007604c2
0000000300000008002a0402000000030000000900460538000000030000
000a070a057e000000030000000b00560c88000000030000000c00280cde
000000030000000d03880000000000030000000e006c0388000100000000
000000320d060001000000000001000c0d43000100000000000200070d4f
000100000000000300170d380001000000000004000c0d43000100000000
0005000c0d560001000000000006000b0d620001000000000007003b0d6d
000100000000000800150d0d000100000000000900230da8000100000000
000a03850dcb000100000000000b002b1150000100000000000c0014117b
000100000000000d01c4118f000100000000000e00361353000300010409
0000006403f400030001040900010018046e0003000104090002000e0486
0003000104090003002e045800030001040900040018046e000300010409
0005001804940003000104090006001604ac0003000104090007007604c2
0003000104090008002a0402000300010409000900460538000300010409
000a070a057e000300010409000b00560c88000300010409000c00280cde
000300010409000d03880000000300010409000e006c0388004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020007200690067
006800740073002000720065007300650072007600650064002e004d0069
00630072006f0073006f00660074003a002000430061006d006200720069
00610020004d0061007400680052006500670075006c0061007200560065
007200730069006f006e00200036002e0039003900430061006d00620072
00690061004d00610074006800430061006d006200720069006100200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004d006f006e006f007400790070006500200049
006d006100670069006e006700200061006e00640020005400690072006f
002000540079007000650077006f0072006b007300430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f007700770077002e0066006f006e00740073002e0063006f006da920
32303137204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e4d6963726f736f66743a2043
616d62726961204d617468526567756c617256657273696f6e20362e3939
43616d627269614d61746843616d6272696120697320612074726164656d
61726b206f6620746865204d6963726f736f66742067726f7570206f6620
636f6d70616e6965732e4d6f6e6f7479706520496d6167696e6720616e64
205469726f2054797065776f726b7343616d627269612068617320626565
6e2064657369676e656420666f72206f6e2d73637265656e207265616469
6e6720616e6420746f206c6f6f6b20676f6f64207768656e207072696e74
656420617420736d616c6c2073697a65732e204974206861732076657279
206576656e2073706163696e6720616e642070726f706f7274696f6e732e
20446961676f6e616c20616e6420766572746963616c20686169726c696e
657320616e6420736572696673206172652072656c61746976656c792073
74726f6e672c207768696c6520686f72697a6f6e74616c20736572696673
2061726520736d616c6c20616e6420696e74656e6420746f20656d706861
73697a65207374726f6b6520656e64696e67732072617468657220746861
6e207374616e64206f7574207468656d73656c7665732e20546869732070
72696e6369706c65206973206d6f7374206e6f7469636561626c6520696e
20746865206974616c69637320776865726520746865206c6f7765726361
7365206368617261637465727320617265207375626475656420696e2073
74796c6520746f206265206174207468656972206265737420617320656c
656d656e7473206f6620776f72642d696d616765732e205768656e204361
6d62726961206973207573656420666f722063617074696f6e7320617420
73697a6573206f76657220323020706f696e742c207468652020696e7465
722d6368617261637465722073706163696e672073686f756c6420626520
736c696768746c79207265647563656420666f7220626573742072657375
6c74732e205468652064657369676e2069736e2774206a75737420696e74
656e64656420666f7220627573696e65737320646f63756d656e74733a20
54686520726567756c61722077656967687420686173206265656e206578
74656e64656420776974682061206c6172676520736574206f66206d6174
6820616e6420736369656e63652073796d626f6c732e2054686520477265
656b20616e6420437972696c6c696320686173206265656e206465736967
6e656420756e64657220636c6f7365207375706572766973696f6e206f66
20616e20696e7465726e6174696f6e616c207465616d206f662065787065
7274732c2077686f2061696d656420746f20736574206120686973746f72
6963616c206e6577207374616e6461726420696e206d756c74692d736372
69707420747970652064657369676e2e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f7777772e666f6e74732e636f6d4d6963726f736f66742073
7570706c69656420666f6e742e20596f75206d6179207573652074686973
20666f6e7420746f206372656174652c20646973706c61792c20616e6420
7072696e7420636f6e74656e74206173207065726d697474656420627920
746865206c6963656e7365207465726d73206f72207465726d73206f6620
7573652c206f6620746865204d6963726f736f66742070726f647563742c
20736572766963652c206f7220636f6e74656e7420696e20776869636820
7468697320666f6e742077617320696e636c756465642e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e20416e79206f7468
6572207573652069732070726f686962697465642e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f6e
74732f64656661756c742e6173707800b9002001feb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f0b40918014a20b801efb40918014a20
b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801eb
b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918
014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20
b801e0b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801a0b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018ab40918014a20b80188b40918014a20b80187
b40918014a20b80186b40918014a20b8015bb40918014a20b8015ab40918
014a20b80159b40918014a20b80158b40918014a20b80154b40918014a20
b80150b40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80136b40918014a20b80130b40918014a20b8012fb40918
014a20b8012db40918014a20b8012cb40918014a20b80109b40918014a20
b80107b40918014a20b8010540ff0918014a20f40918014a20f20918014a
20f10918014a20f00918014a20ef0918014a20ed0918014a20ec0918014a
20ea0918014a20e50918014a20e40918014a20e30918014a20e10918014a
20de0918014a20da0918014a20d80918014a20d30918014a20cd0918014a
20cc0918014a20ca0918014a20c90918014a20c80918014a20c60918014a
20c40918014a20c20918014a20c00918014a20bf0918014a20bd0918014a
20b30918014a20b10918014a20af0918014a20a50918014a20a40918014a
20a00918014a208e0918014a208d0918014a208c0918014a208b0918014a
208a0918014a20890918014a20850918014a20840918014a208309180140
3e4a20800918014a207f0918014a207e0918014a207d0918014a20620918
014a20510918014a20500918014a20480918014a20420918014a200e0918
014a0f41630441001f0441002f0441003f0441004f0441005f0441006f04
41007f0441008f0441009f044100af044100bf044100cf0441000d005f03
ea0001008003f4009003f400a003f400b003f400c003f400d003f400e003
f400f003f40008002f0433003f0433004f0433005f0433006f0433007f04
33008f0433009f043300af043300bf0433000a001f0434002f0434003f04
34004f0434005f0434006f0434007f0434000700cf042300df042300ef04
230003000f0423001f0423003f0423005f0423009f0423402305f0e201b0
fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ffe0fff0ff0470
410a0425000100c0042500d0042500e0042500f00425400c04e0bef0be02
e0bef0be020f41110421003f04210002001002580001000f025800e00258
0002000f040a0001000f0408b4010f26010f411b04070001000f04060001
007f02170001000f029c001f029c002f029c003f029c004f029c005f029c
000600df029c00ef029c00ff029c405303dfe016171cd4d516171c7b7c16
1b7b7c19d1d216171c767716171c6d7016171c6c6f16171c6b6e161b6b6e
7f721a747514151c676a14151c666914151c6568141b656885711a197316
7a431921794319211941310292009902920002001c0292002c0292000202
99029a029b000c028d028e028f000c028a028b028c000c001b0299008b02
990002000f0299009f029900bb029900db0299000402a5028b02a7000d02
9f029a02a1000d029c028e029e000dffe8028eb2142339b9ffe8029ab214
2339411a0282027d0008002b0281027c0005002b027e027a0004002b027d
027a0004002b027a02570005002b027702670005002b02670257b2052b20
b80270b21b2039bd027202570004002b026e0257b2042b20b80257b33133
3909414102710019027100aa025700b8025700040069027100da025700e8
02570003028402790006002b028002790004002b027f02790008002b027b
02790008002b027902560006002b027802660000002b027602660008002b
027502660008002b027302660008002b026602560006002b027402560000
002b027302560000002b026f0256b2072b29415002560001008602560001
025d025e025f000c025102520253000c024e024f0250000c000b024e000b
0251000a025d003b024e00590251007602510075025d009b024e00b5025d
00d9024e000a0269024f026b000d0263025e0265000d026002520262000d
0269003c0263003c0260003c025d003c0251003c024e003c0244023c0005
002b024302110002002b0240023c0005002b023e02110004002b023d0211
b2042b464115023c00010046023c00c6023c0002023b02110007002b0239
02110006002b023702110004002b02210211b2072b20b80233b213163941
16022f02110004002b022e02110004002b022d02110005002b022c021100
04002b022b02110004002b022a0211b2052b474142021100010005021100
a502110002003b0233004b02330064021100740211000402420210000700
2b024102100005002b023f02100002002b023a02100007002b0238021000
07002b023602100007002b023502100007002b022002100007002b023402
100005002b023102100005002b023002100007002b022902100007002b02
280210b2072b8a416e02100001001a021000b90232000202170218021900
0c020b020c020d000c02080209020a000c000b0208000b020b000a021700
3b02080059020b0076020b00750217009b020800b5021700d90208000a02
2302090225000d021d0218021f000d021a020c021c000d0223003c021d00
3c021a003c0217003c020b003c0208003c0153014d0002002b014e014d00
02002b0156015c0004002b0155015c0004002b0157015c0002002b01da01
d4000a002b01d801d4000a002b01e501e00005002b01e101e00005002b01
e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b801ebb2090a39
b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f203940b80103
b22c2c39ba010301000100b21f2223b901030100b3c01e1e23ba01030100
0100b21d1d23b901030100b3c01c1c23ba010301000100b21b1b23b90103
0100b3c0141a23b901030100b3800b1323b901030100b340090a23b90102
0101b340508b23b901010100b340508b23410a01020100004f001f010101
00004f001fffc00100b2505539b9ffc00100b323233940b80100b71d1e39
40e81b1b39b8ffc0b4e724253956b80108401301ddd8052b3bd64bd60240
b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a012b9b9a052b
9a91042ba999042b9992032b40c52c31399291032b889198910209631863
c7630320630d0f39b8fff0b4471f2539cbb8010a401c019895012b379e01
9695022b1897262a3917970110953f4039d99501bc0136012c0003002b01
30b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd042bbc014c01
4a0003002b014ab27f052bb9015b0154b2042b0f41190154001f01540002
018601880002002b018701880004002b018901880004002b0188018f0003
002b018e018f0004002b018fb385052b3f410c01a0000101ce01cc000300
2b01d201cc0006002b01d101ccb2062b40b80107b2323239b80107b2af03
2bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8042b40c82122
39b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a39b8ffc04023
bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a2a39cdcc052b
40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea012bb80109b2da
032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1c0052b40c03d
3d39c0af042bd3af052baf7d052b20da121639c5bd01208e01108e01b8ff
c0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c8d052b8d8a04
2b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a0042bef85052b40
ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a0454739b8ffc0b3a0
383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394313139b8ffc0
40d480181a39817f012b7e7d052b7d7f052bed7f052bd87f017f85251f88
85012b8785012b8485052b8385052b298539854985036685014685013685
012685011b37151836151535151234150f33150c3215093115063015032f
15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f22230e24230f
1e1f0e201f0f00051005023c3d0e0b3c743c993c030f10110c090a0b0c06
07080c0304050c0001020c0603641f702a010f2a010b0f4b0f020b003b00
44037403ab00db0f060b000b030b0f3b003b0959035b0976039b009b0999
0fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d1204140d2ff9
6ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8010bb22ff92f
ba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c263c243c223c
203c1e3c1b3c183c153c123c0f3c093c063c033c003c035050335401b012
4b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58
b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58b801
19b101018e851bb900010100b04b60858d592b2b1d42b0644b5358b20380
801d4259b0324b5358b20390901d4259004bb03251b01b23422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73747573742b
2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c4560442b2b73
2b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b2b2b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b2b2b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b74742b2b2b
2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b
0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b2b2b2b
2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b2b2b2b
2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b
2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b101322b4bb0505242b002435c4bb064524bb01e505b60b01a23424bb0c8
524bb036505bb00e23420073747373737373737374737374737573737475
7373747373737373b100024354b102024354b1060243545b5b58416301fe
006401fa006401f9006401f8006401f7006401f6006401f0006401ef0064
01ee006401ed006401ec006401eb006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401d3006401d2006401d1006401cf0064
01ce006401cd006401cc006401a00064018f0064018e0064018a00640188
00640187006401860064015b0064015a0064015900640158006401540064
01500064014c0064014b0064014a00640136006401300064012f0064012d
0064012c006401090064010700640105406964f464f264f164f064ef64ed
64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c964c8
64c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d648c
648b648a64896485648464836480647f647e647d64626451645064486442
640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[16273 2835 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3548 150 <00010025fff002c204b3001c0097b0852b58403117100314201340262f48
13400c0f481310971716020a0f06010c030607400a00a7441b0aee070f13
1409091e07050b851a2fe1393211392fd6cd003fed322b001a1810cd5f5e
5d11393ffdd62b2b1a19cd2b31301b4023141340262f4813400c0f481317
10976c1716020a0f06010c030607401b070aee6c070f00183f2b321a10cd
5f5e5d11393f2bd62b2b19cd303159133e0337331521152111141e023332
363717060623222635112325323e23140b8e0143febd102c382c2846222d
477f44817e94038a08283f5f5bf765fe436173411c211f36453e99a3022b
>KAAAAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>KAAAAA+CambriaMath AddT42Char 
KAAAAA+CambriaMath /CharStrings get begin
/g150 150 def
end
KAAAAA+CambriaMath /Encoding get
dup 116 /g150 put
pop
end
%ADOEndSubsetFont
/IILCOO+CambriaMath /KAAAAA+CambriaMath findfont ct_VMDictPut
/IILCOO+CambriaMath*1 
[116{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
696.814 551.996 mo
(t)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
696.814 551.996 mo
(t) false chp
.28457 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
grestore
1 /0 /CSD get_res sepcs
.506 sep
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 2366 19 <00020079000004380555001e002b006bb0852b5840251c20032091401c1c
130705080708a644071312a64413290329911303177e24242d1f007f0c2f
e13211392fe1003fed2b2b00182f2b110033111239182f1aed2b31301b40
111c20916c1c1c13070508071329916c130300183f2b2f11331112392f2b
30315925141e02171521353e023511342e02273521321615140e02232227
353332363635342e0223220701a90d1b2e31fe493e2a0d0a17262e01f0ea
e54884b4636f3d7471934e2e5170426332fd3b4629170b31311027484a03
61453f23150d31b3b768a66a2e04533b89715673461d0400>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g19 19 def
end
IILCOO+CambriaMath /Encoding get
dup 80 /g19 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[80{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
274.624 171.949 mo
(P)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
274.624 171.949 mo
(P) false chp
.28457 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 1182 11 <000100790000050405550038008ab0852b5840302b0f030f91402b23172b
91303006091503181718a644081712253134032232232322a6442303007f
2c0d0d3a0f2a7f1db8fff0b30f014d1d2f2be13212392f33e1003f2b1100
33111733183f332b110017332b00182f1aed2b31301b40152b0f916c2b06
09150318081712253134032232230300183f331117333f331117332f2b30
315925141e03171521353e0235112111141e02171521353e023511342e02
273521150e0315112111342626273521150e02150490060e142527fe5d37
2c11fdd40915292efe5b3e2a0d0a17262e01a52c27170b022c11283b01a3
382c10fa3a3a2316120a31310e22465301a3fe5d433e24180c3131102748
4a0361453f23150d31310b16214245fe9e01625740221031310e23465200
>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g11 11 def
end
IILCOO+CambriaMath /Encoding get
dup 72 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[72{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
288.766 171.949 mo
(H)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
288.766 171.949 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 236 4 <00020006000004e90565001f002200beb0852b58404408092122050b0a20
220e2219182220212203050e051a1f1f240e1713080b2214200a030a9140
0f204f200211032020181201141e03111211a64400160e061b0512221804
003f332f17332b11001733111239182f5f5e5d1aed2b1112003939300118
2f333312392f3333111217391133331087c0c0c087c0c0c0311b4022080b
2214200a916c0f204f200211032020181201141e031100160e061b051222
180400183f332f17331117331112392f5f5e5d2b11123939305921353e02
353426272721070606151416171521353636370133011e02171501210303
1c323118100f25fe2e221a103d3ffe5538532701a19e01541825342dfcb3
01a2be310a182b24224f3181624a4c1f3c380931310970680453fba54e52
2e0b31021c028500>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g4 4 def
end
IILCOO+CambriaMath /Encoding get
dup 65 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 
139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
305.309 171.949 mo
(A)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
305.309 171.949 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 2600 22 <00010070fff003950565003000e1b0852b58400f2f100e15482f2d2f0001
00000b0416b8fff0403c0e154816130018101820188018040e0318181c0b
2424041c2d04030491402d13131c031c91130418a44f170117172820ed0f
0f3028ed07073200a4302fe112392fe112392fe111392f5de1003fed2b00
183f1aed2b1112003911331239182f5f5e5d12392b1112392f5d12392b31
301b400f2f100e15482f2d2f000100000b0416b8fff040230e1548161300
18101820188018040e0318181c0b24241c2d04916c2d13131c916c130400
183f2b3f2b1139113312392f5f5e5d12392b1112392f5d12392b30315913
1e0233323635342626272e02353436363332161711232e02232206061514
1616171e0215140e0223222711d414446c55757d34767975884369cb834c
916d6317465e4b41673c336c6a808d4f4275a3619dcd01375866317a754b
665a3c3a6f824d70a55a101cfef258622730614347625434406e8d5e6991
5b2935011200>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g22 22 def
end
IILCOO+CambriaMath /Encoding get
dup 83 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 
32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
320.064 171.949 mo
(S)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
320.064 171.949 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 840 8 <000100790000042a0555002e00ceb0852b58b9000fffc0404b090c480f0a
1f1f17180202090a0a17031240090c48121791400a2e220a9128302223a6
44221803189140222e2da6442e090309912e0311a40f12121801a4020218
2120a41f1f300a187f272fe13212392fe13212392fe112392f33e1003fed
2b2b00182f1aed2b2b2b00182f1afdc62b2b11120039182f1112392f10c6
2b31301bb9000fffc04023090c480f0a1f1f17180202090a1240090c4812
0a17916c0a2218916c222e09916c2e0300183f2b2f2b2f2bc62b1112392f
1112392f10c62b3031590111232e0423211133323636373311232e022323
1121323e0337330321353e023511342e0227350420620f2022293827fec4
d62c32210f5e5e0e222f2fd60137313d2c2217146313fc623e2a0d0a1726
2e0555fed2314a321e0bfdf4193c40fe803c3d1afdbf1129424744fea131
1027484a0361453f23150d31>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g8 8 def
end
IILCOO+CambriaMath /Encoding get
dup 69 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[65{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 
2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
331.877 171.949 mo
(E)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
331.877 171.949 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if

2 0 3 <> IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g3 3 def
end
IILCOO+CambriaMath /Encoding get
dup 32 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 32{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 
7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
345.455 171.949 mo
( )sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
345.455 171.949 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 9280 883 <000100b2000003ce0565001a005fb0852b58401e12161515170806090809
994408170417000e161609060009008a0e0e1c1b1112392fe1c610c61133
2f111239003f2f2b110033111239182f333931301b400b12161515170806
0908170400183f2f11331112392f333930315901141e03171521353e0335
11342623220607270133061502b70d213e5e4dfd1d6f5f32171c1b207657
2c01d4370601053a3b25150b0249490511223e46032b2825423a4d011760
aa00>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g883 883 def
end
IILCOO+CambriaMath /Encoding get
dup 49 /g883 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 15{/.notdef}rp /g4 3{/.notdef}rp /g8 
2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 
139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
349.891 171.949 mo
(1)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
349.891 171.949 mo
(1) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
489.816 173.128 mo
(P)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
489.816 173.128 mo
(P) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
503.958 173.128 mo
(H)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
503.958 173.128 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
520.501 173.128 mo
(A)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
520.501 173.128 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
535.256 173.128 mo
(S)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
535.256 173.128 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
547.069 173.128 mo
(E)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
547.069 173.128 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
560.647 173.128 mo
( )sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
560.647 173.128 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 9462 884 <00010081000003c9056500280099b0852b584033201d121209181816081d
16031a169b401d040905401013480528082803289f081919120905070620
8c12122a19280909188e192fe1332f331112392ff1d632cd1112392f002f
ed2b001810c62b333f1aed322b11120039182f113911123931301b401b20
1d1212091818081a1d169b6c1d040905401013480508289f6c0800182f2b
c62b333f2b3211392f113911123930315925323e02373303213536363736
373e02353426262322072335363633321615140e0307060702be313c2415
105511fcc92b9286743338371830634bbb417979d354babe152d4c5c71be
59a00c1c2d2ffedc3069dc95804248695d2f4b7342d0c03933a39b355957
646778c99600>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g884 884 def
end
IILCOO+CambriaMath /Encoding get
dup 50 /g884 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 3{/.notdef}rp 
/g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp 
/g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
565.083 173.128 mo
(2)sh
IILCOO+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
565.083 173.128 mo
(2) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 544 6 <00010077fff004120565002000bdb0852b58401014100e1548140f125f12
6f1203121700b8fff040300e154800000250026002d002040903021e170e
030e914017131e060306911e041e010606020a0113a4021212220a7e1a2f
e112392f33e132111239111239003fed2b00183f1aed2b001810c45f5e5d
392b10c45d392b31301b401014100e1548140f125f126f1203121700b8ff
f0401d0e154800000250026002d002040903021e170e916c17131e06916c
1e0400183f2b3f2b10c45f5e5d392b10c45d392b3031590111232e022322
06021514121633323636373311060623220011341224333216041263184a
624567a15c4c946c52684720635ec576fefefc870106b65b9a0538feeb57
672c89feedc3c4feeb8d2f6663fee2191901580155d60142b013>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g6 6 def
end
IILCOO+CambriaMath /Encoding get
dup 67 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp 
/g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
939.32 459.652 mo
(C)sh
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
939.32 459.652 mo
(C) false chp
.25029 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 1834 15 <00010079000004100555001e0071b0852b58402700091009020c03090917
000b0ca6440b00030091400b19161716a64417030a09a4080820007f102f
e112392fe132003f2b110033182f1aed2b2b11120039182f5f5e5d31301b
401300091009020c030909170b00916c0b1916170300183f11332f2b1139
2f5f5e5d3031592521323e0437330321353e023511342e02273521150e03
1501a901062b3a29211e1b146514fc7d3e2a0d0a17262e01a52c25180c5c
0a15253c5b5bfe6e311027484a0361453f23150d31310c1320424800>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g15 15 def
end
IILCOO+CambriaMath /Encoding get
dup 76 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 3{/.notdef}rp /g15 3{/.notdef}rp 
/g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
951.694 459.652 mo
(L)sh
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
951.694 459.652 mo
(L) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 1482 14 <0001007900000509055500450094b0852b584038002a032a401626030300
3e3100911e301b1e3303303130a6441d211803310e1140033d3e3da6440f
0914033e03450b11161b2125072b7f372fe11732003f17332b1100173318
2f17332b110017332b00182f17331acd2b31301b401c2a4016260303001b
1e3303301d211803310e1140033d0f0914033e0300183f17331117332f17
331117332f17331acd303159013332363637363736373635342627352115
0e020701011e0217152135363635342627032e02232311141e0217152135
3e023511342e02273521150e031501a81e263f4e5060232c0f0c2e2801b4
203e413ffeb0016c3a423c22fe4725221719e929262c25350915292efe5b
3e2a0d0a17262e01a52c27170b02ec18425a6b3039271d1b282504313107
233d46fe86fdef54431f053131031616123324015b3e2813fe5d433e2418
0c31311027484a0361453f23150d31310b1621424500>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g14 14 def
end
IILCOO+CambriaMath /Encoding get
dup 75 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 /g15 
3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
963.485 459.652 mo
(K)sh
IILCOO+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
963.485 459.652 mo
(K) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
.506 sep
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
760.006 178.432 mo
(P)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
760.006 178.432 mo
(P) false chp
.28526 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
774.157 178.432 mo
(H)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
774.157 178.432 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
790.691 178.432 mo
(A)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
790.691 178.432 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
805.457 178.432 mo
(S)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
805.457 178.432 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
817.274 178.432 mo
(E)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
817.274 178.432 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
830.86 178.432 mo
( )sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
830.86 178.432 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IILCOO+CambriaMath gcheck setglobal} if
2 9738 885 <00010090fff003ca0565003000bbb0852b5840440d0c2526262503259a40
260416269a28300f1a0111031a001a001e2d161e03191e9a401613042d03
012d9b04040c0826262a308e00001a088c2a2a1a128c2121321b8e1a2fe1
12392fe112392fe112392fe112392f1239003fed322b00183f1aed322b11
12003939182f2f5f5e5d2b00182f1aed2b111200393931301b401f0d0c26
259a6c260f1a0111031a001a002d19161e9a6c161301042d9b6c04040018
3f2b323f2b321139392f2f5f5e5d2f2b3939303159133536363332161615
14060607151e031514060623222627353316163332363534262323353e02
353426232206079f74ca5e71aa5a447b623d71583565d09556c753782373
638285b0aa5a87b95a76715e761c043abe373646835b5581602e090b3554
754b74b4682720d4685e8e8b929a5808588a566f78666900>IILCOO+CambriaMath AddT42Char 
IILCOO+CambriaMath /CharStrings get begin
/g885 885 def
end
IILCOO+CambriaMath /Encoding get
dup 51 /g885 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IILCOO+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 /g885 13{/.notdef}rp /g4 
/.notdef /g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 
/g15 3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
IILCOO+CambriaMath nf
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
835.282 178.432 mo
(3)sh
IILCOO+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
835.282 178.432 mo
(3) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 11.9893 572.405 ]ct
@
grestore newpath
941.289 427.395 mo
961.172 427.329 li
961.147 423.277 li
941.289 423.343 li
cp
943.307 419.287 mo
931.126 425.404 li
943.332 431.441 li
cp
959.154 431.387 mo
971.31 425.268 li
959.105 419.233 li
cp
.997223 .918425 .647791 .507591 cmyk
f
984.844 394.735 mo
984.844 405.011 li
980.784 405.011 li
980.784 394.735 li
cp
976.724 396.761 mo
982.802 384.607 li
988.904 396.761 li
cp
988.904 402.985 mo
982.802 415.14 li
976.724 402.985 li
cp
f
73.5817 329.028 mo
73.5817 443.898 li
69.5214 443.898 li
69.5214 329.028 li
cp
65.4612 331.054 mo
71.5516 318.907 li
77.6419 331.054 li
cp
77.6419 441.875 mo
71.5516 454.029 li
65.4612 441.875 li
cp
f
474.88 414.772 mo
474.88 451.181 li
470.82 451.181 li
470.82 414.772 li
cp
466.759 416.797 mo
472.837 404.643 li
478.94 416.797 li
cp
478.94 449.155 mo
472.837 461.309 li
466.759 449.155 li
cp
f
113.78 496.378 mo
125.961 496.363 li
125.956 493.323 li
113.775 493.34 li
cp
135.095 496.351 mo
147.276 496.336 li
147.274 493.299 li
135.093 493.313 li
cp
156.413 496.326 mo
168.593 496.311 li
168.589 493.272 li
156.408 493.286 li
cp
177.728 496.299 mo
189.908 496.284 li
189.906 493.245 li
177.725 493.259 li
cp
199.045 496.272 mo
211.226 496.257 li
211.221 493.22 li
199.04 493.235 li
cp
220.36 496.245 mo
232.541 496.23 li
232.538 493.193 li
220.358 493.208 li
cp
241.678 496.22 mo
253.858 496.206 li
253.853 493.166 li
241.673 493.181 li
cp
262.985 496.193 mo
275.166 496.179 li
275.166 493.139 li
262.985 493.156 li
cp
284.32 496.166 mo
296.5 496.152 li
296.476 493.114 li
284.295 493.129 li
cp
305.63 496.142 mo
317.81 496.125 li
317.81 493.087 li
305.63 493.102 li
cp
326.94 496.115 mo
339.121 496.1 li
339.121 493.06 li
326.94 493.075 li
cp
348.25 496.088 mo
360.431 496.073 li
360.431 493.033 li
348.25 493.051 li
cp
369.585 496.061 mo
381.765 496.046 li
381.741 493.009 li
369.56 493.024 li
cp
390.895 496.036 mo
403.075 496.022 li
403.075 492.982 li
390.895 492.997 li
cp
412.205 496.009 mo
424.385 495.995 li
424.385 492.955 li
412.205 492.97 li
cp
433.515 495.982 mo
445.695 495.968 li
445.695 492.93 li
433.515 492.945 li
cp
454.849 495.955 mo
467.03 495.941 li
467.005 492.903 li
454.825 492.918 li
cp
476.159 495.931 mo
488.34 495.916 li
488.34 492.876 li
476.159 492.891 li
cp
497.469 495.904 mo
509.65 495.889 li
509.65 492.849 li
497.469 492.866 li
cp
518.779 495.877 mo
530.96 495.862 li
530.96 492.825 li
518.779 492.839 li
cp
540.114 495.852 mo
552.295 495.835 li
552.27 492.798 li
540.089 492.812 li
cp
561.424 495.825 mo
573.605 495.81 li
573.605 492.771 li
561.424 492.785 li
cp
582.734 495.798 mo
594.915 495.783 li
594.915 492.746 li
582.734 492.761 li
cp
604.044 495.771 mo
616.225 495.756 li
616.225 492.719 li
604.044 492.734 li
cp
625.379 495.747 mo
632.17 495.737 li
632.146 492.699 li
625.354 492.707 li
cp
f
26.609 294.672 mo
33.227 294.672 li
33.227 295.457 li
32.8121 295.507 32.5047 295.605 32.3054 295.801 cv
32.1058 295.973 32.0062 296.243 32.0062 296.562 cv
32.0062 296.832 32.03 297.078 32.078 297.348 cv
32.1258 297.594 32.2257 297.987 32.3773 298.551 cv
34.7467 307.121 li
37.7016 298.576 li
37.8221 298.232 37.9157 297.937 37.9846 297.643 cv
38.051 297.348 38.0854 297.029 38.0854 296.71 cv
38.0854 296.317 37.9846 296.022 37.7803 295.801 cv
37.5761 295.605 37.2636 295.482 36.8403 295.457 cv
36.8403 294.672 li
41.998 294.672 li
41.998 295.457 li
41.6954 295.507 41.4394 295.605 41.2278 295.752 cv
41.0162 295.899 40.8243 296.096 40.652 296.366 cv
40.4822 296.636 40.2804 297.103 40.0491 297.716 cv
35.0339 311.049 li
32.2695 311.049 li
28.3202 297.667 li
28.1448 297.078 27.9971 296.636 27.8775 296.391 cv
27.7577 296.145 27.6022 295.949 27.4107 295.777 cv
27.2193 295.629 26.9521 295.531 26.609 295.457 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
53.7801 308.029 mo
53.3297 308.029 52.9705 308.275 52.7047 308.717 cv
52.4365 309.183 52.2766 309.846 52.2249 310.706 cv
55.1532 310.706 li
55.1286 309.797 55.0129 309.134 54.8013 308.692 cv
54.5897 308.25 54.2501 308.029 53.7801 308.029 cv
cp
53.9228 307.121 mo
54.4543 307.121 54.9243 307.194 55.3254 307.317 cv
55.7265 307.44 56.071 307.612 56.3589 307.808 cv
56.6444 308.029 56.8831 308.299 57.0701 308.619 cv
57.294 308.987 57.4613 309.404 57.577 309.895 cv
57.6902 310.362 57.7517 310.951 57.7566 311.639 cv
52.1806 311.639 li
52.1855 312.695 52.375 313.48 52.7466 313.971 cv
53.1206 314.487 53.6866 314.733 54.4494 314.733 cv
54.8948 314.733 55.2959 314.659 55.6552 314.487 cv
56.012 314.315 56.3983 314.02 56.8166 313.603 cv
57.5278 314.364 li
56.9298 315.003 56.3368 315.445 55.7511 315.715 cv
55.1655 315.985 54.4912 316.108 53.7284 316.108 cv
52.3627 316.108 51.3341 315.739 50.6451 314.978 cv
49.9561 314.241 49.6116 313.137 49.6116 311.663 cv
49.6116 310.73 49.7887 309.895 50.1455 309.208 cv
50.4999 308.52 51.0019 308.005 51.6515 307.661 cv
52.3036 307.293 53.0591 307.121 53.9228 307.121 cv
cp
47.1877 307.121 mo
47.5445 307.121 47.921 307.17 48.3148 307.243 cv
48.3148 309.65 li
46.7227 309.65 li
46.6218 309.331 46.4913 309.061 46.3314 308.889 cv
46.169 308.692 45.9524 308.594 45.6842 308.594 cv
45.5538 308.594 45.4135 308.643 45.2585 308.717 cv
45.101 308.815 44.9583 308.913 44.8254 309.061 cv
44.695 309.208 44.6015 309.355 44.5449 309.502 cv
44.4883 309.65 44.4514 309.797 44.4342 309.944 cv
44.4169 310.092 44.4096 310.337 44.4096 310.632 cv
44.4096 313.431 li
44.4096 313.996 44.4292 314.389 44.4711 314.61 cv
44.5104 314.831 44.5941 315.003 44.7171 315.125 cv
44.8402 315.248 45.0469 315.346 45.3397 315.396 cv
45.3397 315.96 li
41.0039 315.96 li
41.0039 315.396 li
41.2869 315.322 41.4813 315.224 41.5895 315.101 cv
41.6978 314.978 41.7716 314.806 41.8085 314.585 cv
41.8479 314.389 41.8676 313.996 41.8676 313.431 cv
41.8676 309.846 li
41.8676 309.404 41.8602 309.085 41.8455 308.864 cv
41.8307 308.668 41.7938 308.496 41.7396 308.373 cv
41.6831 308.25 41.5994 308.152 41.4837 308.054 cv
41.3705 307.98 41.1712 307.906 40.8907 307.857 cv
40.8907 307.268 li
43.2998 307.194 li
44.4096 307.194 li
44.2865 308.52 li
44.3997 308.545 li
44.8279 308.029 45.2684 307.685 45.7187 307.464 cv
46.1714 307.243 46.6611 307.121 47.1877 307.121 cv
cp
68.5888 303.413 mo
69.6888 303.413 li
69.6888 308.422 li
69.7232 308.422 li
70.2572 307.956 70.7346 307.612 71.1529 307.415 cv
71.5737 307.219 72.0019 307.121 72.4423 307.121 cv
73.0871 307.121 73.5866 307.243 73.9385 307.489 cv
74.2879 307.71 74.5463 308.054 74.7062 308.496 cv
74.8686 308.938 74.9498 309.527 74.9498 310.239 cv
74.9498 313.431 li
74.9498 313.996 74.9671 314.364 75.0015 314.585 cv
75.036 314.782 75.1098 314.954 75.2205 315.076 cv
75.3337 315.224 75.538 315.322 75.8382 315.396 cv
75.8382 315.96 li
71.5712 315.96 li
71.5712 315.396 li
71.8468 315.322 72.0363 315.224 72.1397 315.101 cv
72.2406 314.978 72.3119 314.806 72.3488 314.61 cv
72.3882 314.389 72.4079 313.996 72.4079 313.431 cv
72.4079 311.148 li
72.4079 310.558 72.3882 310.116 72.3488 309.797 cv
72.3119 309.453 72.2479 309.208 72.1569 309.036 cv
72.0658 308.864 71.9477 308.717 71.805 308.643 cv
71.6598 308.545 71.4728 308.496 71.2366 308.496 cv
71.0151 308.496 70.7813 308.569 70.5377 308.717 cv
70.2941 308.84 70.0923 309.036 69.9299 309.257 cv
69.77 309.502 69.6888 309.748 69.6888 310.018 cv
69.6888 313.431 li
69.6888 313.996 69.706 314.389 69.738 314.585 cv
69.77 314.806 69.8413 314.954 69.9521 315.076 cv
70.0653 315.224 70.2695 315.322 70.5697 315.396 cv
70.5697 315.96 li
66.2585 315.96 li
66.2585 315.396 li
66.5587 315.322 66.7629 315.224 66.8737 315.101 cv
66.9869 314.978 67.0582 314.806 67.0951 314.585 cv
67.1296 314.389 67.1468 313.996 67.1468 313.431 cv
67.1468 306.581 li
67.1468 305.967 67.1394 305.525 67.1198 305.255 cv
67.1025 304.984 67.0656 304.764 67.0115 304.641 cv
66.9549 304.493 66.8737 304.395 66.7654 304.322 cv
66.6571 304.223 66.4529 304.15 66.1527 304.101 cv
66.1527 303.536 li
cp
64.0045 303.364 mo
64.5089 303.364 64.9568 303.413 65.3505 303.487 cv
65.3505 305.279 li
64.1546 305.279 li
64.0537 304.96 63.9454 304.714 63.8248 304.567 cv
63.7042 304.42 63.5468 304.346 63.3524 304.346 cv
63.1014 304.346 62.907 304.42 62.7741 304.592 cv
62.6387 304.764 62.5452 304.984 62.496 305.304 cv
62.4468 305.598 62.4222 306.04 62.4222 306.605 cv
62.4222 307.268 li
64.1177 307.268 li
64.1177 308.348 li
62.4222 308.348 li
62.4222 313.775 li
62.4222 314.217 62.4443 314.512 62.4911 314.708 cv
62.5379 314.88 62.6215 315.027 62.7421 315.125 cv
62.8627 315.224 63.0743 315.322 63.3794 315.396 cv
63.3794 315.96 li
58.9993 315.96 li
58.9993 315.396 li
59.2749 315.297 59.4668 315.224 59.5751 315.125 cv
59.6834 315.027 59.7621 314.88 59.8089 314.708 cv
59.8556 314.512 59.8802 314.217 59.8802 313.775 cv
59.8802 308.348 li
58.8074 308.348 li
58.8074 307.759 li
59.1174 307.71 59.3315 307.661 59.4521 307.587 cv
59.5727 307.514 59.6711 307.415 59.7474 307.268 cv
59.8237 307.121 59.8753 306.875 59.9049 306.581 cv
60.0008 305.525 60.3921 304.714 61.0811 304.174 cv
61.7701 303.634 62.7446 303.364 64.0045 303.364 cv
cp
ef
211.816 254.329 mo
223.997 254.354 li
223.992 257.374 li
211.811 257.374 li
cp
233.131 254.354 mo
245.312 254.378 li
245.307 257.423 li
233.126 257.398 li
cp
254.449 254.403 mo
266.627 254.403 li
266.627 257.447 li
254.444 257.423 li
cp
275.756 254.427 mo
287.937 254.452 li
287.937 257.497 li
275.756 257.472 li
cp
297.091 254.452 mo
309.272 254.476 li
309.247 257.521 li
297.066 257.497 li
cp
318.401 254.501 mo
330.582 254.525 li
330.582 257.546 li
318.401 257.546 li
cp
339.711 254.525 mo
351.892 254.55 li
351.892 257.595 li
339.711 257.57 li
cp
361.021 254.575 mo
373.202 254.599 li
373.202 257.619 li
361.021 257.595 li
cp
382.356 254.599 mo
394.536 254.624 li
394.512 257.668 li
382.331 257.644 li
cp
403.666 254.648 mo
415.846 254.648 li
415.846 257.693 li
403.666 257.668 li
cp
424.976 254.673 mo
437.157 254.697 li
437.157 257.718 li
424.976 257.718 li
cp
446.286 254.697 mo
458.467 254.722 li
458.467 257.767 li
446.286 257.742 li
cp
467.621 254.746 mo
479.801 254.771 li
479.777 257.791 li
467.596 257.791 li
cp
488.931 254.771 mo
501.111 254.796 li
501.111 257.84 li
488.931 257.816 li
cp
510.241 254.82 mo
522.421 254.82 li
522.421 257.865 li
510.241 257.84 li
cp
531.551 254.845 mo
543.731 254.869 li
543.731 257.914 li
531.551 257.889 li
cp
552.885 254.869 mo
565.066 254.894 li
565.041 257.939 li
552.861 257.914 li
cp
574.195 254.918 mo
586.376 254.943 li
586.376 257.963 li
574.195 257.963 li
cp
595.505 254.943 mo
607.686 254.967 li
607.686 258.012 li
595.505 257.988 li
cp
616.815 254.992 mo
628.996 254.992 li
628.996 258.037 li
616.815 258.012 li
cp
638.15 255.017 mo
650.331 255.041 li
650.306 258.086 li
638.125 258.061 li
cp
659.46 255.041 mo
671.641 255.066 li
671.641 258.11 li
659.46 258.086 li
cp
680.77 255.09 mo
692.951 255.115 li
692.951 258.135 li
680.77 258.135 li
cp
702.08 255.115 mo
714.261 255.139 li
714.261 258.184 li
702.08 258.159 li
cp
723.415 255.164 mo
735.596 255.164 li
735.571 258.209 li
723.39 258.184 li
cp
744.725 255.188 mo
748.441 255.188 li
748.441 258.233 li
744.725 258.233 li
cp
.997223 .918425 .647791 .507591 cmyk
f
89.8644 253.445 mo
102.045 253.494 li
102.035 256.514 li
89.8546 256.49 li
cp
111.182 253.519 mo
118.608 253.543 li
118.596 256.588 li
111.17 256.563 li
cp
f
651.61 518.415 mo
726.171 518.415 li
726.171 522.467 li
651.61 522.467 li
cp
653.628 526.518 mo
641.447 520.441 li
653.628 514.364 li
cp
724.153 514.364 mo
736.334 520.441 li
724.153 526.518 li
cp
f
85.4301 68.0849 mo
218.672 68.0849 li
218.672 21.8983 li
214.612 25.9498 li
347.044 25.9498 li
347.044 17.8469 li
210.552 17.8469 li
210.552 64.0335 li
214.612 59.982 li
85.4301 59.982 li
cp
f
339.957 17.8469 mo
555.937 17.8469 li
555.937 25.9498 li
339.957 25.9498 li
cp
f
548.431 17.8469 mo
646.271 17.8469 li
646.271 64.0335 li
642.21 59.982 li
722.972 59.982 li
722.972 68.0849 li
638.15 68.0849 li
638.15 21.8983 li
642.21 25.9498 li
548.431 25.9498 li
cp
f
722.972 68.2322 mo
948.425 68.0849 li
948.401 59.982 li
722.947 60.1293 li
cp
f
87.4972 129.078 mo
220.739 129.078 li
220.739 82.8911 li
216.679 86.9426 li
349.111 86.9426 li
349.111 78.8397 li
212.619 78.8397 li
212.619 125.026 li
216.679 120.975 li
87.4972 120.975 li
cp
f
219.196 78.545 mo
419.784 78.545 li
419.784 122.473 li
415.723 118.421 li
724.276 118.421 li
724.276 126.524 li
411.663 126.524 li
411.663 82.5965 li
415.723 86.6479 li
219.196 86.6479 li
cp
f
720.61 126.475 mo
948.425 126.131 li
948.401 118.028 li
720.585 118.372 li
cp
f
412.377 18.4362 mo
450.322 18.4362 li
450.322 68.6743 li
412.377 68.6743 li
cp
420.497 64.6228 mo
416.437 60.5713 li
446.261 60.5713 li
442.201 64.6228 li
442.201 22.4876 li
446.261 26.5391 li
416.437 26.5391 li
420.497 22.4876 li
cp
f
442.939 20.1304 mo
413.14 61.7499 li
419.759 66.4398 li
449.559 24.8448 li
cp
f
419.808 20.2041 mo
447.615 61.1852 li
440.872 65.7277 li
413.09 24.7466 li
cp
f
54.4149 41.4681 mo
60.6972 41.4681 li
60.6972 42.2538 li
60.274 42.3766 59.9861 42.4994 59.831 42.6467 cv
59.6735 42.7695 59.5653 42.9659 59.5013 43.2114 cv
59.4373 43.457 59.4053 43.8744 59.4053 44.4637 cv
59.4053 56.348 li
61.7258 56.348 li
62.2303 56.348 62.6387 56.2498 62.9537 56.0533 cv
63.2687 55.8814 63.5394 55.5622 63.7682 55.1202 cv
63.9946 54.6783 64.221 53.9417 64.4425 52.9349 cv
66.0838 52.9349 li
65.8205 57.7722 li
54.4149 57.7722 li
54.4149 56.9864 li
54.8456 56.8636 55.1384 56.7408 55.2934 56.5935 cv
55.4509 56.4462 55.5567 56.2743 55.6109 56.0287 cv
55.6675 55.7833 55.6945 55.3658 55.6945 54.752 cv
55.6945 44.4883 li
55.6945 43.8744 55.6699 43.457 55.6182 43.2114 cv
55.5666 42.9905 55.4608 42.794 55.3008 42.6467 cv
55.1409 42.4994 54.8456 42.3766 54.4149 42.2538 cv
cp
39.9458 41.4681 mo
51.8164 41.4681 li
51.8164 45.274 li
50.1775 45.274 li
49.9142 44.5128 49.6903 43.9972 49.5082 43.7271 cv
49.3237 43.457 49.1047 43.2606 48.8487 43.0886 cv
48.5953 42.9413 48.1597 42.8677 47.5445 42.8677 cv
44.9362 42.8677 li
44.9362 48.5888 li
46.5159 48.5888 li
46.8678 48.5888 47.141 48.5397 47.3428 48.4415 cv
47.5421 48.3433 47.707 48.1714 47.8374 47.9504 cv
47.9702 47.7294 48.0957 47.3611 48.2163 46.8701 cv
49.5673 46.8701 li
49.5673 51.7318 li
48.2163 51.7318 li
48.1031 51.2652 47.9801 50.9214 47.8448 50.676 cv
47.7094 50.4304 47.547 50.2585 47.36 50.1603 cv
47.173 50.0375 46.89 49.9884 46.5159 49.9884 cv
44.9362 49.9884 li
44.9362 56.3725 li
47.5322 56.3725 li
47.8128 56.3725 48.0465 56.348 48.2385 56.3234 cv
48.4304 56.2743 48.6027 56.2252 48.7528 56.127 cv
48.9053 56.0533 49.0505 55.9305 49.1908 55.7833 cv
49.331 55.6113 49.4541 55.4641 49.5624 55.2921 cv
49.6682 55.0957 49.7838 54.8747 49.9019 54.5801 cv
50.0225 54.3099 50.1529 53.9171 50.2981 53.4015 cv
51.937 53.4015 li
51.7106 57.7722 li
39.9458 57.7722 li
39.9458 56.9864 li
40.3764 56.8636 40.6692 56.7408 40.8243 56.5935 cv
40.9817 56.4462 41.0876 56.2743 41.1417 56.0287 cv
41.1983 55.7833 41.2253 55.3658 41.2253 54.7765 cv
41.2253 44.4883 li
41.2253 43.8744 41.2007 43.457 41.1491 43.2114 cv
41.0974 42.9905 40.9916 42.794 40.8316 42.6467 cv
40.6717 42.4994 40.3764 42.3766 39.9458 42.2538 cv
cp
33.1042 41.2717 mo
33.8143 41.2717 34.4925 41.3208 35.1387 41.3944 cv
35.7849 41.4681 36.5229 41.5909 37.3521 41.7873 cv
37.3521 45.2495 li
35.713 45.2495 li
35.4977 44.3409 35.1786 43.7025 34.7558 43.2851 cv
34.3328 42.8677 33.7225 42.6712 32.9248 42.6712 cv
32.2067 42.6712 31.6302 42.8677 31.1954 43.236 cv
30.7605 43.6043 30.5433 44.1199 30.5433 44.7584 cv
30.5433 45.2249 30.6331 45.6178 30.8125 45.9615 cv
30.9921 46.3053 31.2931 46.6245 31.7161 46.9437 cv
32.1388 47.2874 32.7533 47.6558 33.5589 48.0486 cv
34.5402 48.5643 35.3122 49.0554 35.8747 49.5464 cv
36.437 50.0375 36.8526 50.5777 37.1184 51.1671 cv
37.3866 51.7318 37.5195 52.3947 37.5195 53.1805 cv
37.5195 54.1381 37.2931 54.9975 36.8378 55.7096 cv
36.3833 56.4462 35.7212 56.9864 34.8515 57.3793 cv
33.9819 57.7722 32.9767 57.9686 31.8356 57.9686 cv
31.0219 57.9686 30.1742 57.9194 29.2927 57.8212 cv
28.411 57.723 27.5832 57.6002 26.8093 57.4283 cv
26.8093 53.7452 li
28.4489 53.7452 li
28.6485 54.6783 28.9814 55.3904 29.4482 55.8569 cv
29.915 56.3234 30.5991 56.569 31.5005 56.569 cv
32.2904 56.569 32.9068 56.348 33.3495 55.9551 cv
33.7924 55.5377 34.0136 54.973 34.0136 54.2118 cv
34.0136 53.4997 33.8003 52.8858 33.3734 52.3947 cv
32.9467 51.9037 32.2067 51.388 31.1535 50.8724 cv
30.276 50.4304 29.544 49.9884 28.9576 49.5219 cv
28.3712 49.0799 27.9085 48.5397 27.5695 47.9504 cv
27.2304 47.3365 27.0608 46.649 27.0608 45.8633 cv
27.0608 44.8812 27.3042 44.0463 27.7907 43.3588 cv
28.2774 42.6712 28.9814 42.1556 29.903 41.8118 cv
30.8245 41.4435 31.8915 41.2717 33.1042 41.2717 cv
cp
ef
46.3732 109.066 mo
43.9789 115.794 li
48.2877 115.794 li
cp
56.4451 105.923 mo
62.3927 105.923 li
65.7097 115.745 li
69.3 105.923 li
74.9105 105.923 li
74.9105 106.709 li
74.4897 106.832 74.2018 106.979 74.0492 107.102 cv
73.8991 107.249 73.7933 107.445 73.7318 107.666 cv
73.6727 107.912 73.6432 108.329 73.6432 108.919 cv
73.6432 119.256 li
73.6432 119.723 73.6678 120.115 73.7145 120.41 cv
73.7638 120.68 73.8597 120.901 74.0074 121.048 cv
74.155 121.196 74.4577 121.319 74.9105 121.441 cv
74.9105 122.227 li
68.7734 122.227 li
68.7734 121.441 li
69.1228 121.343 69.3664 121.269 69.5018 121.196 cv
69.6371 121.122 69.7429 121.024 69.8192 120.901 cv
69.8955 120.803 69.9521 120.631 69.9865 120.386 cv
70.0234 120.14 70.0407 119.772 70.0407 119.231 cv
70.0407 113.363 li
70.0407 112.725 70.053 111.963 70.0776 111.079 cv
70.0997 110.22 70.1243 109.606 70.1489 109.238 cv
69.8979 109.238 li
69.7528 109.704 69.4501 110.564 68.9875 111.816 cv
65.7811 120.435 li
63.6747 120.435 li
60.2986 110.736 li
60.0993 110.195 59.9245 109.655 59.772 109.115 cv
59.5579 109.115 li
59.6366 110.417 59.676 111.963 59.676 113.756 cv
59.676 119.256 li
59.676 119.845 59.7055 120.263 59.7621 120.484 cv
59.8163 120.729 59.9295 120.901 60.0968 121.073 cv
60.2641 121.22 60.5545 121.343 60.9704 121.441 cv
60.9704 122.227 li
56.4451 122.227 li
56.4451 121.441 li
56.8757 121.343 57.171 121.196 57.326 121.073 cv
57.481 120.926 57.5868 120.729 57.6434 120.508 cv
57.6976 120.263 57.7271 119.845 57.7271 119.256 cv
57.7271 108.919 li
57.7271 108.305 57.7 107.887 57.6484 107.666 cv
57.5967 107.445 57.4958 107.274 57.3432 107.126 cv
57.1931 106.979 56.8929 106.856 56.4451 106.709 cv
cp
45.8466 105.849 mo
49.0407 105.849 li
52.9902 119.231 li
53.1649 119.821 53.3125 120.238 53.4331 120.484 cv
53.5537 120.754 53.7087 120.95 53.9006 121.098 cv
54.0901 121.269 54.3583 121.368 54.7004 121.441 cv
54.7004 122.227 li
48.0957 122.227 li
48.0957 121.441 li
48.5092 121.392 48.8167 121.269 49.0161 121.098 cv
49.2154 120.926 49.3163 120.656 49.3163 120.312 cv
49.3163 120.066 49.2892 119.796 49.2326 119.502 cv
49.176 119.207 49.085 118.814 48.957 118.348 cv
48.6347 117.169 li
43.5237 117.169 li
43.13 118.323 li
43.0168 118.642 42.9257 118.937 42.8544 119.231 cv
42.783 119.551 42.7461 119.845 42.7461 120.189 cv
42.7461 120.975 43.162 121.392 43.9912 121.441 cv
43.9912 122.227 li
38.8803 122.227 li
38.8803 121.441 li
39.1756 121.417 39.4339 121.319 39.6579 121.122 cv
39.8818 120.95 40.086 120.729 40.2681 120.41 cv
40.4527 120.115 40.6471 119.673 40.8562 119.109 cv
cp
33.1042 105.751 mo
33.8143 105.751 34.4925 105.776 35.1387 105.849 cv
35.7849 105.923 36.5229 106.07 37.3521 106.242 cv
37.3521 109.729 li
35.713 109.729 li
35.4977 108.82 35.1786 108.157 34.7558 107.765 cv
34.3328 107.347 33.7225 107.126 32.9248 107.126 cv
32.2067 107.126 31.6302 107.323 31.1954 107.691 cv
30.7605 108.084 30.5433 108.575 30.5433 109.238 cv
30.5433 109.68 30.6331 110.097 30.8125 110.417 cv
30.9921 110.76 31.2931 111.104 31.7161 111.423 cv
32.1388 111.742 32.7533 112.111 33.5589 112.528 cv
34.5402 113.044 35.3122 113.535 35.8747 114.026 cv
36.437 114.517 36.8526 115.057 37.1184 115.622 cv
37.3866 116.211 37.5195 116.874 37.5195 117.635 cv
37.5195 118.618 37.2931 119.452 36.8378 120.189 cv
36.3833 120.901 35.7212 121.466 34.8515 121.834 cv
33.9819 122.227 32.9767 122.424 31.8356 122.424 cv
31.0219 122.424 30.1742 122.374 29.2927 122.276 cv
28.411 122.203 27.5832 122.055 26.8093 121.883 cv
26.8093 118.2 li
28.4489 118.2 li
28.6485 119.158 28.9814 119.87 29.4482 120.336 cv
29.915 120.803 30.5991 121.024 31.5005 121.024 cv
32.2904 121.024 32.9068 120.827 33.3495 120.41 cv
33.7924 120.017 34.0136 119.428 34.0136 118.691 cv
34.0136 117.955 33.8003 117.341 33.3734 116.85 cv
32.9467 116.359 32.2067 115.843 31.1535 115.327 cv
30.276 114.91 29.544 114.468 28.9576 114.001 cv
28.3712 113.535 27.9085 113.019 27.5695 112.405 cv
27.2304 111.792 27.0608 111.104 27.0608 110.318 cv
27.0608 109.336 27.3042 108.526 27.7907 107.838 cv
28.2774 107.151 28.9814 106.635 29.903 106.267 cv
30.8245 105.923 31.8915 105.751 33.1042 105.751 cv
cp
ef
391.682 37.4658 mo
398.351 37.4658 li
398.351 38.2515 li
397.957 38.2761 397.711 38.3742 397.539 38.497 cv
397.391 38.6443 397.317 38.8408 397.317 39.1108 cv
397.317 39.3318 397.391 39.5774 397.514 39.8475 cv
397.637 40.1422 397.908 40.6332 398.326 41.2962 cv
399.433 43.1624 li
400.885 41.0261 li
401.205 40.5596 401.402 40.1913 401.525 39.9457 cv
401.623 39.7002 401.673 39.4301 401.673 39.1354 cv
401.673 38.8899 401.599 38.6689 401.427 38.5216 cv
401.254 38.3742 401.008 38.2761 400.688 38.2515 cv
400.688 37.4658 li
405.634 37.4658 li
405.634 38.2515 li
405.413 38.3251 405.191 38.4233 404.97 38.5707 cv
404.773 38.6935 404.527 38.939 404.256 39.2582 cv
403.986 39.5774 403.543 40.1667 402.952 41.0261 cv
400.368 44.6847 li
403.863 50.455 li
404.232 51.0934 404.552 51.5844 404.798 51.9282 cv
405.044 52.272 405.241 52.5175 405.438 52.6649 cv
405.634 52.8367 405.831 52.9349 406.028 52.9595 cv
406.028 53.7452 li
399.384 53.7452 li
399.384 52.9595 li
399.729 52.9349 399.975 52.8367 400.147 52.7139 cv
400.319 52.5912 400.393 52.3947 400.393 52.1001 cv
400.393 51.9773 400.368 51.83 400.319 51.6581 cv
400.27 51.4863 400.196 51.3143 400.098 51.1425 cv
400.024 50.9706 399.852 50.676 399.606 50.2585 cv
397.932 47.533 li
395.988 50.4058 li
395.841 50.6268 395.718 50.8478 395.595 51.0443 cv
395.496 51.2161 395.422 51.4126 395.398 51.5599 cv
395.348 51.7072 395.324 51.9037 395.324 52.1246 cv
395.324 52.3456 395.422 52.5175 395.595 52.6894 cv
395.767 52.8367 396.013 52.9349 396.333 52.9595 cv
396.333 53.7452 li
391.362 53.7452 li
391.362 52.9595 li
391.731 52.8613 392.076 52.6403 392.396 52.3456 cv
392.716 52.051 393.208 51.4126 393.872 50.455 cv
396.997 45.9861 li
393.995 40.977 li
393.651 40.4368 393.38 39.9948 393.134 39.6265 cv
392.912 39.2828 392.716 38.9881 392.543 38.8162 cv
392.396 38.6198 392.248 38.497 392.125 38.4233 cv
392.002 38.3251 391.854 38.2761 391.682 38.2515 cv
cp
376.13 37.4658 mo
390.23 37.4658 li
390.23 41.64 li
388.581 41.64 li
388.409 41.0507 388.262 40.5842 388.139 40.2649 cv
388.015 39.9457 387.868 39.6756 387.696 39.4547 cv
387.499 39.2582 387.302 39.0863 387.056 38.9881 cv
386.81 38.8899 386.416 38.8654 385.899 38.8654 cv
385.038 38.8654 li
385.038 50.7496 li
385.038 51.388 385.087 51.8054 385.136 52.051 cv
385.21 52.2965 385.333 52.4929 385.506 52.6403 cv
385.702 52.7876 386.022 52.8858 386.49 52.9595 cv
386.49 53.7452 li
379.895 53.7452 li
379.895 52.9595 li
380.215 52.9103 380.486 52.8367 380.682 52.7385 cv
380.879 52.6649 381.027 52.5175 381.125 52.3702 cv
381.224 52.1983 381.273 51.9773 381.298 51.7318 cv
381.322 51.4617 381.322 51.1425 381.322 50.7496 cv
381.322 38.8654 li
380.363 38.8654 li
379.87 38.8654 379.501 38.9144 379.206 39.0372 cv
378.911 39.1845 378.665 39.4055 378.443 39.7739 cv
378.222 40.1176 378 40.756 377.779 41.64 cv
376.13 41.64 li
cp
ef
217.72 193.484 mo
644.819 193.484 li
644.819 143.589 li
640.758 147.641 li
950.123 147.641 li
950.123 139.538 li
636.698 139.538 li
636.698 189.432 li
640.758 185.381 li
217.72 185.381 li
cp
f
901.302 139.243 mo
951.919 139.243 li
951.919 188.401 li
947.859 184.349 li
957.038 184.349 li
957.038 192.452 li
943.799 192.452 li
943.799 143.295 li
947.859 147.346 li
901.302 147.346 li
cp
f
41.3853 165.148 mo
46.233 165.148 li
50.4704 172.49 li
50.7337 172.956 51.0757 173.57 51.499 174.356 cv
51.9222 175.142 52.2962 175.903 52.6235 176.59 cv
52.8155 176.59 li
52.7269 174.7 52.6826 172.612 52.6826 170.353 cv
52.6826 168.144 li
52.6826 167.603 52.6629 167.235 52.6235 167.014 cv
52.5841 166.793 52.5202 166.597 52.4316 166.498 cv
52.3455 166.376 52.2347 166.277 52.1018 166.204 cv
51.9714 166.13 51.7376 166.032 51.403 165.934 cv
51.403 165.148 li
55.9258 165.148 li
55.9258 165.934 li
55.6084 166.032 55.382 166.13 55.2516 166.179 cv
55.1187 166.253 55.008 166.351 54.9145 166.474 cv
54.8234 166.597 54.7545 166.769 54.7053 167.014 cv
54.6586 167.26 54.6339 167.628 54.6339 168.144 cv
54.6339 181.427 li
51.5949 181.427 li
46.2084 172.146 li
45.4824 170.894 44.9485 169.911 44.6064 169.199 cv
44.4981 169.199 li
44.5769 170.894 44.6163 172.711 44.6163 174.601 cv
44.6163 178.456 li
44.6163 179.046 44.6482 179.463 44.7073 179.709 cv
44.7664 179.954 44.8746 180.126 45.0297 180.273 cv
45.1847 180.421 45.48 180.543 45.9106 180.642 cv
45.9106 181.427 li
41.3853 181.427 li
41.3853 180.642 li
41.8085 180.543 42.0989 180.421 42.2539 180.273 cv
42.409 180.126 42.5172 179.93 42.5763 179.684 cv
42.6378 179.463 42.6673 179.046 42.6673 178.456 cv
42.6673 168.119 li
42.6673 167.53 42.6403 167.112 42.5886 166.891 cv
42.5369 166.67 42.4287 166.474 42.2662 166.327 cv
42.1014 166.179 41.8085 166.032 41.3853 165.934 cv
cp
26.953 165.148 mo
38.8237 165.148 li
38.8237 168.929 li
37.1848 168.929 li
36.9215 168.193 36.6976 167.677 36.515 167.407 cv
36.3314 167.137 36.1119 166.916 35.8567 166.769 cv
35.6013 166.621 35.1665 166.548 34.5523 166.548 cv
31.9434 166.548 li
31.9434 172.269 li
33.523 172.269 li
33.8741 172.269 34.1495 172.22 34.3488 172.121 cv
34.5484 172.023 34.7137 171.851 34.8454 171.63 cv
34.977 171.385 35.1028 171.041 35.2224 170.55 cv
36.5748 170.55 li
36.5748 175.387 li
35.2224 175.387 li
35.1106 174.945 34.9871 174.577 34.8515 174.331 cv
34.7157 174.086 34.5543 173.914 34.3668 173.816 cv
34.1793 173.717 33.898 173.668 33.523 173.668 cv
31.9434 173.668 li
31.9434 180.052 li
34.5402 180.052 li
34.8195 180.052 35.0548 180.028 35.2465 179.979 cv
35.4379 179.954 35.6094 179.88 35.761 179.807 cv
35.9126 179.709 36.058 179.586 36.1978 179.439 cv
36.3373 179.291 36.4611 179.119 36.5686 178.947 cv
36.6754 178.776 36.7911 178.555 36.9092 178.26 cv
37.0298 177.965 37.1602 177.572 37.3054 177.081 cv
38.9442 177.081 li
38.7179 181.427 li
26.953 181.427 li
26.953 180.642 li
27.3839 180.543 27.677 180.421 27.8325 180.273 cv
27.9883 180.126 28.0938 179.93 28.1497 179.709 cv
28.2056 179.463 28.2336 179.046 28.2336 178.432 cv
28.2336 168.144 li
28.2336 167.554 28.2075 167.112 28.1558 166.891 cv
28.1039 166.646 27.9981 166.474 27.8387 166.327 cv
27.679 166.179 27.3839 166.056 26.953 165.934 cv
cp
ef
219.248 192.501 mo
214.277 192.501 li
214.277 152.723 li
218.337 156.775 li
87.4972 156.775 li
87.4972 148.672 li
222.398 148.672 li
222.398 188.45 li
218.337 184.398 li
219.248 184.398 li
cp
f
901.302 126.107 mo
953.544 126.107 li
953.544 83.1858 li
949.483 87.2373 li
957.038 87.2373 li
957.038 79.1343 li
945.423 79.1343 li
945.423 122.055 li
949.483 118.004 li
901.302 118.004 li
cp
f
903.074 67.1764 mo
955.315 67.1764 li
955.315 24.2556 li
951.255 28.307 li
958.81 28.307 li
958.81 20.2041 li
947.195 20.2041 li
947.195 63.125 li
951.255 59.0735 li
903.074 59.0735 li
cp
f
289.192 37.9814 mo
295.811 37.9814 li
295.811 38.7671 li
295.393 38.8162 295.098 38.9144 294.901 39.1108 cv
294.704 39.2828 294.606 39.5529 294.606 39.8721 cv
294.606 40.1422 294.63 40.4122 294.679 40.6578 cv
294.704 40.9033 294.827 41.2962 294.975 41.861 cv
297.337 50.4304 li
300.29 41.8855 li
300.413 41.5663 300.511 41.2471 300.585 40.9525 cv
300.634 40.6578 300.684 40.3386 300.684 40.0193 cv
300.684 39.6265 300.585 39.3318 300.364 39.1108 cv
300.167 38.9144 299.847 38.7916 299.429 38.7671 cv
299.429 37.9814 li
304.596 37.9814 li
304.596 38.7671 li
304.276 38.8162 304.03 38.9144 303.809 39.0618 cv
303.612 39.2091 303.415 39.4055 303.243 39.6756 cv
303.071 39.9703 302.874 40.4122 302.628 41.0261 cv
297.632 54.3591 li
294.852 54.3591 li
290.915 40.977 li
290.742 40.3877 290.595 39.9703 290.472 39.7002 cv
290.349 39.4547 290.201 39.2582 290.004 39.1108 cv
289.807 38.939 289.537 38.8408 289.192 38.7671 cv
cp
ef
315.694 50.4304 mo
316.137 50.4304 316.555 50.455 316.974 50.4795 cv
317.368 50.5286 317.909 50.6023 318.549 50.725 cv
318.549 52.7631 li
317.392 52.7631 li
317.269 52.3947 317.121 52.1001 316.949 51.9037 cv
316.802 51.6826 316.605 51.5353 316.408 51.4617 cv
316.236 51.388 315.99 51.3389 315.719 51.3389 cv
315.325 51.3389 315.03 51.4371 314.808 51.609 cv
314.562 51.7809 314.464 52.0264 314.464 52.3456 cv
314.464 52.5666 314.488 52.7631 314.587 52.9103 cv
314.661 53.0823 314.808 53.2296 315.03 53.3769 cv
315.227 53.5242 315.645 53.7206 316.236 53.9907 cv
317.121 54.3345 317.737 54.7274 318.106 55.1694 cv
318.475 55.5868 318.647 56.1024 318.647 56.6917 cv
318.647 57.5757 318.327 58.2386 317.712 58.7051 cv
317.072 59.1963 316.186 59.4172 315.054 59.4172 cv
314.07 59.4172 313.012 59.2945 311.806 58.9998 cv
311.806 56.9127 li
312.987 56.9127 li
313.135 57.4529 313.357 57.8458 313.676 58.1159 cv
313.972 58.386 314.39 58.5088 314.882 58.5088 cv
315.325 58.5088 315.67 58.4105 315.891 58.2141 cv
316.113 58.0176 316.236 57.723 316.236 57.3301 cv
316.236 57.1091 316.162 56.8882 316.063 56.7162 cv
315.965 56.569 315.793 56.3971 315.571 56.2498 cv
315.325 56.0779 314.907 55.8814 314.341 55.6359 cv
313.529 55.2676 312.938 54.8747 312.569 54.4573 cv
312.2 54.0153 312.003 53.5242 312.003 53.0086 cv
312.003 52.4684 312.151 52.0264 312.471 51.6335 cv
312.766 51.2407 313.209 50.946 313.775 50.7496 cv
314.341 50.5286 314.981 50.4304 315.694 50.4304 cv
cp
309.788 50.4304 mo
310.133 50.4304 310.502 50.4795 310.896 50.5532 cv
310.896 52.9595 li
309.321 52.9595 li
309.222 52.6403 309.075 52.3702 308.927 52.1983 cv
308.755 52.0018 308.533 51.9282 308.263 51.9282 cv
308.14 51.9282 307.992 51.9528 307.844 52.0264 cv
307.697 52.1246 307.549 52.2228 307.426 52.3702 cv
307.278 52.5175 307.18 52.6649 307.131 52.8121 cv
307.082 52.9595 307.032 53.1068 307.032 53.2542 cv
307.008 53.4015 307.008 53.647 307.008 53.9417 cv
307.008 56.7408 li
307.008 57.3056 307.008 57.6985 307.057 57.9194 cv
307.106 58.1404 307.18 58.3123 307.303 58.4351 cv
307.426 58.5579 307.648 58.6561 307.918 58.7051 cv
307.918 59.27 li
303.587 59.27 li
303.587 58.7051 li
303.883 58.6315 304.079 58.5333 304.178 58.4105 cv
304.276 58.2877 304.35 58.1159 304.399 57.8949 cv
304.449 57.6985 304.449 57.3056 304.449 56.7654 cv
304.449 53.1559 li
304.449 52.7139 304.449 52.3947 304.424 52.1738 cv
304.424 51.9773 304.375 51.8054 304.326 51.6826 cv
304.276 51.5599 304.178 51.4617 304.079 51.388 cv
303.956 51.2898 303.76 51.2407 303.489 51.1671 cv
303.489 50.5777 li
305.9 50.504 li
307.008 50.504 li
306.885 51.83 li
306.983 51.8546 li
307.426 51.3635 307.869 50.9951 308.312 50.7742 cv
308.755 50.5532 309.247 50.4304 309.788 50.4304 cv
cp
321.526 48.3924 mo
323.642 48.3924 li
323.642 50.5777 li
326.152 50.5777 li
326.152 51.6826 li
323.642 51.6826 li
323.642 55.6359 li
323.642 56.2988 323.667 56.7899 323.716 57.0846 cv
323.79 57.4038 323.888 57.6494 324.036 57.7967 cv
324.184 57.944 324.381 58.0176 324.578 58.0176 cv
324.873 58.0176 325.119 57.9686 325.316 57.8703 cv
325.537 57.7722 325.709 57.6494 325.882 57.502 cv
326.448 58.2386 li
325.931 58.6561 325.463 58.9753 325.045 59.1472 cv
324.602 59.3436 324.159 59.4172 323.692 59.4172 cv
322.83 59.4172 322.166 59.1963 321.748 58.7051 cv
321.305 58.2386 321.083 57.5266 321.083 56.569 cv
321.083 51.6826 li
320.001 51.6826 li
320.001 51.0688 li
320.345 51.0197 320.616 50.9214 320.788 50.7987 cv
320.96 50.676 321.083 50.5286 321.182 50.3322 cv
321.28 50.1357 321.354 49.8902 321.403 49.571 cv
321.452 49.2518 321.502 48.8589 321.526 48.3924 cv
cp
ef
518.066 38.3742 mo
524.685 38.3742 li
524.685 39.1845 li
524.267 39.2336 523.972 39.3318 523.75 39.5283 cv
523.553 39.7002 523.455 39.9703 523.455 40.2895 cv
523.455 40.5596 523.479 40.8051 523.529 41.0752 cv
523.578 41.3208 523.676 41.7136 523.824 42.2784 cv
526.211 50.8478 li
529.164 42.3029 li
529.287 41.9592 529.361 41.6646 529.434 41.3699 cv
529.508 41.0752 529.533 40.756 529.533 40.4368 cv
529.533 40.0439 529.434 39.7493 529.238 39.5283 cv
529.041 39.3318 528.721 39.2091 528.302 39.1845 cv
528.302 38.3742 li
533.445 38.3742 li
533.445 39.1845 li
533.15 39.2336 532.904 39.3318 532.683 39.4547 cv
532.461 39.6019 532.289 39.8229 532.117 40.0931 cv
531.944 40.3632 531.723 40.8297 531.501 41.4435 cv
526.482 54.7765 li
523.726 54.7765 li
519.764 41.3944 li
519.591 40.8051 519.444 40.3632 519.321 40.1176 cv
519.222 39.8721 519.05 39.6756 518.878 39.5037 cv
518.681 39.3564 518.41 39.2582 518.066 39.1845 cv
cp
ef
549.268 60.2521 mo
549.047 60.424 548.899 60.5959 548.8 60.7923 cv
548.677 60.9887 548.628 61.2097 548.628 61.4553 cv
548.628 61.8727 548.8 62.1919 549.17 62.3883 cv
549.539 62.5847 550.129 62.7076 550.917 62.7076 cv
551.655 62.7076 552.221 62.5847 552.59 62.3392 cv
552.984 62.0937 553.181 61.7254 553.181 61.2834 cv
553.181 60.9151 553.058 60.6695 552.811 60.5222 cv
552.59 60.3749 552.245 60.3012 551.778 60.3012 cv
550.277 60.3012 li
549.834 60.3012 549.514 60.2766 549.268 60.2521 cv
cp
550.867 51.7563 mo
550.425 51.7563 550.105 51.9282 549.908 52.2474 cv
549.686 52.5912 549.588 53.1068 549.588 53.7943 cv
549.588 54.5555 549.686 55.0957 549.908 55.4641 cv
550.105 55.8078 550.425 55.9796 550.867 55.9796 cv
551.286 55.9796 551.581 55.8323 551.803 55.4886 cv
552.024 55.1694 552.122 54.6537 552.122 53.9662 cv
552.122 53.2542 552.024 52.6894 551.827 52.3211 cv
551.606 51.9528 551.286 51.7563 550.867 51.7563 cv
cp
543.338 50.9214 mo
544.42 50.9214 li
544.42 57.1583 li
544.42 57.723 544.445 58.1159 544.47 58.3123 cv
544.519 58.5088 544.568 58.6806 544.691 58.8034 cv
544.814 58.9507 545.011 59.049 545.306 59.1226 cv
545.306 59.6874 li
541.025 59.6874 li
541.025 59.1226 li
541.295 59.049 541.492 58.9507 541.615 58.8279 cv
541.714 58.7051 541.787 58.5333 541.837 58.3123 cv
541.861 58.1159 541.886 57.723 541.886 57.1583 cv
541.886 53.0823 li
541.886 52.6894 541.861 52.3947 541.812 52.2228 cv
541.763 52.051 541.664 51.9037 541.541 51.83 cv
541.418 51.7318 541.221 51.6581 540.901 51.5844 cv
540.901 50.9951 li
cp
550.892 50.8478 mo
551.187 50.8478 551.458 50.8724 551.68 50.8969 cv
551.901 50.9214 552.122 50.946 552.344 50.9951 cv
555.518 50.9951 li
555.518 52.1738 li
554.017 52.0018 li
553.993 52.1001 li
554.14 52.2474 554.288 52.4929 554.386 52.7631 cv
554.509 53.0577 554.559 53.4015 554.559 53.7943 cv
554.559 54.801 554.239 55.5868 553.624 56.1024 cv
553.008 56.6426 552.098 56.8882 550.892 56.8882 cv
550.326 56.8882 549.834 56.8391 549.465 56.7408 cv
549.17 57.0109 549.022 57.2811 549.022 57.6002 cv
549.022 57.7722 549.071 57.8949 549.145 57.9931 cv
549.219 58.0913 549.342 58.165 549.514 58.2141 cv
549.686 58.2632 549.932 58.2877 550.252 58.2877 cv
552.442 58.2877 li
553.427 58.2877 554.165 58.4842 554.632 58.8525 cv
555.125 59.2208 555.371 59.8347 555.371 60.6205 cv
555.371 61.2589 555.198 61.799 554.829 62.241 cv
554.485 62.683 553.968 63.0268 553.304 63.2723 cv
552.664 63.5178 551.876 63.616 550.966 63.616 cv
550.302 63.616 549.686 63.5915 549.145 63.5424 cv
548.604 63.4687 548.161 63.3705 547.767 63.2232 cv
547.398 63.0759 547.103 62.8549 546.881 62.5847 cv
546.684 62.3147 546.586 61.9709 546.586 61.5535 cv
546.586 61.2343 546.684 60.9151 546.906 60.645 cv
547.103 60.3503 547.398 60.1048 547.792 59.9083 cv
547.545 59.7365 547.349 59.54 547.25 59.319 cv
547.127 59.0735 547.078 58.8034 547.078 58.4597 cv
547.078 58.1159 547.176 57.7722 547.398 57.4529 cv
547.595 57.1337 547.939 56.7654 548.456 56.3971 cv
547.988 56.127 547.644 55.8078 547.422 55.3904 cv
547.176 54.973 547.053 54.4819 547.053 53.9171 cv
547.053 53.205 547.226 52.6403 547.57 52.1738 cv
547.89 51.7072 548.358 51.3635 548.923 51.1671 cv
549.489 50.946 550.154 50.8478 550.892 50.8478 cv
cp
536.3 50.8478 mo
536.743 50.8478 537.161 50.8724 537.555 50.8969 cv
537.973 50.946 538.515 51.0197 539.154 51.1179 cv
539.154 53.1805 li
537.998 53.1805 li
537.85 52.8121 537.703 52.5175 537.555 52.2965 cv
537.383 52.1001 537.21 51.9528 537.013 51.8791 cv
536.817 51.8054 536.595 51.7563 536.324 51.7563 cv
535.931 51.7563 535.635 51.8546 535.389 52.0264 cv
535.168 52.1983 535.045 52.4438 535.045 52.7631 cv
535.045 52.9841 535.094 53.1805 535.168 53.3278 cv
535.266 53.4997 535.414 53.647 535.611 53.7943 cv
535.832 53.9417 536.226 54.1381 536.841 54.3836 cv
537.703 54.752 538.342 55.1448 538.711 55.5868 cv
539.056 56.0042 539.253 56.5198 539.253 57.1091 cv
539.253 57.9931 538.933 58.6561 538.318 59.1226 cv
537.678 59.5891 536.792 59.8347 535.635 59.8347 cv
534.676 59.8347 533.593 59.6874 532.412 59.4172 cv
532.412 57.3301 li
533.593 57.3301 li
533.741 57.8703 533.962 58.2632 534.257 58.5333 cv
534.577 58.7789 534.971 58.9262 535.488 58.9262 cv
535.931 58.9262 536.251 58.8279 536.472 58.6315 cv
536.718 58.4351 536.817 58.1404 536.817 57.7476 cv
536.817 57.5266 536.767 57.3056 536.669 57.1337 cv
536.571 56.9619 536.398 56.8145 536.152 56.6426 cv
535.931 56.4953 535.512 56.2988 534.946 56.0533 cv
534.11 55.685 533.519 55.2921 533.15 54.8747 cv
532.781 54.4327 532.609 53.9417 532.609 53.4015 cv
532.609 52.8858 532.756 52.4193 533.052 52.051 cv
533.372 51.6581 533.79 51.3635 534.356 51.1671 cv
534.922 50.946 535.586 50.8478 536.3 50.8478 cv
cp
541.935 47.4839 mo
544.346 47.4839 li
544.346 49.6447 li
541.935 49.6447 li
cp
ef
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/IILCOO+CambriaMath*1 uf
/IILCOO+CambriaMath uf
/KAAAAA+CambriaMath uf
/IILCON+Calibri-Bold*1 uf
/IILCON+Calibri-Bold uf
/IAAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
