%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SSWAVE.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: lwzz0
%%CreationDate: 2022/5/15, 22:22:48
%%BoundingBox: 0 0 986 491
%%HiResBoundingBox: 0 0 985.3965 490.3181
%%CropBox: 0 0 985.3965 490.3181
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1181 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® LTSC"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® LTSC"
   xmp:CreateDate="2022-05-15T22:21:11+08:00"
   xmp:ModifyDate="2022-05-15T22:22:35+08:00"
   xmp:MetadataDate="2022-05-15T22:22:35+08:00"
   xmpMM:DocumentID="uuid:59ADEF58-1F42-431B-A0FE-F7C1F231F3FD"
   xmpMM:InstanceID="uuid:817a09a2-c478-41e2-84ae-a1d0cffab33c">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>李 王臻</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -490.318 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
3.05176e-5 0 mo
3.05176e-5 490.318 li
985.396 490.318 li
985.396 0 li
cp
clp
gsave
-.976959 490.617 mo
986.023 490.617 li
986.023 -.383179 li
-.976959 -.383179 li
cp
clp
gsave
-218.977 671.617 mo
1494.74 671.617 li
1494.74 -170.183 li
-218.977 -170.183 li
cp
eclp
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
-218.977 671.707 mo
1494.85 671.707 li
1494.85 -170.183 li
-218.977 -170.183 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
grestore
106.326 437.198 mo
106.327 201.529 li
103.851 201.529 li
103.85 437.198 li
cp
108.802 202.767 mo
105.088 195.35 li
101.375 202.767 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.997223 .918425 .647791 .507591 cmyk
f
105.088 435.145 mo
861.654 435.145 li
861.654 437.616 li
105.088 437.615 li
cp
860.403 432.674 mo
867.836 436.381 li
860.403 440.087 li
cp
f
105.748 307.568 mo
195.073 307.568 li
195.073 310.863 li
105.748 310.863 li
cp
.00161746 .252781 .875608 0 cmyk
f
221.222 334.882 mo
360.648 334.882 li
360.648 338.176 li
221.222 338.176 li
cp
f
361.758 336.389 mo
362.909 338.226 li
362.899 338.216 li
364.049 340.023 li
364.039 340.003 li
365.199 341.77 li
365.169 341.72 li
366.33 343.387 li
366.3 343.337 li
367.47 344.885 li
367.41 344.825 li
368.6 346.232 li
368.54 346.163 li
369.141 346.791 li
369.091 346.752 li
369.691 347.341 li
369.631 347.281 li
370.241 347.82 li
370.181 347.77 li
370.781 348.259 li
370.691 348.189 li
371.311 348.618 li
371.221 348.558 li
371.842 348.938 li
371.741 348.878 li
372.362 349.197 li
372.272 349.157 li
372.902 349.437 li
372.752 349.377 li
374.012 349.796 li
373.832 349.746 li
375.103 350.016 li
374.963 349.996 li
376.243 350.156 li
376.133 350.146 li
377.423 350.206 li
377.353 350.206 li
378.644 350.226 li
378.594 350.226 li
379.894 350.196 li
379.954 353.49 li
378.634 353.52 li
377.283 353.5 li
375.903 353.43 li
374.492 353.26 li
373.052 352.951 li
371.631 352.482 li
370.891 352.152 li
370.171 351.783 li
369.461 351.344 li
368.76 350.865 li
368.08 350.315 li
367.41 349.716 li
366.75 349.078 li
366.1 348.379 li
364.859 346.901 li
363.639 345.294 li
362.448 343.587 li
361.278 341.8 li
360.108 339.973 li
358.957 338.126 li
cp
f
379.924 353.56 mo
806.856 351.234 li
806.836 347.94 li
379.914 350.266 li
cp
f
795.492 271.32 mo
546.169 393.795 li
547.62 396.751 li
796.952 274.275 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
195.713 308.307 mo
198.164 311.991 li
198.154 311.981 li
200.585 315.585 li
201.785 317.352 li
202.966 319.079 li
202.956 319.059 li
204.126 320.736 li
204.116 320.736 li
205.266 322.353 li
205.256 322.343 li
206.387 323.911 li
206.367 323.891 li
207.477 325.388 li
207.467 325.378 li
208.537 326.796 li
208.517 326.786 li
209.558 328.113 li
209.538 328.083 li
210.548 329.341 li
210.518 329.301 li
211.498 330.439 li
211.468 330.419 li
212.399 331.458 li
212.359 331.408 li
213.249 332.326 li
213.199 332.276 li
214.049 333.075 li
213.979 333.025 li
214.789 333.714 li
214.719 333.644 li
215.48 334.223 li
215.4 334.163 li
216.13 334.652 li
216.03 334.592 li
216.73 334.982 li
216.6 334.912 li
217.26 335.211 li
217.15 335.171 li
217.79 335.401 li
217.63 335.351 li
218.251 335.511 li
218.111 335.481 li
218.701 335.581 li
218.561 335.561 li
219.131 335.601 li
219.001 335.601 li
219.561 335.601 li
219.441 335.601 li
219.991 335.571 li
219.851 335.581 li
220.902 335.421 li
220.801 335.431 li
221.842 335.211 li
222.542 338.426 li
221.462 338.665 li
220.291 338.845 li
219.611 338.895 li
218.941 338.895 li
218.231 338.835 li
217.5 338.715 li
216.74 338.526 li
215.97 338.246 li
215.18 337.887 li
214.359 337.437 li
213.529 336.888 li
212.689 336.249 li
211.808 335.501 li
210.898 334.642 li
209.958 333.674 li
208.998 332.596 li
207.997 331.428 li
206.957 330.15 li
205.907 328.792 li
204.816 327.355 li
203.706 325.837 li
202.575 324.26 li
201.415 322.623 li
200.235 320.936 li
199.054 319.199 li
197.854 317.432 li
195.413 313.818 li
192.972 310.134 li
cp
.00161746 .252781 .875608 0 cmyk
f
202.545 271.33 mo
104.292 320.157 li
105.764 323.112 li
204.016 274.275 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
219.911 393.584 mo
547.69 393.584 li
547.69 396.878 li
219.901 396.878 li
cp
f
204.506 273.367 mo
206.307 292.055 li
207.227 301.299 li
208.147 310.424 li
208.147 310.414 li
209.088 319.378 li
209.088 319.368 li
210.048 328.123 li
210.038 328.123 li
211.018 336.649 li
211.018 336.639 li
212.029 344.875 li
212.029 344.865 li
213.059 352.781 li
213.059 352.761 li
214.139 360.318 li
214.139 360.298 li
215.25 367.456 li
215.24 367.436 li
215.82 370.85 li
215.82 370.84 li
216.4 374.145 li
216.4 374.125 li
216.99 377.309 li
216.99 377.289 li
217.6 380.344 li
217.59 380.324 li
218.221 383.239 li
218.211 383.219 li
218.841 386.017 li
218.831 385.985 li
219.491 388.627 li
219.481 388.603 li
220.141 391.111 li
220.131 391.076 li
220.811 393.427 li
220.791 393.387 li
221.482 395.581 li
218.341 396.568 li
217.64 394.354 li
216.95 391.965 li
216.29 389.428 li
215.63 386.756 li
214.99 383.938 li
214.359 380.993 li
213.749 377.918 li
213.159 374.724 li
212.569 371.409 li
211.989 367.975 li
210.878 360.798 li
209.788 353.22 li
208.757 345.284 li
207.737 337.028 li
206.767 328.493 li
205.797 319.718 li
204.866 310.753 li
203.936 301.619 li
203.026 292.364 li
201.225 273.676 li
cp
f
203.976 226.826 mo
133.117 226.826 li
133.117 230.121 li
203.976 230.121 li
cp
.61709 .780514 0 0 cmyk
f
204.506 227.645 mo
212.009 335.331 li
208.717 335.561 li
201.215 227.874 li
cp
f
210.908 337.038 mo
543.969 336.259 li
543.958 332.965 li
210.898 333.744 li
cp
f
552.671 424.296 mo
540.817 333.514 li
544.089 333.085 li
555.942 423.871 li
cp
f
552.421 421.376 mo
633.098 421.585 li
633.098 424.879 li
552.411 424.671 li
cp
f
633.288 424.172 mo
646.002 227.864 li
642.711 227.655 li
629.997 423.96 li
cp
f
642.931 226.826 mo
806.906 227.835 li
806.886 231.129 li
642.911 230.121 li
cp
f
213.319 189.899 mo
213.319 194.841 li
212.089 194.841 li
212.089 189.899 li
cp
213.319 198.544 mo
213.319 203.486 li
212.089 203.486 li
212.089 198.544 li
cp
213.319 207.2 mo
213.319 212.141 li
212.089 212.141 li
212.089 207.2 li
cp
213.319 215.845 mo
213.319 220.787 li
212.089 220.787 li
212.089 215.845 li
cp
213.319 224.49 mo
213.319 229.432 li
212.089 229.432 li
212.089 224.49 li
cp
213.319 233.135 mo
213.319 238.077 li
212.089 238.077 li
212.089 233.135 li
cp
213.319 241.791 mo
213.319 246.732 li
212.089 246.732 li
212.089 241.791 li
cp
213.319 250.436 mo
213.319 255.377 li
212.089 255.377 li
212.089 250.436 li
cp
213.319 259.081 mo
213.319 264.023 li
212.089 264.023 li
212.089 259.081 li
cp
213.319 267.726 mo
213.319 272.668 li
212.089 272.668 li
212.089 267.726 li
cp
213.319 276.382 mo
213.319 281.323 li
212.089 281.323 li
212.089 276.382 li
cp
213.319 285.027 mo
213.319 289.968 li
212.089 289.968 li
212.089 285.027 li
cp
213.319 293.672 mo
213.319 298.614 li
212.089 298.614 li
212.089 293.672 li
cp
213.319 302.317 mo
213.319 307.259 li
212.089 307.259 li
212.089 302.317 li
cp
213.319 310.973 mo
213.319 315.914 li
212.089 315.914 li
212.089 310.973 li
cp
213.319 319.618 mo
213.319 324.559 li
212.089 324.559 li
212.089 319.618 li
cp
213.319 328.263 mo
213.319 333.205 li
212.089 333.205 li
212.089 328.263 li
cp
213.319 336.908 mo
213.319 341.85 li
212.089 341.85 li
212.089 336.908 li
cp
213.319 345.564 mo
213.319 350.505 li
212.089 350.505 li
212.089 345.564 li
cp
213.319 354.209 mo
213.319 359.15 li
212.089 359.15 li
212.089 354.209 li
cp
213.319 362.854 mo
213.319 367.796 li
212.089 367.796 li
212.089 362.854 li
cp
213.319 371.499 mo
213.319 376.441 li
212.089 376.441 li
212.089 371.499 li
cp
213.319 380.155 mo
213.319 385.093 li
212.089 385.093 li
212.089 380.155 li
cp
213.319 388.8 mo
213.319 393.74 li
212.089 393.741 li
212.089 388.8 li
cp
213.319 397.447 mo
213.319 402.389 li
212.089 402.389 li
212.089 397.447 li
cp
213.319 406.094 mo
213.319 411.036 li
212.089 411.037 li
212.089 406.095 li
cp
213.319 414.742 mo
213.319 419.684 li
212.089 419.684 li
212.089 414.742 li
cp
213.319 423.391 mo
213.319 428.332 li
212.089 428.332 li
212.089 423.391 li
cp
213.319 432.038 mo
213.319 436.98 li
212.089 436.98 li
212.089 432.038 li
cp
.899962 .828183 .680751 .520256 cmyk
f
553.672 189.899 mo
553.662 194.841 li
554.892 194.841 li
554.902 189.899 li
cp
553.652 198.544 mo
553.642 203.486 li
554.882 203.496 li
554.892 198.554 li
cp
553.632 207.2 mo
553.622 212.141 li
554.862 212.141 li
554.872 207.2 li
cp
553.612 215.845 mo
553.602 220.787 li
554.842 220.787 li
554.852 215.845 li
cp
553.602 224.49 mo
553.592 229.432 li
554.822 229.432 li
554.832 224.49 li
cp
553.582 233.135 mo
553.572 238.077 li
554.812 238.087 li
554.822 233.145 li
cp
553.562 241.791 mo
553.552 246.732 li
554.792 246.732 li
554.802 241.791 li
cp
553.542 250.436 mo
553.532 255.377 li
554.772 255.377 li
554.782 250.436 li
cp
553.532 259.081 mo
553.522 264.023 li
554.752 264.023 li
554.762 259.081 li
cp
553.512 267.726 mo
553.502 272.668 li
554.742 272.678 li
554.752 267.736 li
cp
553.492 276.382 mo
553.482 281.323 li
554.722 281.323 li
554.732 276.382 li
cp
553.472 285.027 mo
553.462 289.968 li
554.702 289.968 li
554.712 285.027 li
cp
553.462 293.672 mo
553.452 298.614 li
554.682 298.614 li
554.692 293.672 li
cp
553.442 302.317 mo
553.432 307.259 li
554.672 307.269 li
554.682 302.327 li
cp
553.422 310.973 mo
553.412 315.914 li
554.652 315.914 li
554.662 310.973 li
cp
553.402 319.618 mo
553.392 324.559 li
554.632 324.559 li
554.642 319.618 li
cp
553.392 328.263 mo
553.382 333.205 li
554.612 333.205 li
554.622 328.263 li
cp
553.372 336.908 mo
553.362 341.85 li
554.602 341.86 li
554.612 336.918 li
cp
553.352 345.564 mo
553.342 350.505 li
554.582 350.505 li
554.592 345.564 li
cp
553.332 354.209 mo
553.322 359.15 li
554.562 359.15 li
554.572 354.209 li
cp
553.322 362.854 mo
553.312 367.796 li
554.542 367.796 li
554.552 362.854 li
cp
553.302 371.499 mo
553.292 376.441 li
554.532 376.451 li
554.542 371.509 li
cp
553.282 380.155 mo
553.272 385.091 li
554.512 385.094 li
554.522 380.155 li
cp
553.262 388.798 mo
553.252 393.739 li
554.492 393.741 li
554.502 388.8 li
cp
553.252 397.445 mo
553.242 402.387 li
554.472 402.39 li
554.482 397.448 li
cp
553.232 406.093 mo
553.222 411.035 li
554.462 411.037 li
554.472 406.095 li
cp
553.212 414.741 mo
553.202 419.682 li
554.442 419.685 li
554.452 414.743 li
cp
553.192 423.389 mo
553.182 428.33 li
554.422 428.332 li
554.432 423.391 li
cp
553.182 432.036 mo
553.172 436.978 li
554.402 436.981 li
554.412 432.039 li
cp
553.162 440.684 mo
553.152 445.626 li
554.392 445.628 li
554.402 440.686 li
cp
553.142 449.331 mo
553.132 454.273 li
554.372 454.276 li
554.382 449.334 li
cp
553.122 457.98 mo
553.122 461.109 li
554.352 461.111 li
554.362 457.982 li
cp
f
52.2509 326.027 mo
57.5994 326.027 li
57.5994 326.666 li
57.2643 326.706 57.0152 326.796 56.8542 326.945 cv
56.6931 327.095 56.6131 327.305 56.6131 327.574 cv
56.6131 327.784 56.6321 327.994 56.6711 328.193 cv
56.7091 328.403 56.7901 328.722 56.9122 329.172 cv
58.8278 336.1 li
61.2166 329.192 li
61.3126 328.922 61.3887 328.672 61.4437 328.433 cv
61.4987 328.193 61.5257 327.944 61.5257 327.684 cv
61.5257 327.365 61.4437 327.125 61.2786 326.955 cv
61.1146 326.786 60.8615 326.696 60.5194 326.666 cv
60.5194 326.027 li
64.6878 326.027 li
64.6878 326.666 li
64.4427 326.706 64.2356 326.786 64.0646 326.905 cv
63.8935 327.025 63.7384 327.195 63.6004 327.415 cv
63.4614 327.634 63.2983 328.004 63.1112 328.503 cv
59.0599 339.274 li
56.8252 339.274 li
53.634 328.463 li
53.4921 327.984 53.3728 327.634 53.2761 327.435 cv
53.1794 327.235 53.0537 327.065 52.899 326.945 cv
52.7442 326.816 52.5282 326.726 52.2509 326.666 cv
cp
.997223 .918425 .647791 .507591 cmyk
ef
63.7755 333.694 mo
70.5767 333.694 li
70.5767 335.93 li
69.6134 335.93 li
69.4583 335.481 69.3273 335.181 69.2193 335.032 cv
69.1112 334.872 68.9832 334.742 68.8331 334.652 cv
68.6831 334.562 68.427 334.522 68.0659 334.522 cv
66.7084 334.522 li
66.7084 338.086 li
67.6087 338.086 li
67.8288 338.086 67.9989 338.056 68.1189 337.987 cv
68.2379 337.917 68.337 337.807 68.414 337.647 cv
68.492 337.487 68.556 337.268 68.6081 336.978 cv
69.4023 336.978 li
69.4023 340.033 li
68.6081 340.033 li
68.551 339.743 68.483 339.514 68.404 339.354 cv
68.324 339.184 68.2259 339.075 68.1079 339.015 cv
67.9909 338.945 67.8248 338.915 67.6087 338.915 cv
66.7084 338.915 li
66.7084 341.52 li
66.7084 341.88 66.7274 342.139 66.7644 342.279 cv
66.8025 342.419 66.8765 342.539 66.9865 342.619 cv
67.0966 342.708 67.2876 342.768 67.5597 342.818 cv
67.5597 343.277 li
63.7755 343.277 li
63.7755 342.818 li
64.0245 342.758 64.1936 342.678 64.2856 342.589 cv
64.3767 342.509 64.4407 342.399 64.4757 342.259 cv
64.5107 342.119 64.5277 341.87 64.5277 341.51 cv
64.5277 335.461 li
64.5277 335.111 64.5127 334.862 64.4827 334.722 cv
64.4517 334.582 64.3897 334.473 64.2956 334.393 cv
64.2026 334.303 64.0285 334.233 63.7755 334.163 cv
cp
75.5534 333.584 mo
75.9705 333.584 76.3696 333.604 76.7487 333.654 cv
77.1289 333.694 77.563 333.774 78.0502 333.884 cv
78.0502 335.92 li
77.0869 335.92 li
76.9598 335.391 76.7728 335.012 76.5237 334.772 cv
76.2756 334.522 75.9165 334.403 75.4483 334.403 cv
75.0262 334.403 74.6871 334.512 74.432 334.732 cv
74.1759 334.952 74.0479 335.251 74.0479 335.631 cv
74.0479 335.91 74.1009 336.14 74.2069 336.339 cv
74.3119 336.539 74.489 336.729 74.7381 336.918 cv
74.9862 337.108 75.3473 337.328 75.8204 337.567 cv
76.3976 337.867 76.8508 338.166 77.1819 338.456 cv
77.512 338.735 77.7561 339.055 77.9131 339.394 cv
78.0702 339.734 78.1492 340.123 78.1492 340.572 cv
78.1492 341.151 78.0152 341.65 77.7481 342.07 cv
77.481 342.499 77.0919 342.818 76.5807 343.048 cv
76.0695 343.277 75.4783 343.387 74.8081 343.387 cv
74.33 343.387 73.8318 343.367 73.3136 343.307 cv
72.7954 343.258 72.3083 343.178 71.8541 343.078 cv
71.8541 340.911 li
72.8175 340.911 li
72.9345 341.471 73.1306 341.88 73.4046 342.159 cv
73.6787 342.429 74.0809 342.569 74.611 342.569 cv
75.0752 342.569 75.4373 342.449 75.6974 342.209 cv
75.9575 341.97 76.0885 341.63 76.0885 341.191 cv
76.0885 340.762 75.9625 340.402 75.7114 340.113 cv
75.4613 339.823 75.0262 339.534 74.407 339.224 cv
73.8908 338.965 73.4607 338.705 73.1165 338.436 cv
72.7714 338.166 72.4993 337.857 72.3003 337.497 cv
72.1012 337.148 72.0012 336.739 72.0012 336.279 cv
72.0012 335.7 72.1442 335.211 72.4303 334.812 cv
72.7164 334.413 73.1306 334.103 73.6717 333.893 cv
74.2139 333.684 74.8411 333.584 75.5534 333.584 cv
cp
ef
85.7657 219.449 mo
85.3656 219.449 85.0785 219.449 84.9045 219.469 cv
84.9045 230.32 li
85.0205 230.34 85.3146 230.35 85.7847 230.35 cv
86.7781 230.35 87.5503 230.151 88.1015 229.751 cv
88.6527 229.352 89.0718 228.743 89.3579 227.924 cv
89.645 227.116 89.7891 226.087 89.7891 224.85 cv
89.7891 223.083 89.444 221.735 88.7537 220.816 cv
88.0645 219.898 87.0682 219.449 85.7657 219.449 cv
cp
71.481 219.449 mo
71.0809 219.449 70.7938 219.449 70.6197 219.469 cv
70.6197 230.32 li
70.7358 230.34 71.0299 230.35 71.5 230.35 cv
72.4933 230.35 73.2656 230.151 73.8168 229.751 cv
74.368 229.352 74.7871 228.743 75.0732 227.924 cv
75.3603 227.116 75.5043 226.087 75.5043 224.85 cv
75.5043 223.083 75.1592 221.735 74.469 220.816 cv
73.7798 219.898 72.7834 219.449 71.481 219.449 cv
cp
80.8721 218.311 mo
85.9008 218.311 li
86.9771 218.311 87.8774 218.401 88.5987 218.57 cv
89.3209 218.73 89.9631 219 90.5233 219.359 cv
91.0845 219.718 91.5377 220.148 91.8828 220.647 cv
92.2279 221.146 92.484 221.725 92.651 222.384 cv
92.8191 223.043 92.9031 223.791 92.9031 224.62 cv
92.9031 225.968 92.693 227.126 92.2739 228.084 cv
91.8998 228.943 91.3606 229.641 90.6544 230.171 cv
89.9481 230.7 89.1048 231.059 88.1255 231.259 cv
87.3773 231.408 86.423 231.488 85.2626 231.488 cv
80.8721 231.488 li
80.8721 230.849 li
81.2202 230.76 81.4573 230.66 81.5824 230.54 cv
81.7084 230.43 81.7934 230.27 81.8394 230.081 cv
81.8845 229.891 81.9065 229.552 81.9065 229.062 cv
81.9065 220.747 li
81.9065 220.257 81.8855 219.918 81.8434 219.728 cv
81.8024 219.539 81.7164 219.389 81.5874 219.269 cv
81.4583 219.159 81.2202 219.049 80.8721 218.95 cv
cp
66.5874 218.311 mo
71.6161 218.311 li
72.6924 218.311 73.5927 218.401 74.3139 218.57 cv
75.0362 218.73 75.6784 219 76.2386 219.359 cv
76.7998 219.718 77.2529 220.148 77.598 220.647 cv
77.9431 221.146 78.1992 221.725 78.3663 222.384 cv
78.5343 223.043 78.6184 223.791 78.6184 224.62 cv
78.6184 225.968 78.4083 227.126 77.9892 228.084 cv
77.615 228.943 77.0759 229.641 76.3696 230.171 cv
75.6634 230.7 74.8201 231.059 73.8408 231.259 cv
73.0925 231.408 72.1382 231.488 70.9778 231.488 cv
66.5874 231.488 li
66.5874 230.849 li
66.9355 230.76 67.1726 230.66 67.2976 230.54 cv
67.4237 230.43 67.5087 230.27 67.5547 230.081 cv
67.5997 229.891 67.6217 229.552 67.6217 229.062 cv
67.6217 220.747 li
67.6217 220.257 67.6007 219.918 67.5587 219.728 cv
67.5177 219.539 67.4317 219.389 67.3026 219.269 cv
67.1736 219.159 66.9355 219.049 66.5874 218.95 cv
cp
52.9692 218.311 mo
58.3176 218.311 li
58.3176 218.95 li
57.9825 218.99 57.7335 219.079 57.5724 219.229 cv
57.4113 219.379 57.3313 219.589 57.3313 219.858 cv
57.3313 220.068 57.3503 220.277 57.3893 220.487 cv
57.4274 220.687 57.5084 221.006 57.6304 221.455 cv
59.5461 228.384 li
61.9348 221.485 li
62.0309 221.216 62.1069 220.956 62.1619 220.717 cv
62.2169 220.477 62.2439 220.227 62.2439 219.968 cv
62.2439 219.648 62.1619 219.409 61.9969 219.239 cv
61.8328 219.079 61.5797 218.98 61.2376 218.95 cv
61.2376 218.311 li
65.406 218.311 li
65.406 218.95 li
65.1609 218.99 64.9538 219.069 64.7828 219.189 cv
64.6117 219.309 64.4567 219.479 64.3186 219.698 cv
64.1796 219.918 64.0165 220.287 63.8295 220.787 cv
59.7781 231.558 li
57.5434 231.558 li
54.3522 220.747 li
54.2104 220.267 54.091 219.918 53.9944 219.718 cv
53.8977 219.519 53.7719 219.349 53.6172 219.229 cv
53.4624 219.099 53.2465 219.01 52.9692 218.95 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
107.069 336.868 mo
112.02 336.868 li
112.02 338.106 li
107.069 338.106 li
cp
115.734 336.868 mo
120.685 336.868 li
120.685 338.106 li
115.734 338.106 li
cp
124.4 336.868 mo
129.351 336.868 li
129.351 338.106 li
124.4 338.106 li
cp
133.064 336.868 mo
138.016 336.868 li
138.016 338.106 li
133.064 338.106 li
cp
141.73 336.868 mo
146.677 336.868 li
146.677 338.106 li
141.73 338.106 li
cp
150.398 336.868 mo
155.35 336.868 li
155.35 338.106 li
150.398 338.106 li
cp
159.061 336.868 mo
164.013 336.868 li
164.013 338.106 li
159.061 338.106 li
cp
167.724 336.868 mo
172.676 336.868 li
172.676 338.106 li
167.724 338.106 li
cp
176.387 336.868 mo
181.338 336.868 li
181.338 338.106 li
176.387 338.106 li
cp
185.06 336.868 mo
190.011 336.868 li
190.011 338.106 li
185.06 338.106 li
cp
193.723 336.868 mo
198.674 336.868 li
198.674 338.106 li
193.723 338.106 li
cp
202.385 336.868 mo
207.337 336.868 li
207.337 338.106 li
202.385 338.106 li
cp
211.048 336.868 mo
216 336.868 li
216 338.106 li
211.048 338.106 li
cp
219.721 336.868 mo
224.673 336.868 li
224.673 338.106 li
219.721 338.106 li
cp
228.384 336.868 mo
231.345 336.868 li
231.345 338.106 li
228.384 338.106 li
cp
.997223 .918425 .647791 .507591 cmyk
f
106.709 393.655 mo
111.66 393.655 li
111.66 394.89 li
106.709 394.89 li
cp
115.374 393.655 mo
120.325 393.655 li
120.325 394.89 li
115.374 394.89 li
cp
124.039 393.655 mo
128.991 393.655 li
128.991 394.89 li
124.039 394.89 li
cp
132.704 393.655 mo
137.656 393.655 li
137.656 394.89 li
132.704 394.89 li
cp
141.37 393.655 mo
146.317 393.655 li
146.317 394.89 li
141.37 394.89 li
cp
150.038 393.655 mo
154.99 393.655 li
154.99 394.89 li
150.038 394.89 li
cp
158.701 393.655 mo
163.653 393.655 li
163.653 394.89 li
158.701 394.89 li
cp
167.364 393.655 mo
172.315 393.655 li
172.315 394.89 li
167.364 394.89 li
cp
176.027 393.655 mo
180.978 393.655 li
180.978 394.89 li
176.027 394.89 li
cp
184.7 393.655 mo
189.651 393.655 li
189.651 394.89 li
184.7 394.89 li
cp
193.362 393.655 mo
198.314 393.655 li
198.314 394.89 li
193.362 394.89 li
cp
202.025 393.655 mo
206.977 393.655 li
206.977 394.89 li
202.025 394.89 li
cp
210.688 393.655 mo
215.64 393.655 li
215.64 394.89 li
210.688 394.89 li
cp
219.361 393.655 mo
224.313 393.655 li
224.313 394.89 li
219.361 394.89 li
cp
228.024 393.655 mo
232.976 393.655 li
232.976 394.89 li
228.024 394.89 li
cp
236.687 393.655 mo
241.638 393.655 li
241.638 394.89 li
236.687 394.89 li
cp
245.35 393.655 mo
250.301 393.655 li
250.301 394.89 li
245.35 394.89 li
cp
254.022 393.655 mo
258.974 393.655 li
258.974 394.89 li
254.022 394.89 li
cp
262.685 393.655 mo
267.637 393.655 li
267.637 394.89 li
262.685 394.89 li
cp
271.348 393.655 mo
276.3 393.655 li
276.3 394.89 li
271.348 394.89 li
cp
280.011 393.655 mo
284.963 393.655 li
284.963 394.89 li
280.011 394.89 li
cp
288.684 393.655 mo
293.636 393.655 li
293.636 394.89 li
288.684 394.89 li
cp
297.347 393.655 mo
302.298 393.655 li
302.298 394.89 li
297.347 394.89 li
cp
306.01 393.655 mo
310.961 393.655 li
310.961 394.89 li
306.01 394.89 li
cp
314.673 393.655 mo
319.624 393.655 li
319.624 394.89 li
314.673 394.89 li
cp
323.345 393.655 mo
328.297 393.655 li
328.297 394.89 li
323.345 394.89 li
cp
332.008 393.655 mo
336.96 393.655 li
336.96 394.89 li
332.008 394.89 li
cp
340.671 393.655 mo
345.623 393.655 li
345.623 394.89 li
340.671 394.89 li
cp
349.334 393.655 mo
354.286 393.655 li
354.286 394.89 li
349.334 394.89 li
cp
358.007 393.655 mo
362.959 393.655 li
362.959 394.89 li
358.007 394.89 li
cp
366.67 393.655 mo
371.621 393.655 li
371.621 394.89 li
366.67 394.89 li
cp
375.333 393.655 mo
380.284 393.655 li
380.284 394.89 li
375.333 394.89 li
cp
383.996 393.655 mo
388.947 393.655 li
388.947 394.89 li
383.996 394.89 li
cp
392.668 393.655 mo
397.62 393.655 li
397.62 394.89 li
392.668 394.89 li
cp
401.331 393.655 mo
406.283 393.655 li
406.283 394.89 li
401.331 394.89 li
cp
409.994 393.655 mo
414.946 393.655 li
414.946 394.89 li
409.994 394.89 li
cp
418.657 393.655 mo
423.609 393.655 li
423.609 394.89 li
418.657 394.89 li
cp
427.33 393.655 mo
432.282 393.655 li
432.282 394.89 li
427.33 394.89 li
cp
435.993 393.655 mo
440.944 393.655 li
440.944 394.89 li
435.993 394.89 li
cp
444.656 393.655 mo
449.607 393.655 li
449.607 394.89 li
444.656 394.89 li
cp
453.318 393.655 mo
458.27 393.655 li
458.27 394.89 li
453.318 394.89 li
cp
461.991 393.655 mo
466.943 393.655 li
466.943 394.89 li
461.991 394.89 li
cp
470.654 393.655 mo
475.606 393.655 li
475.606 394.89 li
470.654 394.89 li
cp
479.317 393.655 mo
484.269 393.655 li
484.269 394.89 li
479.317 394.89 li
cp
487.98 393.655 mo
492.932 393.655 li
492.932 394.89 li
487.98 394.89 li
cp
496.653 393.655 mo
501.604 393.655 li
501.604 394.89 li
496.653 394.89 li
cp
505.316 393.655 mo
510.267 393.655 li
510.267 394.89 li
505.316 394.89 li
cp
513.979 393.655 mo
518.93 393.655 li
518.93 394.89 li
513.979 394.89 li
cp
522.641 393.655 mo
527.593 393.655 li
527.593 394.89 li
522.641 394.89 li
cp
531.314 393.655 mo
536.266 393.655 li
536.266 394.89 li
531.314 394.89 li
cp
539.977 393.655 mo
544.929 393.655 li
544.929 394.89 li
539.977 394.89 li
cp
548.64 393.655 mo
553.592 393.655 li
553.592 394.89 li
548.64 394.89 li
cp
557.303 393.655 mo
562.255 393.655 li
562.255 394.89 li
557.303 394.89 li
cp
565.976 393.655 mo
570.927 393.655 li
570.927 394.89 li
565.976 394.89 li
cp
574.639 393.655 mo
579.59 393.655 li
579.59 394.89 li
574.639 394.89 li
cp
583.302 393.655 mo
588.253 393.655 li
588.253 394.89 li
583.302 394.89 li
cp
591.964 393.655 mo
596.916 393.655 li
596.916 394.89 li
591.964 394.89 li
cp
600.637 393.655 mo
605.589 393.655 li
605.589 394.89 li
600.637 394.89 li
cp
609.3 393.655 mo
614.252 393.655 li
614.252 394.89 li
609.3 394.89 li
cp
617.963 393.655 mo
622.915 393.655 li
622.915 394.89 li
617.963 394.89 li
cp
626.626 393.655 mo
631.578 393.655 li
631.578 394.89 li
626.626 394.89 li
cp
635.299 393.655 mo
640.25 393.655 li
640.25 394.89 li
635.299 394.89 li
cp
643.962 393.655 mo
648.913 393.655 li
648.913 394.89 li
643.962 394.89 li
cp
652.625 393.655 mo
657.576 393.655 li
657.576 394.89 li
652.625 394.89 li
cp
661.287 393.655 mo
666.239 393.655 li
666.239 394.89 li
661.287 394.89 li
cp
669.96 393.655 mo
674.912 393.655 li
674.912 394.89 li
669.96 394.89 li
cp
678.623 393.655 mo
683.575 393.655 li
683.575 394.89 li
678.623 394.89 li
cp
687.286 393.655 mo
692.238 393.655 li
692.238 394.89 li
687.286 394.89 li
cp
695.949 393.655 mo
700.901 393.655 li
700.901 394.89 li
695.949 394.89 li
cp
704.622 393.655 mo
709.573 393.655 li
709.573 394.89 li
704.622 394.89 li
cp
713.285 393.655 mo
718.236 393.655 li
718.236 394.89 li
713.285 394.89 li
cp
721.948 393.655 mo
726.899 393.655 li
726.899 394.89 li
721.948 394.89 li
cp
730.61 393.655 mo
735.562 393.655 li
735.562 394.89 li
730.61 394.89 li
cp
739.283 393.655 mo
744.235 393.655 li
744.235 394.89 li
739.283 394.89 li
cp
747.946 393.655 mo
752.898 393.655 li
752.898 394.89 li
747.946 394.89 li
cp
756.609 393.655 mo
761.561 393.655 li
761.561 394.89 li
756.609 394.89 li
cp
765.272 393.655 mo
770.223 393.655 li
770.223 394.89 li
765.272 394.89 li
cp
773.945 393.655 mo
778.896 393.655 li
778.896 394.89 li
773.945 394.89 li
cp
782.608 393.655 mo
787.559 393.655 li
787.559 394.89 li
782.608 394.89 li
cp
791.27 393.655 mo
795.952 393.655 li
795.952 394.89 li
791.27 394.89 li
cp
f
106.711 273.756 mo
111.662 273.736 li
111.658 272.498 li
106.707 272.518 li
cp
115.377 273.716 mo
120.328 273.696 li
120.323 272.468 li
115.372 272.488 li
cp
124.041 273.686 mo
128.993 273.666 li
128.988 272.428 li
124.037 272.448 li
cp
132.707 273.656 mo
137.659 273.636 li
137.654 272.398 li
132.702 272.418 li
cp
141.372 273.616 mo
146.327 273.606 li
146.317 272.368 li
141.367 272.388 li
cp
150.038 273.586 mo
154.99 273.566 li
154.98 272.339 li
150.028 272.349 li
cp
158.701 273.556 mo
163.653 273.536 li
163.653 272.299 li
158.701 272.319 li
cp
167.364 273.526 mo
172.315 273.507 li
172.315 272.269 li
167.364 272.289 li
cp
176.037 273.487 mo
180.988 273.467 li
180.978 272.239 li
176.027 272.259 li
cp
184.7 273.457 mo
189.651 273.437 li
189.641 272.199 li
184.689 272.219 li
cp
193.362 273.427 mo
198.314 273.407 li
198.314 272.169 li
193.362 272.189 li
cp
202.025 273.387 mo
206.977 273.377 li
206.977 272.139 li
202.025 272.159 li
cp
210.698 273.357 mo
215.65 273.337 li
215.64 272.109 li
210.688 272.119 li
cp
219.361 273.327 mo
224.313 273.307 li
224.303 272.069 li
219.351 272.089 li
cp
228.024 273.297 mo
232.976 273.277 li
232.976 272.039 li
228.024 272.059 li
cp
236.687 273.257 mo
241.638 273.237 li
241.638 272.009 li
236.687 272.029 li
cp
245.36 273.227 mo
250.311 273.207 li
250.301 271.969 li
245.35 271.989 li
cp
254.022 273.197 mo
258.974 273.177 li
258.964 271.939 li
254.012 271.959 li
cp
262.685 273.157 mo
267.637 273.147 li
267.637 271.909 li
262.685 271.929 li
cp
271.348 273.127 mo
276.3 273.107 li
276.3 271.879 li
271.348 271.889 li
cp
280.021 273.097 mo
284.973 273.077 li
284.963 271.839 li
280.011 271.859 li
cp
288.684 273.067 mo
293.636 273.047 li
293.626 271.809 li
288.674 271.829 li
cp
297.347 273.027 mo
302.298 273.007 li
302.298 271.779 li
297.347 271.799 li
cp
306.01 272.997 mo
310.961 272.977 li
310.961 271.74 li
306.01 271.76 li
cp
314.683 272.967 mo
319.634 272.947 li
319.624 271.71 li
314.673 271.73 li
cp
323.345 272.928 mo
328.297 272.918 li
328.287 271.68 li
323.335 271.7 li
cp
332.008 272.898 mo
336.96 272.878 li
336.96 271.65 li
332.008 271.66 li
cp
340.671 272.868 mo
345.623 272.848 li
345.623 271.61 li
340.671 271.63 li
cp
349.344 272.838 mo
354.296 272.818 li
354.286 271.58 li
349.334 271.6 li
cp
358.007 272.798 mo
362.959 272.778 li
362.949 271.55 li
357.997 271.57 li
cp
366.67 272.768 mo
371.621 272.748 li
371.621 271.51 li
366.67 271.53 li
cp
375.333 272.738 mo
380.284 272.718 li
380.284 271.48 li
375.333 271.5 li
cp
383.996 272.698 mo
388.947 272.688 li
388.947 271.45 li
383.996 271.47 li
cp
392.668 272.668 mo
397.62 272.648 li
397.61 271.42 li
392.658 271.43 li
cp
401.331 272.638 mo
406.283 272.618 li
406.273 271.38 li
401.321 271.4 li
cp
409.994 272.608 mo
414.946 272.588 li
414.946 271.35 li
409.994 271.37 li
cp
418.657 272.568 mo
423.609 272.548 li
423.609 271.32 li
418.657 271.34 li
cp
427.33 272.538 mo
432.282 272.518 li
432.272 271.28 li
427.32 271.3 li
cp
435.993 272.508 mo
440.944 272.488 li
440.934 271.25 li
435.983 271.27 li
cp
444.656 272.468 mo
449.607 272.458 li
449.607 271.22 li
444.656 271.24 li
cp
453.318 272.438 mo
458.27 272.418 li
458.27 271.19 li
453.318 271.2 li
cp
461.991 272.408 mo
466.943 272.388 li
466.933 271.151 li
461.981 271.171 li
cp
470.654 272.378 mo
475.606 272.358 li
475.596 271.121 li
470.644 271.141 li
cp
479.317 272.339 mo
484.269 272.319 li
484.269 271.091 li
479.317 271.111 li
cp
487.98 272.309 mo
492.932 272.289 li
492.932 271.051 li
487.98 271.071 li
cp
496.653 272.279 mo
501.604 272.259 li
501.594 271.021 li
496.643 271.041 li
cp
505.316 272.239 mo
510.267 272.229 li
510.257 270.991 li
505.306 271.011 li
cp
513.979 272.209 mo
518.93 272.189 li
518.93 270.961 li
513.979 270.971 li
cp
522.641 272.179 mo
527.593 272.159 li
527.593 270.921 li
522.641 270.941 li
cp
531.314 272.149 mo
536.266 272.129 li
536.256 270.891 li
531.304 270.911 li
cp
539.977 272.109 mo
544.929 272.089 li
544.919 270.861 li
539.967 270.881 li
cp
548.64 272.079 mo
553.592 272.059 li
553.592 270.821 li
548.64 270.841 li
cp
557.303 272.049 mo
562.255 272.029 li
562.255 270.791 li
557.303 270.811 li
cp
565.976 272.009 mo
570.927 271.999 li
570.917 270.761 li
565.966 270.781 li
cp
574.639 271.979 mo
579.59 271.959 li
579.58 270.731 li
574.629 270.741 li
cp
583.302 271.949 mo
588.253 271.929 li
588.253 270.691 li
583.302 270.711 li
cp
591.964 271.919 mo
596.916 271.899 li
596.916 270.661 li
591.964 270.681 li
cp
600.637 271.879 mo
605.589 271.859 li
605.579 270.631 li
600.627 270.651 li
cp
609.3 271.849 mo
614.252 271.829 li
614.242 270.592 li
609.29 270.611 li
cp
617.963 271.819 mo
622.915 271.799 li
622.915 270.562 li
617.963 270.582 li
cp
626.626 271.779 mo
631.578 271.77 li
631.578 270.532 li
626.626 270.552 li
cp
635.289 271.75 mo
640.24 271.73 li
640.24 270.502 li
635.289 270.512 li
cp
643.962 271.72 mo
648.913 271.7 li
648.903 270.462 li
643.952 270.482 li
cp
652.625 271.69 mo
657.576 271.67 li
657.576 270.432 li
652.625 270.452 li
cp
661.287 271.65 mo
666.239 271.63 li
666.239 270.402 li
661.287 270.422 li
cp
669.95 271.62 mo
674.902 271.6 li
674.902 270.362 li
669.95 270.382 li
cp
678.623 271.59 mo
683.575 271.57 li
683.565 270.332 li
678.613 270.352 li
cp
687.286 271.55 mo
692.238 271.54 li
692.238 270.302 li
687.286 270.322 li
cp
695.949 271.52 mo
700.901 271.5 li
700.901 270.272 li
695.949 270.282 li
cp
704.612 271.49 mo
709.563 271.47 li
709.563 270.232 li
704.612 270.252 li
cp
713.285 271.46 mo
718.236 271.44 li
718.226 270.202 li
713.275 270.222 li
cp
721.948 271.42 mo
726.899 271.4 li
726.899 270.172 li
721.948 270.192 li
cp
730.61 271.39 mo
735.562 271.37 li
735.562 270.132 li
730.61 270.152 li
cp
739.273 271.36 mo
744.225 271.34 li
744.225 270.102 li
739.273 270.122 li
cp
747.946 271.32 mo
752.898 271.31 li
752.888 270.072 li
747.936 270.092 li
cp
756.609 271.29 mo
761.561 271.27 li
761.561 270.032 li
756.609 270.052 li
cp
765.272 271.26 mo
770.223 271.24 li
770.223 270.003 li
765.272 270.022 li
cp
773.935 271.23 mo
778.886 271.21 li
778.886 269.973 li
773.935 269.993 li
cp
782.608 271.19 mo
787.559 271.171 li
787.549 269.943 li
782.598 269.963 li
cp
791.27 271.161 mo
796.222 271.141 li
796.222 269.903 li
791.27 269.923 li
cp
f
774.775 288.701 mo
766.942 308.078 li
768.013 307.109 li
763.731 308.357 li
759.62 309.705 li
757.609 310.414 li
755.669 311.142 li
753.758 311.891 li
751.897 312.66 li
750.077 313.448 li
748.316 314.257 li
746.596 315.086 li
744.905 315.934 li
743.275 316.803 li
741.694 317.681 li
740.174 318.58 li
738.673 319.498 li
737.233 320.436 li
735.842 321.385 li
734.502 322.353 li
733.201 323.332 li
731.961 324.33 li
730.77 325.338 li
729.62 326.366 li
728.52 327.405 li
727.479 328.453 li
726.479 329.521 li
725.539 330.599 li
724.648 331.697 li
723.808 332.805 li
723.028 333.913 li
722.298 335.032 li
721.607 336.17 li
720.987 337.318 li
720.407 338.486 li
719.907 339.654 li
719.447 340.822 li
719.047 342 li
718.696 343.198 li
718.416 344.396 li
718.176 345.594 li
718.016 346.801 li
717.896 348.019 li
717.846 349.227 li
717.856 350.445 li
717.936 351.663 li
718.056 352.881 li
718.256 354.099 li
718.506 355.317 li
718.816 356.525 li
719.197 357.733 li
719.637 358.941 li
720.137 360.139 li
720.687 361.327 li
721.307 362.525 li
721.997 363.703 li
722.738 364.871 li
723.538 366.039 li
724.398 367.197 li
725.329 368.345 li
726.319 369.483 li
727.359 370.601 li
728.47 371.719 li
729.64 372.827 li
730.87 373.935 li
733.471 376.052 li
736.272 378.088 li
739.233 380.025 li
742.374 381.882 li
745.655 383.629 li
749.086 385.292 li
752.668 386.851 li
756.359 388.317 li
760.19 389.682 li
764.141 390.959 li
772.324 393.197 li
780.877 395.036 li
789.73 396.464 li
798.813 397.469 li
808.076 398.05 li
817.439 398.201 li
826.832 397.899 li
836.215 397.152 li
845.498 395.935 li
854.621 394.251 li
859.113 393.219 li
863.534 392.077 li
867.836 390.821 li
869.917 390.16 li
871.967 389.479 li
873.968 388.772 li
875.909 388.043 li
877.819 387.291 li
879.68 386.524 li
881.49 385.733 li
883.261 384.927 li
884.992 384.098 li
886.662 383.249 li
888.293 382.391 li
889.883 381.502 li
891.414 380.604 li
892.894 379.685 li
894.345 378.747 li
895.735 377.799 li
897.075 376.83 li
898.376 375.852 li
899.616 374.854 li
900.807 373.845 li
901.957 372.817 li
903.047 371.779 li
904.098 370.721 li
905.088 369.662 li
906.028 368.574 li
906.919 367.486 li
907.759 366.388 li
908.549 365.28 li
909.28 364.142 li
909.96 363.014 li
910.59 361.856 li
911.16 360.698 li
911.67 359.54 li
912.13 358.362 li
912.531 357.174 li
912.871 355.986 li
913.161 354.798 li
913.391 353.59 li
913.561 352.372 li
913.661 351.164 li
913.711 349.956 li
913.701 348.738 li
913.631 347.52 li
913.501 346.302 li
913.311 345.084 li
913.051 343.876 li
912.741 342.659 li
912.361 341.451 li
911.92 340.243 li
911.42 339.045 li
910.87 337.857 li
910.24 336.659 li
909.57 335.491 li
908.819 334.313 li
908.009 333.145 li
907.149 331.997 li
906.229 330.849 li
905.238 329.721 li
904.198 328.593 li
903.087 327.464 li
901.917 326.356 li
900.687 325.268 li
898.796 323.691 li
896.765 322.144 li
894.645 320.656 li
892.424 319.219 li
890.113 317.841 li
887.702 316.493 li
885.192 315.205 li
882.611 313.967 li
879.95 312.789 li
877.199 311.651 li
874.378 310.573 li
871.477 309.545 li
868.516 308.577 li
865.475 307.658 li
862.384 306.8 li
859.233 305.991 li
856.022 305.242 li
852.751 304.554 li
849.44 303.925 li
846.079 303.356 li
842.667 302.836 li
839.226 302.387 li
835.735 301.998 li
832.214 301.668 li
828.663 301.399 li
825.082 301.209 li
821.49 301.07 li
817.859 300.99 li
814.218 300.99 li
810.557 301.05 li
806.896 301.189 li
803.234 301.389 li
803.995 301.519 li
cp
803.024 304.693 mo
807.066 304.484 li
807.036 304.484 li
810.667 304.344 li
810.627 304.344 li
814.258 304.284 li
814.238 304.284 li
817.839 304.284 li
817.809 304.284 li
821.4 304.364 li
821.37 304.364 li
824.952 304.494 li
824.922 304.494 li
828.463 304.693 li
828.433 304.683 li
831.954 304.953 li
831.924 304.943 li
835.405 305.272 li
835.385 305.272 li
838.846 305.652 li
838.806 305.652 li
842.217 306.101 li
842.187 306.101 li
845.568 306.61 li
845.538 306.6 li
848.87 307.169 li
848.84 307.169 li
852.121 307.788 li
852.091 307.778 li
855.322 308.457 li
855.292 308.457 li
858.463 309.196 li
858.423 309.186 li
861.544 309.984 li
861.514 309.974 li
864.575 310.823 li
864.545 310.813 li
867.546 311.721 li
867.506 311.711 li
870.437 312.67 li
870.397 312.65 li
873.248 313.668 li
873.218 313.658 li
875.999 314.726 li
875.958 314.706 li
878.669 315.824 li
878.629 315.804 li
881.25 316.972 li
881.21 316.952 li
883.741 318.16 li
883.701 318.14 li
886.162 319.408 li
886.112 319.378 li
888.483 320.696 li
888.433 320.676 li
890.703 322.034 li
890.653 322.004 li
892.824 323.411 li
892.774 323.371 li
894.845 324.829 li
894.795 324.789 li
896.765 326.286 li
896.705 326.237 li
898.546 327.774 li
898.506 327.744 li
899.696 328.802 li
899.666 328.772 li
900.797 329.84 li
900.757 329.8 li
901.827 330.889 li
901.797 330.849 li
902.797 331.937 li
902.767 331.897 li
903.718 332.985 li
903.678 332.935 li
904.558 334.043 li
904.528 333.993 li
905.348 335.101 li
905.318 335.052 li
906.088 336.16 li
906.048 336.1 li
906.759 337.218 li
906.719 337.168 li
907.369 338.276 li
907.339 338.216 li
907.929 339.354 li
907.889 339.284 li
908.419 340.402 li
908.389 340.342 li
908.859 341.471 li
908.839 341.401 li
909.25 342.539 li
909.219 342.459 li
909.58 343.597 li
909.55 343.517 li
909.85 344.655 li
909.83 344.585 li
910.07 345.723 li
910.06 345.643 li
910.24 346.772 li
910.22 346.692 li
910.34 347.83 li
910.34 347.75 li
910.41 348.888 li
910.4 348.808 li
910.41 349.946 li
910.41 349.866 li
910.37 350.994 li
910.37 350.924 li
910.27 352.052 li
910.28 351.963 li
910.13 353.091 li
910.14 353.011 li
909.92 354.129 li
909.94 354.059 li
909.67 355.187 li
909.69 355.107 li
909.36 356.225 li
909.39 356.155 li
909.009 357.274 li
909.039 357.194 li
908.599 358.302 li
908.629 358.252 li
908.149 359.35 li
908.179 359.28 li
907.639 360.368 li
907.669 360.318 li
907.079 361.407 li
907.109 361.347 li
906.469 362.425 li
906.499 362.375 li
905.798 363.453 li
905.838 363.393 li
905.078 364.461 li
905.108 364.421 li
904.308 365.47 li
904.348 365.43 li
903.488 366.478 li
903.528 366.438 li
902.617 367.476 li
902.647 367.436 li
901.697 368.464 li
901.737 368.425 li
900.727 369.443 li
900.757 369.413 li
899.696 370.411 li
899.736 370.381 li
898.626 371.38 li
898.656 371.34 li
897.496 372.328 li
897.526 372.298 li
896.315 373.276 li
896.355 373.246 li
895.095 374.195 li
895.135 374.175 li
893.814 375.113 li
893.844 375.093 li
892.494 376.022 li
892.524 376.002 li
891.114 376.91 li
891.143 376.89 li
889.693 377.789 li
889.723 377.769 li
888.223 378.657 li
888.253 378.637 li
886.702 379.506 li
886.732 379.486 li
885.132 380.334 li
885.162 380.314 li
883.511 381.153 li
883.541 381.133 li
881.84 381.951 li
881.87 381.941 li
880.13 382.73 li
880.16 382.72 li
878.369 383.499 li
878.399 383.489 li
876.569 384.238 li
876.599 384.228 li
874.718 384.973 li
874.738 384.963 li
872.817 385.682 li
872.847 385.671 li
870.877 386.368 li
870.907 386.359 li
868.886 387.033 li
868.906 387.025 li
866.855 387.676 li
866.885 387.665 li
862.634 388.908 li
862.684 388.895 li
858.313 390.025 li
858.353 390.014 li
853.911 391.032 li
853.981 391.018 li
844.938 392.688 li
845.028 392.674 li
835.825 393.879 li
835.905 393.871 li
826.612 394.612 li
826.692 394.608 li
817.369 394.907 li
817.449 394.906 li
808.166 394.757 li
808.246 394.76 li
799.063 394.184 li
799.143 394.19 li
790.14 393.194 li
790.22 393.205 li
781.447 391.791 li
781.527 391.806 li
773.064 389.987 li
773.154 390.009 li
765.052 387.793 li
765.122 387.813 li
761.23 386.556 li
761.28 386.572 li
757.499 385.224 li
757.559 385.244 li
753.908 383.798 li
753.958 383.818 li
750.447 382.291 li
750.497 382.311 li
747.126 380.684 li
747.186 380.714 li
743.955 378.987 li
744.025 379.026 li
740.954 377.21 li
741.014 377.249 li
738.123 375.353 li
738.193 375.403 li
735.462 373.416 li
735.522 373.466 li
732.991 371.409 li
733.051 371.459 li
731.861 370.391 li
731.891 370.421 li
730.76 369.343 li
730.79 369.383 li
729.72 368.305 li
729.76 368.345 li
728.76 367.257 li
728.79 367.296 li
727.839 366.208 li
727.879 366.258 li
726.989 365.15 li
727.029 365.2 li
726.209 364.092 li
726.239 364.142 li
725.479 363.034 li
725.509 363.084 li
724.808 361.966 li
724.838 362.016 li
724.178 360.897 li
724.228 360.977 li
723.638 359.839 li
723.668 359.899 li
723.148 358.781 li
723.168 358.841 li
722.698 357.713 li
722.728 357.783 li
722.318 356.645 li
722.338 356.715 li
721.987 355.586 li
722.008 355.666 li
721.717 354.528 li
721.727 354.598 li
721.487 353.46 li
721.507 353.54 li
721.327 352.402 li
721.337 352.492 li
721.217 351.354 li
721.227 351.424 li
721.157 350.296 li
721.157 350.385 li
721.147 349.247 li
721.147 349.317 li
721.197 348.189 li
721.187 348.279 li
721.297 347.151 li
721.287 347.221 li
721.447 346.093 li
721.427 346.182 li
721.647 345.054 li
721.637 345.114 li
721.897 343.996 li
721.878 344.086 li
722.208 342.958 li
722.188 343.028 li
722.558 341.92 li
722.528 341.99 li
722.968 340.882 li
722.948 340.941 li
723.428 339.833 li
723.388 339.903 li
723.928 338.805 li
723.898 338.865 li
724.488 337.777 li
724.458 337.837 li
725.109 336.759 li
725.078 336.809 li
725.779 335.73 li
725.739 335.78 li
726.489 334.722 li
726.459 334.762 li
727.269 333.704 li
727.229 333.754 li
728.079 332.706 li
728.039 332.745 li
728.95 331.717 li
728.92 331.747 li
729.88 330.719 li
729.84 330.759 li
730.85 329.741 li
730.81 329.781 li
731.881 328.772 li
731.841 328.802 li
732.951 327.804 li
732.921 327.834 li
734.081 326.855 li
734.042 326.885 li
735.252 325.917 li
735.222 325.937 li
736.482 324.979 li
736.442 325.009 li
737.763 324.07 li
737.723 324.09 li
739.083 323.162 li
739.053 323.182 li
740.454 322.263 li
740.424 322.293 li
741.884 321.395 li
741.854 321.415 li
743.355 320.536 li
743.325 320.546 li
744.875 319.678 li
744.855 319.698 li
746.446 318.839 li
746.416 318.859 li
748.066 318.031 li
748.036 318.051 li
749.727 317.242 li
749.707 317.252 li
751.447 316.443 li
751.417 316.463 li
753.208 315.685 li
753.178 315.695 li
755.008 314.936 li
754.978 314.946 li
756.859 314.217 li
756.839 314.227 li
758.76 313.508 li
758.73 313.518 li
760.71 312.809 li
760.66 312.829 li
764.732 311.502 li
764.692 311.512 li
769.713 310.044 li
777.206 291.506 li
775.005 292.404 li
cp
1 /0 /CSD get_res sepcs
.349 sep
f
747.726 381.123 mo
786.979 381.183 li
786.969 384.473 li
747.716 384.417 li
cp
.997223 .918425 .647791 .507591 cmyk
f
786.499 359.59 mo
824.712 359.5 li
824.702 356.205 li
786.489 356.295 li
cp
f
823.971 329.85 mo
863.764 330.489 li
863.714 333.784 li
823.921 333.145 li
cp
f
825.592 358.741 mo
827.142 330.749 li
823.851 330.569 li
822.301 358.561 li
cp
f
787.539 383.229 mo
789.55 357.144 li
786.259 356.894 li
784.248 382.98 li
cp
f
864.125 333.913 mo
865.405 309.785 li
862.114 309.605 li
860.833 333.734 li
cp
f
877.479 346.043 mo
877.479 351.154 li
877.859 351.174 878.299 351.184 878.799 351.184 cv
879.41 351.184 879.92 351.114 880.31 350.954 cv
880.71 350.805 881.02 350.545 881.24 350.166 cv
881.45 349.786 881.56 349.277 881.56 348.618 cv
881.56 348.069 881.48 347.6 881.31 347.231 cv
881.15 346.851 880.87 346.562 880.49 346.352 cv
880.1 346.143 879.55 346.043 878.829 346.043 cv
cp
878.799 340.273 mo
878.349 340.273 877.909 340.283 877.479 340.323 cv
877.479 344.915 li
878.769 344.915 li
879.41 344.915 879.92 344.815 880.29 344.635 cv
880.66 344.445 880.93 344.176 881.12 343.837 cv
881.31 343.487 881.41 343.018 881.41 342.409 cv
881.41 341.67 881.2 341.131 880.79 340.782 cv
880.37 340.442 879.71 340.273 878.799 340.273 cv
cp
873.448 339.145 mo
879.79 339.145 li
880.44 339.145 880.99 339.174 881.41 339.224 cv
881.84 339.284 882.231 339.374 882.581 339.504 cv
882.931 339.624 883.211 339.773 883.421 339.923 cv
883.621 340.083 883.801 340.263 883.951 340.472 cv
884.091 340.682 884.201 340.911 884.291 341.181 cv
884.371 341.441 884.411 341.73 884.411 342.06 cv
884.411 343.507 883.531 344.595 881.78 345.324 cv
881.78 345.414 li
882.681 345.693 883.371 346.103 883.841 346.642 cv
884.311 347.181 884.551 347.83 884.551 348.578 cv
884.551 349.227 884.441 349.786 884.231 350.256 cv
884.011 350.735 883.681 351.124 883.241 351.434 cv
882.801 351.733 882.281 351.963 881.68 352.102 cv
881.09 352.242 880.33 352.312 879.41 352.312 cv
873.448 352.312 li
873.448 351.673 li
873.798 351.583 874.038 351.483 874.158 351.374 cv
874.288 351.254 874.368 351.104 874.418 350.914 cv
874.458 350.725 874.488 350.385 874.488 349.896 cv
874.488 341.57 li
874.488 341.081 874.468 340.742 874.418 340.552 cv
874.378 340.362 874.298 340.213 874.168 340.093 cv
874.038 339.983 873.798 339.873 873.448 339.773 cv
cp
851.841 339.145 mo
856.922 339.145 li
856.922 339.773 li
856.582 339.863 856.342 339.973 856.222 340.083 cv
856.092 340.203 856.002 340.352 855.952 340.552 cv
855.902 340.742 855.872 341.081 855.872 341.55 cv
855.872 351.164 li
857.752 351.164 li
858.163 351.164 858.493 351.094 858.743 350.944 cv
859.003 350.785 859.213 350.535 859.403 350.176 cv
859.583 349.816 859.763 349.237 859.943 348.419 cv
861.274 348.419 li
861.064 352.312 li
851.841 352.312 li
851.841 351.673 li
852.191 351.583 852.431 351.483 852.551 351.374 cv
852.681 351.254 852.761 351.094 852.811 350.904 cv
852.851 350.715 852.881 350.375 852.881 349.886 cv
852.881 341.57 li
852.881 341.081 852.861 340.742 852.811 340.552 cv
852.771 340.362 852.691 340.213 852.561 340.093 cv
852.431 339.983 852.191 339.873 851.841 339.773 cv
cp
867.976 338.985 mo
868.556 338.985 869.096 339.015 869.626 339.075 cv
870.147 339.135 870.737 339.244 871.407 339.404 cv
871.407 342.199 li
870.087 342.199 li
869.917 341.471 869.656 340.941 869.316 340.612 cv
868.966 340.283 868.476 340.113 867.836 340.113 cv
867.256 340.113 866.785 340.263 866.435 340.572 cv
866.085 340.872 865.905 341.281 865.905 341.8 cv
865.905 342.179 865.985 342.499 866.125 342.778 cv
866.275 343.048 866.515 343.317 866.855 343.577 cv
867.196 343.837 867.696 344.136 868.346 344.465 cv
869.136 344.885 869.766 345.284 870.217 345.683 cv
870.667 346.073 871.007 346.502 871.227 346.971 cv
871.437 347.44 871.547 347.979 871.547 348.598 cv
871.547 349.387 871.367 350.076 870.997 350.655 cv
870.627 351.244 870.097 351.693 869.386 352.003 cv
868.686 352.312 867.876 352.472 866.956 352.472 cv
866.295 352.472 865.605 352.432 864.895 352.362 cv
864.185 352.282 863.514 352.172 862.894 352.033 cv
862.894 349.058 li
864.215 349.058 li
864.375 349.826 864.645 350.395 865.025 350.775 cv
865.405 351.154 865.955 351.344 866.685 351.344 cv
867.316 351.344 867.816 351.174 868.176 350.845 cv
868.536 350.515 868.716 350.056 868.716 349.447 cv
868.716 348.858 868.536 348.359 868.196 347.969 cv
867.846 347.57 867.256 347.161 866.405 346.732 cv
865.695 346.392 865.105 346.033 864.625 345.663 cv
864.155 345.294 863.774 344.865 863.504 344.376 cv
863.234 343.886 863.094 343.327 863.094 342.688 cv
863.094 341.9 863.294 341.231 863.684 340.672 cv
864.075 340.123 864.645 339.704 865.395 339.414 cv
866.135 339.125 866.996 338.985 867.976 338.985 cv
cp
ef
892.544 348.029 mo
904.458 348.029 li
904.458 349.317 li
892.544 349.317 li
cp
892.544 344.026 mo
904.458 344.026 li
904.458 345.304 li
892.544 345.304 li
cp
ef
911.69 324.17 mo
917.042 324.17 li
917.042 324.799 li
916.702 324.839 916.452 324.939 916.292 325.079 cv
916.132 325.228 916.052 325.438 916.052 325.707 cv
916.052 325.927 916.072 326.127 916.112 326.336 cv
916.152 326.536 916.232 326.855 916.352 327.305 cv
918.263 334.233 li
920.653 327.335 li
920.753 327.065 920.823 326.806 920.883 326.566 cv
920.933 326.326 920.963 326.077 920.963 325.817 cv
920.963 325.498 920.883 325.258 920.713 325.089 cv
920.553 324.929 920.303 324.829 919.963 324.799 cv
919.963 324.17 li
924.124 324.17 li
924.124 324.799 li
923.884 324.839 923.674 324.919 923.504 325.039 cv
923.334 325.158 923.174 325.328 923.034 325.548 cv
922.904 325.777 922.734 326.137 922.554 326.636 cv
918.503 337.408 li
916.262 337.408 li
913.071 326.596 li
912.931 326.117 912.811 325.777 912.711 325.568 cv
912.621 325.368 912.491 325.208 912.341 325.079 cv
912.18 324.949 911.97 324.859 911.69 324.799 cv
cp
ef
923.214 331.837 mo
930.016 331.837 li
930.016 334.063 li
929.056 334.063 li
928.896 333.624 928.766 333.314 928.656 333.165 cv
928.546 333.005 928.426 332.885 928.276 332.785 cv
928.126 332.696 927.866 332.656 927.506 332.656 cv
926.145 332.656 li
926.145 336.229 li
927.045 336.229 li
927.266 336.229 927.436 336.19 927.556 336.12 cv
927.676 336.06 927.776 335.94 927.856 335.78 cv
927.926 335.621 927.996 335.401 928.046 335.111 cv
928.836 335.111 li
928.836 338.166 li
928.046 338.166 li
927.986 337.877 927.926 337.647 927.846 337.487 cv
927.766 337.328 927.666 337.208 927.546 337.148 cv
927.426 337.078 927.266 337.048 927.045 337.048 cv
926.145 337.048 li
926.145 339.654 li
926.145 340.013 926.165 340.273 926.205 340.412 cv
926.245 340.552 926.315 340.672 926.425 340.762 cv
926.535 340.842 926.725 340.911 926.995 340.951 cv
926.995 341.411 li
923.214 341.411 li
923.214 340.951 li
923.464 340.892 923.634 340.812 923.724 340.732 cv
923.814 340.642 923.874 340.532 923.914 340.392 cv
923.944 340.253 923.964 340.003 923.964 339.644 cv
923.964 333.604 li
923.964 333.245 923.954 332.995 923.924 332.865 cv
923.894 332.725 923.824 332.616 923.734 332.526 cv
923.644 332.446 923.464 332.366 923.214 332.296 cv
cp
934.988 331.717 mo
935.408 331.717 935.808 331.737 936.188 331.787 cv
936.569 331.827 936.999 331.907 937.489 332.027 cv
937.489 334.053 li
936.529 334.053 li
936.398 333.524 936.208 333.145 935.958 332.905 cv
935.718 332.666 935.358 332.546 934.888 332.546 cv
934.468 332.546 934.128 332.656 933.868 332.875 cv
933.618 333.095 933.488 333.394 933.488 333.774 cv
933.488 334.043 933.538 334.273 933.648 334.473 cv
933.748 334.672 933.928 334.872 934.178 335.061 cv
934.428 335.251 934.788 335.461 935.258 335.71 cv
935.838 336.01 936.288 336.299 936.619 336.589 cv
936.949 336.878 937.199 337.188 937.349 337.527 cv
937.509 337.867 937.589 338.266 937.589 338.715 cv
937.589 339.284 937.449 339.783 937.189 340.213 cv
936.919 340.632 936.529 340.961 936.018 341.181 cv
935.508 341.411 934.918 341.53 934.248 341.53 cv
933.768 341.53 933.268 341.501 932.747 341.441 cv
932.237 341.391 931.747 341.311 931.297 341.211 cv
931.297 339.045 li
932.257 339.045 li
932.377 339.604 932.567 340.023 932.847 340.293 cv
933.117 340.572 933.518 340.702 934.048 340.702 cv
934.518 340.702 934.878 340.582 935.138 340.342 cv
935.398 340.113 935.528 339.773 935.528 339.324 cv
935.528 338.895 935.398 338.536 935.148 338.256 cv
934.898 337.967 934.468 337.667 933.848 337.358 cv
933.328 337.108 932.897 336.838 932.557 336.569 cv
932.207 336.309 931.937 335.99 931.737 335.641 cv
931.537 335.281 931.437 334.872 931.437 334.413 cv
931.437 333.844 931.587 333.354 931.867 332.945 cv
932.157 332.546 932.567 332.236 933.107 332.037 cv
933.648 331.827 934.278 331.717 934.988 331.717 cv
cp
ef
919.793 352.162 mo
920.743 352.162 921.514 352.292 922.114 352.542 cv
922.714 352.801 923.144 353.141 923.414 353.58 cv
923.684 354.009 923.814 354.518 923.814 355.097 cv
923.814 355.606 923.714 356.076 923.524 356.515 cv
923.334 356.954 923.014 357.453 922.544 358.012 cv
922.074 358.571 921.284 359.37 920.173 360.418 cv
919.833 360.738 919.433 361.157 918.953 361.686 cv
918.483 362.205 918.102 362.654 917.822 363.034 cv
917.822 363.124 li
921.264 363.124 li
921.684 363.124 921.994 363.094 922.194 363.034 cv
922.404 362.974 922.564 362.864 922.684 362.714 cv
922.804 362.565 922.904 362.335 922.984 362.035 cv
924.094 362.035 li
923.874 365.49 li
915.011 365.49 li
915.011 364.851 li
915.512 363.713 916.522 362.245 918.062 360.458 cv
918.753 359.64 919.283 358.961 919.653 358.442 cv
920.013 357.913 920.283 357.413 920.463 356.944 cv
920.643 356.475 920.743 355.986 920.743 355.487 cv
920.743 354.778 920.583 354.219 920.263 353.819 cv
919.953 353.42 919.513 353.22 918.973 353.22 cv
917.922 353.22 917.242 353.969 916.952 355.487 cv
915.201 355.487 li
915.201 353.211 li
916.262 352.781 917.102 352.502 917.752 352.362 cv
918.393 352.232 919.073 352.162 919.793 352.162 cv
cp
ef
926.555 349.926 mo
929.406 349.926 li
931.897 354.239 li
932.047 354.508 932.247 354.878 932.497 355.337 cv
932.747 355.806 932.967 356.245 933.157 356.655 cv
933.268 356.655 li
933.217 355.537 933.198 354.309 933.198 352.991 cv
933.198 351.683 li
933.198 351.374 933.177 351.154 933.157 351.024 cv
933.137 350.884 933.097 350.785 933.047 350.715 cv
932.997 350.645 932.927 350.585 932.857 350.545 cv
932.777 350.495 932.637 350.445 932.437 350.385 cv
932.437 349.926 li
935.098 349.926 li
935.098 350.385 li
934.908 350.445 934.778 350.495 934.698 350.535 cv
934.628 350.585 934.558 350.635 934.508 350.705 cv
934.448 350.775 934.408 350.884 934.378 351.024 cv
934.358 351.174 934.338 351.384 934.338 351.683 cv
934.338 359.5 li
932.557 359.5 li
929.386 354.039 li
928.966 353.3 928.646 352.721 928.446 352.302 cv
928.386 352.302 li
928.426 353.31 928.456 354.369 928.456 355.487 cv
928.456 357.753 li
928.456 358.102 928.466 358.342 928.506 358.482 cv
928.546 358.621 928.606 358.741 928.696 358.821 cv
928.786 358.901 928.956 358.971 929.216 359.041 cv
929.216 359.5 li
926.555 359.5 li
926.555 359.041 li
926.805 358.971 926.975 358.901 927.065 358.811 cv
927.155 358.721 927.215 358.611 927.255 358.482 cv
927.285 358.342 927.306 358.102 927.306 357.753 cv
927.306 351.673 li
927.306 351.324 927.296 351.084 927.266 350.954 cv
927.235 350.815 927.165 350.705 927.075 350.615 cv
926.975 350.525 926.805 350.445 926.555 350.385 cv
cp
ef
911.39 346.083 mo
925.255 346.083 li
939.119 346.083 li
939.119 347.4 li
925.255 347.4 li
911.39 347.4 li
cp
ef
377.533 372.158 mo
374.282 380.634 li
380.204 380.634 li
cp
377.133 369.533 mo
379.614 369.533 li
383.765 382.101 li
383.765 382.8 li
372.082 382.8 li
372.082 382.081 li
cp
ef
384.616 373.366 mo
388.887 373.366 li
388.887 374.175 li
388.507 374.265 388.267 374.334 388.177 374.384 cv
388.077 374.434 388.007 374.494 387.967 374.564 cv
387.927 374.634 387.907 374.734 387.907 374.874 cv
387.907 375.033 387.927 375.203 387.967 375.373 cv
387.997 375.542 388.057 375.732 388.127 375.922 cv
389.627 380.654 li
391.368 376.181 li
391.488 375.872 391.578 375.632 391.618 375.453 cv
391.668 375.283 391.688 375.113 391.688 374.953 cv
391.688 374.744 391.638 374.584 391.528 374.484 cv
391.418 374.374 391.138 374.275 390.698 374.175 cv
390.698 373.366 li
394.639 373.366 li
394.639 374.175 li
394.319 374.245 394.099 374.315 393.989 374.404 cv
393.879 374.494 393.759 374.644 393.639 374.854 cv
393.509 375.063 393.359 375.373 393.179 375.772 cv
389.927 382.89 li
388.537 382.89 li
385.926 375.692 li
385.756 375.223 385.616 374.904 385.526 374.734 cv
385.426 374.574 385.326 374.454 385.236 374.384 cv
385.136 374.315 384.926 374.245 384.616 374.175 cv
cp
ef
401.121 378.507 mo
413.035 378.507 li
413.035 379.795 li
401.121 379.795 li
cp
401.121 374.504 mo
413.035 374.504 li
413.035 375.792 li
401.121 375.792 li
cp
ef
427.69 368.974 mo
428.88 368.974 li
428.88 377.11 li
429.201 377.11 li
429.431 377.11 429.611 377.09 429.731 377.04 cv
429.861 377 430.001 376.93 430.141 376.83 cv
430.271 376.73 430.491 376.551 430.781 376.291 cv
431.071 376.022 431.291 375.792 431.441 375.592 cv
431.581 375.393 431.681 375.213 431.741 375.063 cv
431.791 374.913 431.811 374.764 431.811 374.624 cv
431.811 374.175 431.531 373.915 430.971 373.835 cv
430.971 373.226 li
435.813 373.226 li
435.813 373.835 li
435.553 373.875 435.273 373.995 434.962 374.185 cv
434.652 374.384 434.172 374.784 433.512 375.403 cv
432.101 376.71 li
434.602 380.394 li
434.972 380.943 435.243 381.313 435.413 381.522 cv
435.583 381.732 435.743 381.872 435.863 381.961 cv
435.993 382.051 436.153 382.111 436.353 382.161 cv
436.353 382.8 li
431.621 382.8 li
431.621 382.161 li
431.911 382.101 432.061 381.951 432.061 381.702 cv
432.061 381.542 432.001 381.342 431.891 381.113 cv
431.771 380.883 431.551 380.524 431.221 380.045 cv
430.481 378.927 li
430.311 378.677 430.181 378.497 430.071 378.378 cv
429.971 378.268 429.871 378.178 429.771 378.128 cv
429.671 378.068 429.531 378.038 429.351 378.038 cv
428.88 378.038 li
428.88 380.005 li
428.88 380.614 428.9 381.043 428.94 381.273 cv
428.98 381.502 429.06 381.692 429.18 381.822 cv
429.301 381.961 429.521 382.071 429.851 382.161 cv
429.851 382.8 li
425.109 382.8 li
425.109 382.161 li
425.439 382.071 425.669 381.961 425.789 381.832 cv
425.909 381.692 425.989 381.512 426.029 381.283 cv
426.069 381.053 426.089 380.634 426.089 380.005 cv
426.089 372.478 li
426.089 371.789 426.079 371.3 426.059 371 cv
426.039 370.711 425.999 370.481 425.939 370.331 cv
425.879 370.182 425.789 370.062 425.669 369.972 cv
425.549 369.892 425.329 369.812 424.999 369.742 cv
424.999 369.113 li
cp
ef
536.436 365.21 mo
538.447 365.739 539.997 367.107 541.088 369.313 cv
542.178 371.519 542.728 374.135 542.728 377.15 cv
542.728 380.165 542.178 382.78 541.088 384.987 cv
539.997 387.194 538.447 388.561 536.436 389.089 cv
536.196 388.298 li
537.756 387.712 538.937 386.437 539.737 384.47 cv
540.547 382.501 540.948 380.065 540.948 377.16 cv
540.948 374.245 540.547 371.799 539.737 369.832 cv
538.937 367.866 537.756 366.588 536.196 365.999 cv
cp
444.326 365.21 mo
444.566 365.999 li
443.005 366.588 441.825 367.866 441.014 369.832 cv
440.214 371.799 439.814 374.245 439.814 377.16 cv
439.814 380.065 440.214 382.501 441.014 384.47 cv
441.825 386.437 443.005 387.712 444.566 388.298 cv
444.326 389.089 li
442.315 388.561 440.764 387.194 439.674 384.987 cv
438.584 382.78 438.033 380.165 438.033 377.15 cv
438.033 374.135 438.584 371.519 439.674 369.313 cv
440.764 367.107 442.315 365.739 444.326 365.21 cv
cp
ef
445.476 369.622 mo
450.828 369.622 li
450.828 370.261 li
450.488 370.301 450.237 370.391 450.077 370.541 cv
449.917 370.691 449.837 370.9 449.837 371.17 cv
449.837 371.38 449.857 371.589 449.897 371.789 cv
449.937 371.988 450.017 372.318 450.137 372.757 cv
452.058 379.685 li
454.439 372.787 li
454.539 372.518 454.619 372.268 454.669 372.028 cv
454.729 371.789 454.749 371.539 454.749 371.27 cv
454.749 370.96 454.669 370.721 454.509 370.551 cv
454.339 370.381 454.089 370.281 453.749 370.261 cv
453.749 369.622 li
457.91 369.622 li
457.91 370.261 li
457.67 370.301 457.46 370.381 457.29 370.491 cv
457.12 370.611 456.97 370.781 456.83 371.01 cv
456.69 371.23 456.53 371.589 456.34 372.088 cv
452.288 382.86 li
450.047 382.86 li
446.856 372.058 li
446.716 371.569 446.596 371.23 446.506 371.03 cv
446.406 370.82 446.276 370.661 446.126 370.531 cv
445.966 370.411 445.756 370.321 445.476 370.261 cv
cp
ef
466.843 379.795 mo
467.193 379.795 467.523 379.805 467.853 379.835 cv
468.183 379.865 468.604 379.925 469.124 380.015 cv
469.124 381.652 li
468.193 381.652 li
468.093 381.352 467.973 381.123 467.843 380.963 cv
467.713 380.793 467.573 380.684 467.413 380.614 cv
467.263 380.554 467.073 380.524 466.863 380.524 cv
466.553 380.524 466.303 380.594 466.123 380.734 cv
465.943 380.873 465.853 381.073 465.853 381.323 cv
465.853 381.502 465.883 381.652 465.943 381.782 cv
466.013 381.902 466.133 382.031 466.303 382.151 cv
466.473 382.271 466.793 382.431 467.273 382.63 cv
467.973 382.92 468.474 383.239 468.764 383.569 cv
469.054 383.908 469.204 384.317 469.204 384.799 cv
469.204 385.5 468.954 386.039 468.453 386.417 cv
467.953 386.793 467.243 386.982 466.323 386.982 cv
465.543 386.982 464.682 386.871 463.742 386.651 cv
463.742 384.974 li
464.682 384.974 li
464.792 385.4 464.972 385.719 465.212 385.932 cv
465.463 386.145 465.783 386.251 466.193 386.251 cv
466.543 386.251 466.813 386.172 466.993 386.013 cv
467.173 385.854 467.263 385.622 467.263 385.318 cv
467.263 385.126 467.223 384.962 467.143 384.827 cv
467.053 384.691 466.923 384.561 466.733 384.437 cv
466.543 384.317 466.213 384.148 465.753 383.948 cv
465.102 383.669 464.622 383.349 464.332 383.01 cv
464.032 382.66 463.882 382.271 463.882 381.842 cv
463.882 381.422 464.012 381.053 464.252 380.744 cv
464.492 380.444 464.842 380.204 465.292 380.035 cv
465.753 379.875 466.263 379.795 466.843 379.795 cv
cp
461.881 379.795 mo
462.161 379.795 462.462 379.825 462.782 379.885 cv
462.782 381.822 li
461.501 381.822 li
461.421 381.552 461.321 381.342 461.191 381.193 cv
461.061 381.053 460.891 380.983 460.671 380.983 cv
460.571 380.983 460.461 381.013 460.331 381.073 cv
460.211 381.143 460.091 381.223 459.991 381.342 cv
459.881 381.452 459.811 381.572 459.761 381.692 cv
459.721 381.812 459.691 381.931 459.671 382.051 cv
459.661 382.171 459.651 382.361 459.651 382.6 cv
459.651 384.841 li
459.651 385.285 459.671 385.596 459.701 385.774 cv
459.741 385.952 459.801 386.091 459.901 386.192 cv
460.001 386.292 460.161 386.364 460.401 386.406 cv
460.401 386.869 li
456.93 386.869 li
456.93 386.406 li
457.16 386.345 457.31 386.265 457.4 386.167 cv
457.49 386.068 457.54 385.936 457.58 385.767 cv
457.61 385.598 457.62 385.292 457.62 384.848 cv
457.62 381.961 li
457.62 381.612 457.62 381.362 457.6 381.193 cv
457.59 381.023 457.56 380.893 457.52 380.793 cv
457.47 380.694 457.41 380.614 457.32 380.544 cv
457.22 380.484 457.07 380.434 456.84 380.384 cv
456.84 379.905 li
458.77 379.845 li
459.651 379.845 li
459.551 380.913 li
459.651 380.933 li
459.991 380.524 460.341 380.234 460.701 380.065 cv
461.061 379.885 461.451 379.795 461.881 379.795 cv
cp
471.505 378.148 mo
473.185 378.148 li
473.185 379.905 li
475.186 379.905 li
475.186 380.783 li
473.185 380.783 li
473.185 383.948 li
473.185 384.478 473.205 384.868 473.255 385.121 cv
473.305 385.374 473.385 385.56 473.505 385.679 cv
473.625 385.799 473.765 385.859 473.945 385.859 cv
474.175 385.859 474.365 385.819 474.536 385.739 cv
474.696 385.659 474.846 385.559 474.986 385.438 cv
475.426 386.027 li
475.016 386.378 474.636 386.624 474.305 386.767 cv
473.965 386.91 473.605 386.982 473.235 386.982 cv
472.535 386.982 472.015 386.793 471.665 386.417 cv
471.324 386.039 471.154 385.47 471.154 384.707 cv
471.154 380.783 li
470.274 380.783 li
470.274 380.294 li
470.554 380.254 470.764 380.184 470.904 380.085 cv
471.044 379.995 471.144 379.865 471.224 379.715 cv
471.294 379.556 471.354 379.356 471.404 379.096 cv
471.444 378.847 471.475 378.527 471.505 378.148 cv
cp
ef
482.148 377.789 mo
494.063 377.789 li
494.063 376.505 li
482.148 376.505 li
cp
ef
504.655 369.622 mo
510.007 369.622 li
510.007 370.261 li
509.667 370.301 509.417 370.391 509.257 370.541 cv
509.097 370.691 509.017 370.9 509.017 371.17 cv
509.017 371.38 509.037 371.589 509.077 371.789 cv
509.117 371.988 509.197 372.318 509.317 372.757 cv
511.238 379.685 li
513.618 372.787 li
513.719 372.518 513.799 372.268 513.849 372.028 cv
513.909 371.789 513.929 371.539 513.929 371.27 cv
513.929 370.96 513.849 370.721 513.688 370.551 cv
513.518 370.381 513.268 370.281 512.928 370.261 cv
512.928 369.622 li
517.09 369.622 li
517.09 370.261 li
516.85 370.301 516.639 370.381 516.469 370.491 cv
516.299 370.611 516.149 370.781 516.009 371.01 cv
515.869 371.23 515.709 371.589 515.519 372.088 cv
511.468 382.86 li
509.227 382.86 li
506.036 372.058 li
505.896 371.569 505.776 371.23 505.686 371.03 cv
505.586 370.82 505.456 370.661 505.306 370.531 cv
505.146 370.411 504.936 370.321 504.655 370.261 cv
cp
ef
529.504 387.318 mo
529.334 387.449 529.214 387.592 529.124 387.747 cv
529.034 387.901 528.994 388.079 528.994 388.28 cv
528.994 388.617 529.144 388.866 529.434 389.027 cv
529.724 389.189 530.184 389.27 530.824 389.27 cv
531.414 389.27 531.865 389.171 532.165 388.974 cv
532.475 388.779 532.625 388.502 532.625 388.147 cv
532.625 387.851 532.535 387.645 532.345 387.525 cv
532.165 387.406 531.885 387.346 531.514 387.346 cv
530.304 387.346 li
529.964 387.346 529.694 387.337 529.504 387.318 cv
cp
530.774 380.514 mo
530.434 380.514 530.174 380.654 530.014 380.923 cv
529.844 381.193 529.764 381.602 529.764 382.161 cv
529.764 382.75 529.844 383.189 530.014 383.479 cv
530.174 383.758 530.434 383.908 530.794 383.908 cv
531.114 383.908 531.364 383.778 531.534 383.509 cv
531.704 383.239 531.794 382.83 531.794 382.281 cv
531.794 381.712 531.704 381.273 531.544 380.973 cv
531.374 380.664 531.124 380.514 530.774 380.514 cv
cp
524.672 379.845 mo
525.552 379.845 li
525.552 384.841 li
525.552 385.29 525.572 385.597 525.592 385.764 cv
525.622 385.93 525.672 386.063 525.763 386.163 cv
525.853 386.264 526.023 386.345 526.263 386.406 cv
526.263 386.869 li
522.822 386.869 li
522.822 386.406 li
523.052 386.345 523.212 386.265 523.302 386.167 cv
523.392 386.068 523.442 385.936 523.482 385.767 cv
523.512 385.598 523.522 385.292 523.522 384.848 cv
523.522 381.582 li
523.522 381.253 523.502 381.023 523.462 380.883 cv
523.422 380.744 523.352 380.644 523.252 380.574 cv
523.152 380.494 522.982 380.434 522.742 380.384 cv
522.742 379.905 li
cp
530.804 379.795 mo
531.044 379.795 531.254 379.805 531.434 379.825 cv
531.614 379.855 531.794 379.875 531.965 379.905 cv
534.505 379.905 li
534.505 380.843 li
533.305 380.714 li
533.275 380.793 li
533.405 380.923 533.515 381.103 533.605 381.323 cv
533.685 381.552 533.735 381.832 533.735 382.141 cv
533.735 382.96 533.485 383.579 532.995 383.998 cv
532.495 384.417 531.764 384.63 530.804 384.63 cv
530.344 384.63 529.964 384.588 529.664 384.504 cv
529.434 384.714 529.314 384.941 529.314 385.185 cv
529.314 385.325 529.344 385.433 529.404 385.507 cv
529.464 385.582 529.564 385.639 529.704 385.679 cv
529.844 385.719 530.044 385.739 530.304 385.739 cv
532.045 385.739 li
532.825 385.739 533.415 385.891 533.805 386.195 cv
534.195 386.5 534.385 386.972 534.385 387.613 cv
534.385 388.114 534.245 388.544 533.965 388.905 cv
533.675 389.265 533.275 389.54 532.745 389.729 cv
532.215 389.919 531.584 390.014 530.854 390.014 cv
530.324 390.014 529.844 389.991 529.414 389.944 cv
528.984 389.897 528.613 389.811 528.313 389.687 cv
528.003 389.563 527.773 389.394 527.603 389.178 cv
527.433 388.964 527.353 388.689 527.353 388.358 cv
527.353 388.091 527.443 387.844 527.603 387.62 cv
527.773 387.395 528.013 387.203 528.313 387.045 cv
528.123 386.904 527.973 386.743 527.893 386.561 cv
527.803 386.378 527.753 386.153 527.753 385.887 cv
527.753 385.601 527.833 385.33 528.003 385.072 cv
528.163 384.815 528.453 384.534 528.854 384.228 cv
528.483 384.028 528.213 383.758 528.023 383.419 cv
527.833 383.09 527.743 382.69 527.743 382.241 cv
527.743 381.682 527.873 381.213 528.143 380.853 cv
528.413 380.484 528.773 380.214 529.224 380.045 cv
529.684 379.875 530.214 379.795 530.804 379.795 cv
cp
519.06 379.795 mo
519.41 379.795 519.74 379.805 520.071 379.835 cv
520.401 379.865 520.821 379.925 521.341 380.015 cv
521.341 381.652 li
520.411 381.652 li
520.311 381.352 520.191 381.123 520.061 380.963 cv
519.931 380.793 519.791 380.684 519.63 380.614 cv
519.48 380.554 519.29 380.524 519.08 380.524 cv
518.77 380.524 518.52 380.594 518.34 380.734 cv
518.16 380.873 518.07 381.073 518.07 381.323 cv
518.07 381.502 518.1 381.652 518.16 381.782 cv
518.23 381.902 518.35 382.031 518.52 382.151 cv
518.68 382.271 519.01 382.431 519.49 382.63 cv
520.191 382.92 520.691 383.239 520.981 383.569 cv
521.271 383.908 521.421 384.317 521.421 384.799 cv
521.421 385.5 521.171 386.039 520.671 386.417 cv
520.171 386.793 519.46 386.982 518.54 386.982 cv
517.76 386.982 516.9 386.871 515.959 386.651 cv
515.959 384.974 li
516.9 384.974 li
517.01 385.4 517.19 385.719 517.43 385.932 cv
517.68 386.145 518 386.251 518.41 386.251 cv
518.76 386.251 519.03 386.172 519.21 386.013 cv
519.39 385.854 519.48 385.622 519.48 385.318 cv
519.48 385.126 519.44 384.962 519.36 384.827 cv
519.27 384.691 519.14 384.561 518.95 384.437 cv
518.76 384.317 518.43 384.148 517.97 383.948 cv
517.32 383.669 516.84 383.349 516.549 383.01 cv
516.249 382.66 516.099 382.271 516.099 381.842 cv
516.099 381.422 516.229 381.053 516.469 380.744 cv
516.709 380.444 517.06 380.204 517.51 380.035 cv
517.97 379.875 518.48 379.795 519.06 379.795 cv
cp
523.572 377.11 mo
525.502 377.11 li
525.502 378.827 li
523.572 378.827 li
cp
ef
52.0674 390.29 mo
57.4154 390.29 li
57.4154 390.927 li
57.0802 390.965 56.8322 391.059 56.6711 391.207 cv
56.51 391.354 56.429 391.564 56.429 391.835 cv
56.429 392.046 56.448 392.254 56.487 392.457 cv
56.5261 392.659 56.6061 392.983 56.7291 393.427 cv
58.6438 400.356 li
61.0325 393.456 li
61.1296 393.185 61.2046 392.932 61.2596 392.693 cv
61.3146 392.456 61.3417 392.204 61.3417 391.94 cv
61.3417 391.625 61.2596 391.383 61.0956 391.217 cv
60.9305 391.049 60.6784 390.953 60.3363 390.927 cv
60.3363 390.29 li
64.5047 390.29 li
64.5047 390.927 li
64.2596 390.965 64.0515 391.044 63.8805 391.164 cv
63.7094 391.283 63.5554 391.453 63.4163 391.675 cv
63.2783 391.896 63.1152 392.259 62.9282 392.761 cv
58.8758 403.532 li
56.6421 403.532 li
53.4503 392.722 li
53.3085 392.24 53.1893 391.896 53.0925 391.694 cv
52.9958 391.491 52.87 391.327 52.7154 391.202 cv
52.5606 391.077 52.3446 390.985 52.0674 390.927 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
73.7328 401.192 mo
73.3716 401.192 73.0845 401.374 72.8715 401.74 cv
72.6584 402.104 72.5304 402.631 72.4883 403.319 cv
74.8301 403.319 li
74.8111 402.602 74.7181 402.069 74.549 401.719 cv
74.38 401.367 74.1079 401.192 73.7328 401.192 cv
cp
73.8458 400.462 mo
74.2719 400.462 74.6461 400.511 74.9672 400.61 cv
75.2883 400.707 75.5644 400.844 75.7934 401.02 cv
76.0235 401.196 76.2136 401.407 76.3636 401.655 cv
76.5417 401.95 76.6767 402.289 76.7678 402.673 cv
76.8598 403.056 76.9078 403.525 76.9118 404.077 cv
72.4533 404.077 li
72.4573 404.923 72.6084 405.547 72.9065 405.948 cv
73.2046 406.348 73.6577 406.547 74.2679 406.547 cv
74.624 406.547 74.9452 406.481 75.2312 406.348 cv
75.5173 406.214 75.8264 405.978 76.1596 405.642 cv
76.7297 406.26 li
76.2506 406.765 75.7774 407.124 75.3083 407.334 cv
74.8391 407.544 74.2999 407.65 73.6907 407.65 cv
72.5984 407.65 71.7761 407.351 71.2259 406.754 cv
70.6747 406.158 70.3987 405.273 70.3987 404.098 cv
70.3987 403.34 70.5407 402.686 70.8248 402.136 cv
71.1079 401.586 71.51 401.17 72.0312 400.886 cv
72.5514 400.604 73.1566 400.462 73.8458 400.462 cv
cp
68.466 400.462 mo
68.7521 400.462 69.0522 400.492 69.3663 400.553 cv
69.3663 402.49 li
68.0939 402.49 li
68.0139 402.219 67.9098 402.01 67.7808 401.865 cv
67.6517 401.721 67.4787 401.648 67.2636 401.648 cv
67.1606 401.648 67.0465 401.68 66.9225 401.743 cv
66.7985 401.806 66.6834 401.894 66.5774 402.009 cv
66.4724 402.124 66.3973 402.241 66.3523 402.361 cv
66.3083 402.479 66.2783 402.6 66.2643 402.722 cv
66.2503 402.844 66.2433 403.026 66.2433 403.269 cv
66.2433 405.508 li
66.2433 405.953 66.2603 406.264 66.2933 406.443 cv
66.3253 406.62 66.3913 406.759 66.4894 406.86 cv
66.5884 406.961 66.7544 407.032 66.9895 407.074 cv
66.9895 407.537 li
63.5214 407.537 li
63.5214 407.074 li
63.7464 407.013 63.9025 406.934 63.9895 406.835 cv
64.0766 406.737 64.1346 406.603 64.1656 406.436 cv
64.1956 406.267 64.2106 405.96 64.2106 405.515 cv
64.2106 402.631 li
64.2106 402.285 64.2046 402.028 64.1936 401.862 cv
64.1816 401.696 64.1536 401.563 64.1086 401.462 cv
64.0646 401.361 63.9965 401.279 63.9045 401.217 cv
63.8135 401.154 63.6554 401.098 63.4303 401.052 cv
63.4303 400.574 li
65.357 400.518 li
66.2433 400.518 li
66.1452 401.578 li
66.2363 401.599 li
66.5784 401.197 66.9305 400.906 67.2916 400.728 cv
67.6527 400.551 68.0439 400.462 68.466 400.462 cv
cp
86.0398 397.486 mo
86.9191 397.486 li
86.9191 405.508 li
86.9191 405.953 86.9331 406.26 86.9611 406.429 cv
86.9891 406.596 87.0472 406.731 87.1332 406.832 cv
87.2202 406.933 87.3833 407.013 87.6224 407.074 cv
87.6224 407.537 li
84.1762 407.537 li
84.1762 407.074 li
84.4153 407.013 84.5793 406.934 84.6684 406.835 cv
84.7574 406.737 84.8164 406.604 84.8444 406.439 cv
84.8724 406.273 84.8865 405.962 84.8865 405.508 cv
84.8865 400.034 li
84.8865 399.537 84.8794 399.181 84.8654 398.963 cv
84.8514 398.746 84.8214 398.582 84.7774 398.472 cv
84.7324 398.361 84.6674 398.276 84.5803 398.212 cv
84.4933 398.149 84.3303 398.094 84.0912 398.047 cv
84.0912 397.584 li
cp
82.1545 397.458 mo
82.5577 397.458 82.9168 397.49 83.2309 397.556 cv
83.2309 398.987 li
82.2736 398.987 li
82.1946 398.731 82.1065 398.541 82.0105 398.419 cv
81.9145 398.298 81.7884 398.237 81.6344 398.237 cv
81.4323 398.237 81.2773 398.304 81.1702 398.436 cv
81.0622 398.57 80.9882 398.76 80.9481 399.005 cv
80.9081 399.251 80.8881 399.596 80.8881 400.041 cv
80.8881 400.574 li
82.2456 400.574 li
82.2456 401.451 li
80.8881 401.451 li
80.8881 405.776 li
80.8881 406.126 80.9071 406.375 80.9451 406.52 cv
80.9822 406.664 81.0492 406.779 81.1452 406.863 cv
81.2412 406.948 81.4113 407.018 81.6554 407.074 cv
81.6554 407.537 li
78.1522 407.537 li
78.1522 407.074 li
78.3723 407.009 78.5263 406.936 78.6134 406.856 cv
78.6994 406.777 78.7624 406.665 78.7994 406.523 cv
78.8374 406.38 78.8555 406.131 78.8555 405.776 cv
78.8555 401.451 li
77.9972 401.451 li
77.9972 400.967 li
78.2462 400.93 78.4183 400.884 78.5143 400.83 cv
78.6104 400.776 78.6894 400.691 78.7504 400.574 cv
78.8114 400.457 78.8534 400.272 78.8765 400.02 cv
78.9515 399.177 79.2646 398.54 79.8158 398.107 cv
80.367 397.674 81.1462 397.458 82.1545 397.458 cv
cp
ef
83.8821 418.931 mo
83.483 418.931 83.1959 418.937 83.0218 418.95 cv
83.0218 429.808 li
83.1379 429.828 83.431 429.837 83.9021 429.837 cv
84.8945 429.837 85.6667 429.638 86.2179 429.239 cv
86.7691 428.839 87.1882 428.231 87.4753 427.415 cv
87.7624 426.597 87.9054 425.571 87.9054 424.336 cv
87.9054 422.566 87.5603 421.223 86.8711 420.306 cv
86.1809 419.39 85.1845 418.931 83.8821 418.931 cv
cp
78.9885 417.802 mo
84.0182 417.802 li
85.0945 417.802 85.9938 417.885 86.7161 418.053 cv
87.4383 418.22 88.0795 418.484 88.6407 418.845 cv
89.2019 419.205 89.654 419.634 89.9991 420.132 cv
90.3443 420.631 90.6003 421.21 90.7684 421.87 cv
90.9355 422.529 91.0195 423.274 91.0195 424.105 cv
91.0195 425.455 90.8104 426.61 90.3913 427.57 cv
90.0171 428.431 89.477 429.126 88.7707 429.654 cv
88.0655 430.181 87.2222 430.545 86.2419 430.744 cv
85.4947 430.899 84.5403 430.976 83.379 430.976 cv
78.9885 430.976 li
78.9885 430.339 li
79.3366 430.249 79.5737 430.146 79.6997 430.03 cv
79.8248 429.915 79.9108 429.762 79.9558 429.572 cv
80.0008 429.382 80.0238 429.042 80.0238 428.554 cv
80.0238 420.234 li
80.0238 419.745 80.0028 419.406 79.9608 419.216 cv
79.9188 419.026 79.8338 418.873 79.7047 418.758 cv
79.5757 418.642 79.3366 418.535 78.9885 418.439 cv
cp
65.275 417.802 mo
69.1922 417.802 li
72.6154 423.737 li
72.8285 424.111 73.1055 424.616 73.4477 425.253 cv
73.7888 425.889 74.0919 426.491 74.356 427.057 cv
74.511 427.057 li
74.44 425.52 74.405 423.84 74.405 422.019 cv
74.405 420.224 li
74.405 419.8 74.389 419.495 74.356 419.313 cv
74.324 419.129 74.2729 418.989 74.2019 418.892 cv
74.1309 418.796 74.0419 418.717 73.9358 418.656 cv
73.8288 418.595 73.6407 418.522 73.3696 418.439 cv
73.3696 417.802 li
77.0258 417.802 li
77.0258 418.439 li
76.7678 418.522 76.5857 418.593 76.4797 418.651 cv
76.3726 418.709 76.2826 418.787 76.2086 418.882 cv
76.1346 418.979 76.0775 419.126 76.0395 419.322 cv
76.0005 419.518 75.9815 419.819 75.9815 420.224 cv
75.9815 430.976 li
73.5247 430.976 li
69.1722 423.468 li
68.5861 422.45 68.1539 421.653 67.8768 421.074 cv
67.7898 421.074 li
67.8538 422.457 67.8868 423.918 67.8868 425.455 cv
67.8868 428.563 li
67.8868 429.046 67.9108 429.384 67.9588 429.576 cv
68.0069 429.77 68.0939 429.923 68.2199 430.035 cv
68.346 430.147 68.583 430.249 68.9312 430.339 cv
68.9312 430.976 li
65.275 430.976 li
65.275 430.339 li
65.6171 430.249 65.8501 430.144 65.9762 430.025 cv
66.1022 429.907 66.1893 429.754 66.2373 429.567 cv
66.2853 429.381 66.3103 429.046 66.3103 428.563 cv
66.3103 420.214 li
66.3103 419.732 66.2893 419.4 66.2473 419.216 cv
66.2053 419.032 66.1182 418.879 65.9862 418.758 cv
65.8541 418.635 65.6171 418.529 65.275 418.439 cv
cp
58.4767 417.648 mo
59.8892 417.648 61.1846 417.818 62.365 418.159 cv
62.365 420.9 li
61.0396 420.9 li
60.8915 420.36 60.7224 419.943 60.5324 419.65 cv
60.3423 419.358 60.0972 419.139 59.7971 418.994 cv
59.497 418.849 59.1119 418.777 58.6418 418.777 cv
58.0035 418.777 57.4394 418.971 56.9492 419.361 cv
56.459 419.75 56.0719 420.371 55.7888 421.223 cv
55.5047 422.076 55.3627 423.155 55.3627 424.461 cv
55.3627 426.244 55.5897 427.613 56.0449 428.568 cv
56.499 429.523 57.1393 430.001 57.9645 430.001 cv
58.5317 430.001 58.9509 429.833 59.2219 429.494 cv
59.492 429.157 59.6281 428.618 59.6281 427.878 cv
59.6281 427.511 li
59.6281 427.023 59.6121 426.673 59.5801 426.465 cv
59.5471 426.255 59.497 426.099 59.43 425.996 cv
59.362 425.892 59.273 425.81 59.1639 425.745 cv
59.0539 425.681 58.8608 425.607 58.5837 425.523 cv
58.5837 424.886 li
63.5354 424.886 li
63.5354 425.523 li
63.2123 425.62 62.9932 425.729 62.8772 425.852 cv
62.7611 425.973 62.6821 426.136 62.6401 426.339 cv
62.5991 426.541 62.5781 426.826 62.5781 427.192 cv
62.5781 430.831 li
61.1846 431.121 li
60.5274 430.426 li
59.7601 430.896 58.8798 431.131 57.8875 431.131 cv
56.0049 431.131 54.6004 430.582 53.6753 429.485 cv
52.7501 428.388 52.2876 426.726 52.2876 424.5 cv
52.2876 423.058 52.5373 421.824 53.037 420.798 cv
53.5367 419.772 54.2588 418.99 55.2036 418.453 cv
56.1479 417.916 57.2393 417.648 58.4767 417.648 cv
cp
ef
.61709 .780514 0 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f329fef63f1000000cc000000606376
74203fba58ec0000012c000006886670676da1ea42ac000007b400000913
676c79660ad8deea0000f8b800003f2268656164f85c7982000010c80000
0036686865610dbb1cd30000110000000024686d74781519183700001124
000069ac6c6f6361782269b900007ad0000036566d61787028a8181e0000
b128000000206e616d65df42d3300000b1480000308b70726570f940ca73
0000e1d4000016e1676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e4002effc000247b00000009000000004d53202000200000
25cc0600fe0001c4079e0226200001ff0000000003c0050e000000200014
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000005aa001500a0fff8ff42fea2fdbc03b6015401cc
0108010e00ff00f5006e014000a0055e006b0570fff60122fff10547ffec
04faffec0131fff4000a03a0036600b400e1044c007c40465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d000001000000063ae16ffeb1905f0f3cf50019080000000000
bbeb7ccc00000000d7497752fbdafd350a1a085000010009000200000000
0000000100000600fe0001c40aa0fbdafa860a1a00010000000000000000
00000000000019ac040e0000000000000000000001cf0000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000043c004f000000000000
0000000000000000000000000000050b008d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000005190049000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000006fe008d00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000481008d00000000000000000000000003c8003f0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000447000a00000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003cb005a0000000000000000
00000000000000000000000004910086000000000000000000000000038f
008600000000000000000000000000000000000000000000000000000000
000000000000000000000000049c00580000000000000000000000000000
000000000000000000000000000002100086000000000000000000000000
000000000000000000000000000000000210001800000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000648008604c700860000000000000000000000000000
00000000000004da00550000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003fd00860000
00000000000004250086000000000000000000000000036f004300000000
00000000000000000000000000000000037b001b00000000000000000000
000004ac0084000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003f30047000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000359004800000000000000000000
000000000000000000000000000000000000060e004800000000044b004b
0000000000000000000000000407004a0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001f7006b0000
000000000000000000000000000000000000000000000000000000000000
01f7007e0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0682007e044b007e00000000000000000000000000000000000000000000
0000044d0048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000044b007e000000000000
000002d8007e000000000000000000000000033100490000000000000000
00000000000000000000000005d4004900000000000000000000000002c6
00170000000000000000000000000000000004af00170000000000000000
00000000000000000000000000000000000000000000000004af00170540
001700000000072800170000000000000000000000000000000000000000
00000000000000000000000007280017044b007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002bf0036000000000244003802f5
003a02c7003a000000000000000000000000017a004f0000000000000000
00000000046c005a02f9005a02f5003902f5005a000000000200005a023a
003c01fa001c02fb005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001f7000001e200000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000029b00e600000000000000000000
0000000000000000000000000000026900cf000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000038200790000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004c1006600000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003160054036b00780000
000000000000037c00550000000000000000000000000000000000000000
049a007800000000000000000000000000000000030d00780288003a0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000036b007800000000
00000000037c00550000000000000000000000000000000000000000049a
00780000000000000000000000000000000000000000030d007800000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000019900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000ffba000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00>
<0000009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e01300130013001300130013001990199019901990199
0199019901990199019901990199019901990199025b025b025b025b025b
025b025b025b025b025b025b025b025b025b025b025b025b025b025b025b
025b025b025b025b025b025b025b025b025b031e031e031e031e031e031e
031e031e031e031e031e031e031e031e031e031e031e031e031e031e031e
031e03ce03ce03ce03ce0489048904890489048904890489048904890489
048904890489048904890489048904890489048904890489048904890489
04890489048904890489048904890489048904890489048904ef04ef04ef
04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef04ef0556055605560556
05560556059b059b059b059b05fa05fa05fa05fa05fa05fa05fa05fa05fa
05fa05fa0676067606760676067606760676067606a206a206a206a206a2
06a206a206a206ad06ad06ad06ad06ad06ad06ad06ad06ad06ad06ad06ad
06ad0723078e078e078e078e078e078e07dc07dc07dc07dc07dc07dc07dc
07dc07dc07dc07dc07dc08360836083608b308b308b308b3093c093c093c
093c093c093c097c097c097c097c09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc09cc
09cc09cc09cc09cc0ab70ab70ab70ab70ab70ab70ab70ab70ab70ab70ab7
0ab70ab70ab70b4c0b4c0b4c0b4c0b4c0b4c0b4c0b4c0c290c290cc40cc4
0cc40cc40d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f
0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f
0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f
0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f0d8f
0d8f0d8f0d8f0d8f0d8f0de30de30de30de30de30de30de30de30de30e0f
0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0e0f0ed0
0f560f560f560f560f560f560f560fc80fc80fc80fc80fc80fc80fc80fc8
0fc80fc80fc80fc810691069106910e710e710e710e711b911b911b911b9
11b911b912ba12ba12ba12ba13501350135013501350135c135c135c135c
135c135c135c135c135c13d314831483148f148f148f148f148f148f148f
148f148f154c15c715c715c715c715c715c715c715c715c715c715c715c7
15c715c715c715c715c715c715c715c715c715c715c715c715c715c715c7
15c715c715c716361636169316f9175c175c175c175c179f179f179f179f
181f187518be19281928197b19f11a4a1aa31aa31aa31aa31aa31aa31aa3
1aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa3
1aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa3
1aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31aa3
1aa31aa31aa31aa31aa31aa31aa31aa31aa31aa31ac71aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb1aeb
1aeb1aeb1aeb1b391b391b391b391b391b391b391b861b861b861b861b86
1b861b861b861b861b861b861b861b861b861b861b861b861b861b861b86
1b861b861b861b861b861b861b861b861b861b861b861b861b861b861b86
1b861b861b861b861b861b861b861b861b861b861b861b861b861b861b86
1b861b861b861b861b861b861b861b861b861b861b861b861b861b861b86
1b861b861b861b861b861bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd51bd5
1ce71ce71ce71ce71ce71ce71ce71ce71ce71ce71ce71ce71ce71ce71ce7
1ce71ce71ce71ce71d531d5b1d5b1d5b1d631d631d631d631d631d631d6b
1d6b1d6b1d6b1d6b1d731dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee
1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1dee1e331e331e33
1eab1eab1eab1eab1eab1eab1f0d1f0d1f0d1f0d1f0d1f0d1f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f801f801f801f801f801f801f801f801f801f801f801f801f801f80
1f801f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f911f911f911f911f911f91
1f911f911f911f911f911f911f911f911f911f910000000100001b2a0093
00100078000300020010002f006000000cf816e1000200010000002d0222
0000000300000000021000000000000300000001000e0210000000030000
0002000804d60000000300000003002e04b00000000300000004001804c6
0000000300000005001804de0000000300000006001804f6000000030000
00070076050e0000000300000008002a0592000000030000000900200796
000000030000000a02a00210000000030000000b005607b6000000030000
000c002a080c000000030000000d0e060836000000030000000e004a07b6
00010000000000000108163c000100000000000100071744000100000000
0002000418a70001000000000003001718940001000000000004000c189f
0001000000000005000c18ab0001000000000006000c18b7000100000000
0007003b18c30001000000000008001516430001000000000009001018fe
000100000000000a01501744000100000000000b002b190e000100000000
000c00151939000100000000000d0703194e000100000000000e0025190e
0003000104090000021205840003000104090001000e0210000300010409
0002000804d60003000104090003002e04b00003000104090004001804c6
0003000104090005001804de0003000104090006001804f6000300010409
00070076050e0003000104090008002a0592000300010409000900200796
000300010409000a02a00210000300010409000b005607b6000300010409
000c002a080c000300010409000d0e182051000300010409000e004a07b6
00a9002000320030003100380020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00430061006c006900620072
0069002000690073002000610020006d006f006400650072006e00200073
0061006e0073002000730065007200690066002000660061006d0069006c
00790020007700690074006800200073007500620074006c006500200072
006f0075006e00640069006e006700730020006f006e0020007300740065
006d007300200061006e006400200063006f0072006e006500720073002e
002000490074002000660065006100740075007200650073002000720065
0061006c0020006900740061006c006900630073002c00200073006d0061
006c006c00200063006100700073002c00200061006e00640020006d0075
006c007400690070006c00650020006e0075006d006500720061006c0020
0073006500740073002e0020004900740073002000700072006f0070006f
007200740069006f006e007300200061006c006c006f0077002000680069
0067006800200069006d007000610063007400200069006e002000740069
006700680074006c007900200073006500740020006c0069006e00650073
0020006f0066002000620069006700200061006e006400200073006d0061
006c006c0020007400650078007400200061006c0069006b0065002e0020
00430061006c0069006200720069002700730020006d0061006e00790020
00630075007200760065007300200061006e006400200074006800650020
006e00650077002000720061007300740065007200690073006500720020
007400650061006d00200075007000200069006e00200062006900670067
00650072002000730069007a0065007300200074006f0020007200650076
00650061006c002000610020007700610072006d00200061006e00640020
0073006f006600740020006300680061007200610063007400650072002e
004d006900630072006f0073006f00660074003a002000430061006c0069
00620072006900200042006f006c006400560065007200730069006f006e
00200036002e0032003300430061006c0069006200720069002d0042006f
006c006400430061006c0069006200720069002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000740068
00650020004d006900630072006f0073006f00660074002000670072006f
007500700020006f006600200063006f006d00700061006e006900650073
002e00a9002000320030003100380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e000d000a0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
00700073003a002f002f0064006f00630073002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f00610062006f007500740068007400740070003a
002f002f006c00750063006100730066006f006e00740073002e0063006f
006d004d006900630072006f0073006f0066007400200073007500700070
006c00690065006400200066006f006e0074002e00200059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e007400200074006f0020006300720065006100740065002c00200064
006900730070006c00610079002c00200061006e00640020007000720069
006e007400200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
0020006c006900630065006e007300650020007400650072006d00730020
006f00720020007400650072006d00730020006f00660020007500730065
002c0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000700072006f0064007500630074002c002000730065
00720076006900630065002c0020006f007200200063006f006e00740065
006e007400200069006e0020007700680069006300680020007400680069
007300200066006f006e0074002000770061007300200069006e0063006c
0075006400650064002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e00200041006e00790020006f00740068006500720020
007500730065002000690073002000700072006f00680069006200690074
00650064002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c6456657273696f6e20362e323343616c
696272692d426f6c6443616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f7468747470733a
2f2f646f63732e6d6963726f736f66742e636f6d2f7479706f6772617068
792f61626f7574687474703a2f2f6c75636173666f6e74732e636f6d4d69
63726f736f667420737570706c69656420666f6e742e20596f75206d6179
20757365207468697320666f6e7420746f206372656174652c2064697370
6c61792c20616e64207072696e7420636f6e74656e74206173207065726d
697474656420627920746865206c6963656e7365207465726d73206f7220
7465726d73206f66207573652c206f6620746865204d6963726f736f6674
2070726f647563742c20736572766963652c206f7220636f6e74656e7420
696e207768696368207468697320666f6e742077617320696e636c756465
642e20596f75206d6179206f6e6c792028692920656d6265642074686973
20666f6e7420696e20636f6e74656e74206173207065726d697474656420
62792074686520656d62656464696e67207265737472696374696f6e7320
696e636c7564656420696e207468697320666f6e743b20616e6420286969
292074656d706f726172696c7920646f776e6c6f6164207468697320666f
6e7420746f2061207072696e746572206f72206f74686572206f75747075
742064657669636520746f2068656c70207072696e7420636f6e74656e74
2e20416e79206f74686572207573652069732070726f686962697465642e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d004d0069006300
72006f0073006f0066007400200073007500700070006c00690065006400
200066006f006e0074002e00200059006f00750020006d00610079002000
75007300650020007400680069007300200066006f006e00740020007400
6f0020006300720065006100740065002c00200064006900730070006c00
610079002c00200061006e00640020007000720069006e00740020006300
6f006e00740065006e00740020006100730020007000650072006d006900
7400740065006400200062007900200074006800650020006c0069006300
65006e007300650020007400650072006d00730020006f00720020007400
650072006d00730020006f00660020007500730065002c0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
700072006f0064007500630074002c002000730065007200760069006300
65002c0020006f007200200063006f006e00740065006e00740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e0074002000770061007300200069006e0063006c007500640065006400
2e00200059006f00750020006d006100790020006f006e006c0079002000
280069002900200065006d00620065006400200074006800690073002000
66006f006e007400200069006e00200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
79002000740068006500200065006d00620065006400640069006e006700
20007200650073007400720069006300740069006f006e00730020006900
6e0063006c007500640065006400200069006e0020007400680069007300
200066006f006e0074003b00200061006e00640020002800690069002900
2000740065006d0070006f0072006100720069006c007900200064006f00
77006e006c006f006100640020007400680069007300200066006f006e00
7400200074006f002000610020007000720069006e007400650072002000
6f00720020006f00740068006500720020006f0075007400700075007400
2000640065007600690063006500200074006f002000680065006c007000
20007000720069006e007400200063006f006e00740065006e0074002e00
200041006e00790020006f00740068006500720020007500730065002000
690073002000700072006f0068006900620069007400650064002e000d00
0a000d000a00540068006500200066006f006c006c006f00770069006e00
670020006c006900630065006e00730065002c0020006200610073006500
640020006f006e00200074006800650020004d004900540020006c006900
630065006e00730065002000280068007400740070003a002f002f006500
6e002e00770069006b006900700065006400690061002e006f0072006700
2f00770069006b0069002f004d00490054005f004c006900630065006e00
7300650029002c0020006100700070006c00690065007300200074006f00
200074006800650020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200066006f007200
20004200690062006c006900630061006c00200048006500620072006500
770020201c004c00610079006f007500740020004c006f00670069006320
1d0020006100730020006a006f0069006e0074006c007900200064006500
760065006c006f007000650064002000620079002000520061006c007000
68002000480061006e0063006f0063006b00200061006e00640020004a00
6f0068006e00200048007500640073006f006e002e0020000d000a000d00
0a005000650072006d0069007300730069006f006e002000690073002000
68006500720065006200790020006700720061006e007400650064002c00
2000660072006500650020006f0066002000630068006100720067006500
2c00200074006f00200061006e007900200070006500720073006f006e00
20006f0062007400610069006e0069006e00670020006100200063006f00
7000790020006f006600200074006800650020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
480065006200720065007700200061006e00640020006100730073006f00
630069006100740065006400200064006f00630075006d0065006e007400
6100740069006f006e002000660069006c00650073002000280074006800
650020201c004c00610079006f007500740020004c006f00670069006300
200053006f006600740077006100720065201d0029002c00200074006f00
20006400650061006c00200069006e00200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
7700610072006500200077006900740068006f0075007400200072006500
73007400720069006300740069006f006e002c00200069006e0063006c00
7500640069006e006700200077006900740068006f007500740020006c00
69006d00690074006100740069006f006e00200074006800650020007200
69006700680074007300200074006f0020007500730065002c0020006300
6f00700079002c0020006d006f0064006900660079002c0020006d006500
7200670065002c0020007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c0020007300750062006c00
6900630065006e00730065002c00200061006e0064002f006f0072002000
730065006c006c00200063006f00700069006500730020006f0066002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f006600740077006100720065002c00200061006e006400
200074006f0020007000650072006d006900740020007000650072007300
6f006e007300200074006f002000770068006f006d002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f0066007400770061007200650020006900730020006600750072006e00
69007300680065006400200074006f00200064006f00200073006f002c00
20007300750062006a00650063007400200074006f002000740068006500
200066006f006c006c006f00770069006e006700200063006f006e006400
6900740069006f006e0073003a000d000a000d000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
20006e006f007400690063006500200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c0020006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f007200200073007500620073007400
61006e007400690061006c00200070006f007200740069006f006e007300
20006f006600200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002e00
0d000a000d000a00540048004500200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002700
4100530020004900530027002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f002000540048004500
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054002e00200049004e0020004e00
4f0020004500560045004e00540020005300480041004c004c0020005400
48004500200041005500540048004f005200530020004f00520020004300
4f005000590052004900470048005400200048004f004c00440045005200
530020004200450020004c004900410042004c004500200046004f005200
200041004e005900200043004c00410049004d002c002000440041004d00
410047004500530020004f00520020004f00540048004500520020004c00
49004100420049004c004900540059002c00200057004800450054004800
45005200200049004e00200041004e00200041004300540049004f004e00
20004f004600200043004f004e00540052004100430054002c0020005400
4f005200540020004f00520020004f005400480045005200570049005300
45002c002000410052004900530049004e0047002000460052004f004d00
2c0020004f005500540020004f00460020004f005200200049004e002000
43004f004e004e0045004300540049004f004e0020005700490054004800
2000540048004500200053004f0046005400570041005200450020004f00
52002000540048004500200055005300450020004f00520020004f005400
48004500520020004400450041004c0049004e0047005300200049004e00
2000540048004500200053004f004600540057004100520045002e000d00
0a0000>
<b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[16163 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 316 18 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>IAAAAA+Calibri-Bold AddT42Char 
3 5016 258 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>IAAAAA+Calibri-Bold AddT42Char 
3 7198 373 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>IAAAAA+Calibri-Bold AddT42Char 
3 7852 381 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>IAAAAA+Calibri-Bold AddT42Char 
3 8080 393 <0002007efe95040003d7002a003d0094b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022711140e0223222e
023511343e0233321e0215153e0333321e0205342e0223220e0207111616
33323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e2919
0a274b4e532f628a5728fefa11294332193133361e35603431452c1501ed
77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a6928
3d29144d86b277396952310f223628feda4349325166>IAAAAA+Calibri-Bold AddT42Char 
3 8402 396 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>IAAAAA+Calibri-Bold AddT42Char 
3 8654 400 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>IAAAAA+Calibri-Bold AddT42Char 
3 9588 410 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>IAAAAA+Calibri-Bold AddT42Char 
3 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>IAAAAA+Calibri-Bold AddT42Char 
IAAAAA+Calibri-Bold /CharStrings get begin
/C 18 def
/a 258 def
/m 373 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
end
IAAAAA+Calibri-Bold /Encoding get
dup 67 /C put
dup 97 /a put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/MKLSCA+Calibri-Bold /IAAAAA+Calibri-Bold findfont ct_VMDictPut
/MKLSCA+Calibri-Bold*1 
[67{/.notdef}rp /C 29{/.notdef}rp /a 11{/.notdef}rp /m /.notdef /o 
/p /.notdef /r /s /t 139{/.notdef}rp]
MKLSCA+Calibri-Bold nf
MKLSCA+Calibri-Bold*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
826.312 218.64 mo
(Comparators)
[10.4778 10.6558 16.1028 10.6361 9.78448 6.55591 9.48737 6.59564 10.6558 6.87274 0 ]xsh
gsave
44.5281 484.239 mo
973.996 484.239 li
973.996 37.162 li
44.5281 37.162 li
cp
eclp
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCA+Calibri-Bold gcheck setglobal} if

3 0 3 <> MKLSCA+Calibri-Bold AddT42Char 
3 818 39 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>MKLSCA+Calibri-Bold AddT42Char 
3 1596 90 <0002008dfffa044d050e00360044009bb10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1aed2b12392fed2b39012fed32d4edd4ed1112393930311bb12e10b8ffe8
b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b6402151
1755055500183f3f3f1aed2b12392fed2b3930315925140e0223222e0227
032e03232311140e0223222e023511343633213216171e0315140e02071e
031717161601342627262623231133323e02044d081e3a322a321d0c0474
152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e3c1d
332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b110c01
21314c331afe130a100a06060a100a04972c2704030b3657774d416b543e
130e2839492eff262303644058120506fe911b314400>MKLSCA+Calibri-Bold AddT42Char 
3 6536 286 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>MKLSCA+Calibri-Bold AddT42Char 
3 7584 374 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>MKLSCA+Calibri-Bold AddT42Char 
MKLSCA+Calibri-Bold /CharStrings get begin
/space 3 def
/G 39 def
/R 90 def
/e 286 def
/n 374 def
end
MKLSCA+Calibri-Bold /Encoding get
dup 32 /space put
dup 71 /G put
dup 82 /R put
dup 101 /e put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCA+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 10{/.notdef}rp /R 
14{/.notdef}rp /a 3{/.notdef}rp /e 7{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t 139{/.notdef}rp]
MKLSCA+Calibri-Bold nf
MKLSCA+Calibri-Bold*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
826.312 254.219 mo
(Ramp Generator)
[11.1647 9.71704 16.1223 10.649 4.48163 12.5527 9.97491 10.649 9.97498 6.62335 9.479 6.60364 
10.6687 0 ]xsh
grestore
0 .356603 .845365 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCA+Calibri-Bold gcheck setglobal} if
3 608 24 <0002008d000004c0050e0012001f006fb10102435558bf0013029b000000
1a029200090018ffe8b40b0f014c18b8012e40090e511b180b0f014c1bb8
0154b240055400183f1aed2b3fed2b012fedd4ed30311bb90018ffe8b40b
0f014c18b8012e40090e511b180b0f014c1bb80154b240055400183f1aed
2b3fed2b30315901140e0223212226351134363321321e0205342e022323
1133323e0204c05daef9acfecb212d2d21014cadf1a556fef02b5f957985
896c946331029ab2fda04b272c04682c27519feaa35c9e7441fc903871a8
>MKLSCA+Calibri-Bold AddT42Char 
3 1948 94 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>MKLSCA+Calibri-Bold AddT42Char 
3 5486 272 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>MKLSCA+Calibri-Bold AddT42Char 
3 6942 349 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>MKLSCA+Calibri-Bold AddT42Char 
3 10904 437 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>MKLSCA+Calibri-Bold AddT42Char 
MKLSCA+Calibri-Bold /CharStrings get begin
/D 24 def
/S 94 def
/c 272 def
/i 349 def
/u 437 def
end
MKLSCA+Calibri-Bold /Encoding get
dup 68 /D put
dup 83 /S put
dup 99 /c put
dup 105 /i put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCA+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 2{/.notdef}rp /G 10{/.notdef}rp 
/R /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i 3{/.notdef}rp /m /n /o /p /.notdef 
/r /s /t /u 138{/.notdef}rp]
MKLSCA+Calibri-Bold nf
MKLSCA+Calibri-Bold*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
826.312 289.819 mo
(CDS Circuits)
[10.4778 12.4782 9.36865 4.47626 10.4778 4.91211 6.83319 8.27911 10.6361 4.95172 6.87292 0 
]xsh
125.163 424.146 mo
134.819 227.835 li
131.522 227.675 li
121.866 423.985 li
cp
.61709 .780514 0 0 cmyk
f
104.068 421.975 mo
124.618 421.975 li
124.618 425.27 li
104.068 425.27 li
cp
f
373.572 189.899 mo
373.572 194.841 li
372.342 194.841 li
372.342 189.899 li
cp
373.572 198.544 mo
373.572 203.486 li
372.342 203.486 li
372.342 198.544 li
cp
373.572 207.2 mo
373.572 212.141 li
372.342 212.141 li
372.342 207.2 li
cp
373.572 215.845 mo
373.572 220.787 li
372.342 220.787 li
372.342 215.845 li
cp
373.572 224.49 mo
373.572 229.432 li
372.342 229.432 li
372.342 224.49 li
cp
373.572 233.135 mo
373.572 238.077 li
372.342 238.077 li
372.342 233.135 li
cp
373.572 241.791 mo
373.572 246.732 li
372.342 246.732 li
372.342 241.791 li
cp
373.572 250.436 mo
373.572 255.377 li
372.342 255.377 li
372.342 250.436 li
cp
373.572 259.081 mo
373.572 264.023 li
372.342 264.023 li
372.342 259.081 li
cp
373.572 267.726 mo
373.572 272.668 li
372.342 272.668 li
372.342 267.726 li
cp
373.572 276.382 mo
373.572 281.323 li
372.342 281.323 li
372.342 276.382 li
cp
373.572 285.027 mo
373.572 289.968 li
372.342 289.968 li
372.342 285.027 li
cp
373.572 293.672 mo
373.572 298.614 li
372.342 298.614 li
372.342 293.672 li
cp
373.572 302.317 mo
373.572 307.259 li
372.342 307.259 li
372.342 302.317 li
cp
373.572 310.973 mo
373.572 315.914 li
372.342 315.914 li
372.342 310.973 li
cp
373.572 319.618 mo
373.572 324.559 li
372.342 324.559 li
372.342 319.618 li
cp
373.572 328.263 mo
373.572 333.205 li
372.342 333.205 li
372.342 328.263 li
cp
373.572 336.908 mo
373.572 341.85 li
372.342 341.85 li
372.342 336.908 li
cp
.899962 .828183 .680751 .520256 cmyk
f
636.459 350.425 mo
636.479 355.367 li
635.239 355.367 li
635.229 350.425 li
cp
636.499 359.071 mo
636.519 364.012 li
635.279 364.022 li
635.259 359.081 li
cp
636.529 367.716 mo
636.549 372.657 li
635.309 372.667 li
635.289 367.726 li
cp
636.559 376.371 mo
636.579 381.313 li
635.339 381.313 li
635.319 376.371 li
cp
636.599 385.015 mo
636.609 389.957 li
635.379 389.962 li
635.359 385.02 li
cp
636.629 393.663 mo
636.649 398.605 li
635.409 398.61 li
635.389 393.668 li
cp
636.659 402.311 mo
636.679 407.252 li
635.439 407.257 li
635.419 402.316 li
cp
636.689 410.959 mo
636.709 415.901 li
635.479 415.905 li
635.459 410.963 li
cp
636.729 419.606 mo
636.749 424.548 li
635.509 424.553 li
635.489 419.611 li
cp
636.759 428.254 mo
636.779 433.196 li
635.539 433.2 li
635.519 428.258 li
cp
636.789 436.902 mo
636.809 441.843 li
635.569 441.848 li
635.559 436.907 li
cp
636.829 445.549 mo
636.839 450.491 li
635.609 450.495 li
635.589 445.554 li
cp
636.859 454.197 mo
636.879 459.131 li
635.639 459.136 li
635.619 454.202 li
cp
f
590.164 457.11 mo
586.923 465.585 li
592.835 465.585 li
cp
589.774 454.486 mo
592.245 454.486 li
596.406 467.051 li
596.406 467.746 li
584.712 467.746 li
584.712 467.032 li
cp
.997223 .918425 .647791 .507591 cmyk
ef
gsave
44.5281 484.239 mo
973.996 484.239 li
973.996 37.162 li
44.5281 37.162 li
cp
eclp
%ADOBeginSubsetFont: KAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f328821eb1d000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c796625e47cb50000d1bc00004aa268656164fa71cec900001a800000
00366868656112c41fa400001ab800000024686d74789174285f00001adc
000054546c6f6361fcdfe92e00006f3000003b7e6d61787027ff11d80000
aab0000000206e616d65030148160000aad0000015c370726570664ecf85
0000c0940000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00006ff420024ff02000000000000004d53202000c00000
20830639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006fd719b9d5c595f0f3cf5001b080000000000b9e6
983d00000000d630eee4f434ec4a16f118ef000000090002000000000000
00010000063bfe390161175af434fda416f1000100000000000000000000
000000000c6c054400be0000000001c3000001c3000004fc000600000000
0480007700000000049a00790000000000000000057e0079000000000000
000005090079044b0079068600750000000000000000048b007900000000
0000000003f8007000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004700069000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034f
00530000000002b500250000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000045dfffe0000000003ef006904aa006a04170068000000000000
000004e3006800000000000000000476006803b7006805bb006500000000
000000000433006800000000046a006803a4005e04390039000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000034e005d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000284004e00000000021c002e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000024900c0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000002bf
002b03ae003103b000330000000000000000000000000000000000000000
0000000000000000043600b10436006f0436008100000000000000000000
00000000000000000000000000000000000002e5002c03e0002903e3003f
00000000000000000000000000000000000000000000000000000000046e
00b2046e0081046e00900000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000342007e03420063034200730000000000000000000000000000
000000000000000000000000000003b00015000000000351006400000000
035b005d000000000000000003f6005d000000000000000003af005d031a
005d04af005d00000000000000000357005d000000000000000002fa0062
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004a100b704a10088
04a1009d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000005970014
000000000509008e00000000051f008a00000000000000000613008a0000
000000000000059d008a04c0008a0731008800000000000000000515008a
0000000000000000047c008a000000000000000000000000000000000000
000000000000000000000000000000000000000000000501008200000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003c6006b000000000321003a
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c200b804c2
009004c200a8000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000060d
002200000000057100a40000000005810099000000000000000006800099
0000000000000000060b00990517009907af00990000000000000000057b
0099000000000000000004e200a100000000000000000000000000000000
000000000000000000000000000000000000000000000000056c00990000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004210080000000000376
004b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000>
<000000760076007600760110011001a401a4024f024f024f02e502e502e5
039503fd049f049f049f05140514051405cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
0663066306630663066306630663066306630663066306630663066306ee
06ee07660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
0766076607660766076607660766076607dc07dc08430899092209220922
0995099509950a2c0a7c0af70af70af70b610b610bed0c630cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90d380d380d380d380d380d380d380d380d380d380d380d38
0d380d380d990d990df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e99
0f090f9e0f9e0f9e0f9e0f9e0f9e0f9e0f9e0fe8105810e910e910e910e9
10e910e910e910e91133119d12201220122012201220122012201220127b
130513a713a713a713a713a713a713a713a713b513c313d113d113d113d1
13d113d113d113d113d113d113d113d113d113e413f7140a140a140a140a
140a140a140a140a140a140a140a140a140a1489151a15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15dc15ea15f815f815f815f815f8
15f815f815f8165f165f16ac16ac17231723172317a917a917a9183c1888
19111911191119741974197419df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df1a2b1a841ae31ae31ae31ae31ae31ae31ae31ae3
1ae31ae31ae31ae31ae31ae31b351b351b8c1b8c1bfe1bfe1bfe1c6d1c6d
1c6d1cff1d441dc61dc61dc61e1e1e1e1e1e1e901e901e901e901e901e90
1e901e901e901e901e901f141f141f141f141f141f141f141f141f141f14
1f141f141f141f141f771f771fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc82008205f
20c620c620c620c620c620c620c620c620c620c620c620c620c620c62118
21182169216921d421d421d4224c224c224c22cd231023832383238323df
23df23df2445244524452445244524452445244524452445244524b424b4
24b424b424b424b424b424b424b424b424b424b424b424b4250a250a2551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
25512551255125512551255125512551255125510000000100001dbe0050
0004002e000100020010002f0086000009a41128000100010000002f023a
000000000000000d03880000000000000000000e006c0388000000030000
0000006403f400000003000000010018046e0000000300000002000e0486
0000000300000003002e045800000003000000040018046e000000030000
0005001804940000000300000006001604ac0000000300000007007604c2
0000000300000008002a0402000000030000000900460538000000030000
000a070a057e000000030000000b00560c88000000030000000c00280cde
000000030000000d03880000000000030000000e006c0388000100000000
000000320d060001000000000001000c0d43000100000000000200070d4f
000100000000000300170d380001000000000004000c0d43000100000000
0005000c0d560001000000000006000b0d620001000000000007003b0d6d
000100000000000800150d0d000100000000000900230da8000100000000
000a03850dcb000100000000000b002b1150000100000000000c0014117b
000100000000000d01c4118f000100000000000e00361353000300010409
0000006403f400030001040900010018046e0003000104090002000e0486
0003000104090003002e045800030001040900040018046e000300010409
0005001804940003000104090006001604ac0003000104090007007604c2
0003000104090008002a0402000300010409000900460538000300010409
000a070a057e000300010409000b00560c88000300010409000c00280cde
000300010409000d03880000000300010409000e006c0388004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020007200690067
006800740073002000720065007300650072007600650064002e004d0069
00630072006f0073006f00660074003a002000430061006d006200720069
00610020004d0061007400680052006500670075006c0061007200560065
007200730069006f006e00200036002e0039003900430061006d00620072
00690061004d00610074006800430061006d006200720069006100200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004d006f006e006f007400790070006500200049
006d006100670069006e006700200061006e00640020005400690072006f
002000540079007000650077006f0072006b007300430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f007700770077002e0066006f006e00740073002e0063006f006da920
32303137204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e4d6963726f736f66743a2043
616d62726961204d617468526567756c617256657273696f6e20362e3939
43616d627269614d61746843616d6272696120697320612074726164656d
61726b206f6620746865204d6963726f736f66742067726f7570206f6620
636f6d70616e6965732e4d6f6e6f7479706520496d6167696e6720616e64
205469726f2054797065776f726b7343616d627269612068617320626565
6e2064657369676e656420666f72206f6e2d73637265656e207265616469
6e6720616e6420746f206c6f6f6b20676f6f64207768656e207072696e74
656420617420736d616c6c2073697a65732e204974206861732076657279
206576656e2073706163696e6720616e642070726f706f7274696f6e732e
20446961676f6e616c20616e6420766572746963616c20686169726c696e
657320616e6420736572696673206172652072656c61746976656c792073
74726f6e672c207768696c6520686f72697a6f6e74616c20736572696673
2061726520736d616c6c20616e6420696e74656e6420746f20656d706861
73697a65207374726f6b6520656e64696e67732072617468657220746861
6e207374616e64206f7574207468656d73656c7665732e20546869732070
72696e6369706c65206973206d6f7374206e6f7469636561626c6520696e
20746865206974616c69637320776865726520746865206c6f7765726361
7365206368617261637465727320617265207375626475656420696e2073
74796c6520746f206265206174207468656972206265737420617320656c
656d656e7473206f6620776f72642d696d616765732e205768656e204361
6d62726961206973207573656420666f722063617074696f6e7320617420
73697a6573206f76657220323020706f696e742c207468652020696e7465
722d6368617261637465722073706163696e672073686f756c6420626520
736c696768746c79207265647563656420666f7220626573742072657375
6c74732e205468652064657369676e2069736e2774206a75737420696e74
656e64656420666f7220627573696e65737320646f63756d656e74733a20
54686520726567756c61722077656967687420686173206265656e206578
74656e64656420776974682061206c6172676520736574206f66206d6174
6820616e6420736369656e63652073796d626f6c732e2054686520477265
656b20616e6420437972696c6c696320686173206265656e206465736967
6e656420756e64657220636c6f7365207375706572766973696f6e206f66
20616e20696e7465726e6174696f6e616c207465616d206f662065787065
7274732c2077686f2061696d656420746f20736574206120686973746f72
6963616c206e6577207374616e6461726420696e206d756c74692d736372
69707420747970652064657369676e2e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f7777772e666f6e74732e636f6d4d6963726f736f66742073
7570706c69656420666f6e742e20596f75206d6179207573652074686973
20666f6e7420746f206372656174652c20646973706c61792c20616e6420
7072696e7420636f6e74656e74206173207065726d697474656420627920
746865206c6963656e7365207465726d73206f72207465726d73206f6620
7573652c206f6620746865204d6963726f736f66742070726f647563742c
20736572766963652c206f7220636f6e74656e7420696e20776869636820
7468697320666f6e742077617320696e636c756465642e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e20416e79206f7468
6572207573652069732070726f686962697465642e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f6e
74732f64656661756c742e6173707800b9002001feb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f0b40918014a20b801efb40918014a20
b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801eb
b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918
014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20
b801e0b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801a0b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018ab40918014a20b80188b40918014a20b80187
b40918014a20b80186b40918014a20b8015bb40918014a20b8015ab40918
014a20b80159b40918014a20b80158b40918014a20b80154b40918014a20
b80150b40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80136b40918014a20b80130b40918014a20b8012fb40918
014a20b8012db40918014a20b8012cb40918014a20b80109b40918014a20
b80107b40918014a20b8010540ff0918014a20f40918014a20f20918014a
20f10918014a20f00918014a20ef0918014a20ed0918014a20ec0918014a
20ea0918014a20e50918014a20e40918014a20e30918014a20e10918014a
20de0918014a20da0918014a20d80918014a20d30918014a20cd0918014a
20cc0918014a20ca0918014a20c90918014a20c80918014a20c60918014a
20c40918014a20c20918014a20c00918014a20bf0918014a20bd0918014a
20b30918014a20b10918014a20af0918014a20a50918014a20a40918014a
20a00918014a208e0918014a208d0918014a208c0918014a208b0918014a
208a0918014a20890918014a20850918014a20840918014a208309180140
3e4a20800918014a207f0918014a207e0918014a207d0918014a20620918
014a20510918014a20500918014a20480918014a20420918014a200e0918
014a0f41630441001f0441002f0441003f0441004f0441005f0441006f04
41007f0441008f0441009f044100af044100bf044100cf0441000d005f03
ea0001008003f4009003f400a003f400b003f400c003f400d003f400e003
f400f003f40008002f0433003f0433004f0433005f0433006f0433007f04
33008f0433009f043300af043300bf0433000a001f0434002f0434003f04
34004f0434005f0434006f0434007f0434000700cf042300df042300ef04
230003000f0423001f0423003f0423005f0423009f0423402305f0e201b0
fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ffe0fff0ff0470
410a0425000100c0042500d0042500e0042500f00425400c04e0bef0be02
e0bef0be020f41110421003f04210002001002580001000f025800e00258
0002000f040a0001000f0408b4010f26010f411b04070001000f04060001
007f02170001000f029c001f029c002f029c003f029c004f029c005f029c
000600df029c00ef029c00ff029c405303dfe016171cd4d516171c7b7c16
1b7b7c19d1d216171c767716171c6d7016171c6c6f16171c6b6e161b6b6e
7f721a747514151c676a14151c666914151c6568141b656885711a197316
7a431921794319211941310292009902920002001c0292002c0292000202
99029a029b000c028d028e028f000c028a028b028c000c001b0299008b02
990002000f0299009f029900bb029900db0299000402a5028b02a7000d02
9f029a02a1000d029c028e029e000dffe8028eb2142339b9ffe8029ab214
2339411a0282027d0008002b0281027c0005002b027e027a0004002b027d
027a0004002b027a02570005002b027702670005002b02670257b2052b20
b80270b21b2039bd027202570004002b026e0257b2042b20b80257b33133
3909414102710019027100aa025700b8025700040069027100da025700e8
02570003028402790006002b028002790004002b027f02790008002b027b
02790008002b027902560006002b027802660000002b027602660008002b
027502660008002b027302660008002b026602560006002b027402560000
002b027302560000002b026f0256b2072b29415002560001008602560001
025d025e025f000c025102520253000c024e024f0250000c000b024e000b
0251000a025d003b024e00590251007602510075025d009b024e00b5025d
00d9024e000a0269024f026b000d0263025e0265000d026002520262000d
0269003c0263003c0260003c025d003c0251003c024e003c0244023c0005
002b024302110002002b0240023c0005002b023e02110004002b023d0211
b2042b464115023c00010046023c00c6023c0002023b02110007002b0239
02110006002b023702110004002b02210211b2072b20b80233b213163941
16022f02110004002b022e02110004002b022d02110005002b022c021100
04002b022b02110004002b022a0211b2052b474142021100010005021100
a502110002003b0233004b02330064021100740211000402420210000700
2b024102100005002b023f02100002002b023a02100007002b0238021000
07002b023602100007002b023502100007002b022002100007002b023402
100005002b023102100005002b023002100007002b022902100007002b02
280210b2072b8a416e02100001001a021000b90232000202170218021900
0c020b020c020d000c02080209020a000c000b0208000b020b000a021700
3b02080059020b0076020b00750217009b020800b5021700d90208000a02
2302090225000d021d0218021f000d021a020c021c000d0223003c021d00
3c021a003c0217003c020b003c0208003c0153014d0002002b014e014d00
02002b0156015c0004002b0155015c0004002b0157015c0002002b01da01
d4000a002b01d801d4000a002b01e501e00005002b01e101e00005002b01
e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b801ebb2090a39
b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f203940b80103
b22c2c39ba010301000100b21f2223b901030100b3c01e1e23ba01030100
0100b21d1d23b901030100b3c01c1c23ba010301000100b21b1b23b90103
0100b3c0141a23b901030100b3800b1323b901030100b340090a23b90102
0101b340508b23b901010100b340508b23410a01020100004f001f010101
00004f001fffc00100b2505539b9ffc00100b323233940b80100b71d1e39
40e81b1b39b8ffc0b4e724253956b80108401301ddd8052b3bd64bd60240
b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a012b9b9a052b
9a91042ba999042b9992032b40c52c31399291032b889198910209631863
c7630320630d0f39b8fff0b4471f2539cbb8010a401c019895012b379e01
9695022b1897262a3917970110953f4039d99501bc0136012c0003002b01
30b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd042bbc014c01
4a0003002b014ab27f052bb9015b0154b2042b0f41190154001f01540002
018601880002002b018701880004002b018901880004002b0188018f0003
002b018e018f0004002b018fb385052b3f410c01a0000101ce01cc000300
2b01d201cc0006002b01d101ccb2062b40b80107b2323239b80107b2af03
2bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8042b40c82122
39b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a39b8ffc04023
bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a2a39cdcc052b
40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea012bb80109b2da
032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1c0052b40c03d
3d39c0af042bd3af052baf7d052b20da121639c5bd01208e01108e01b8ff
c0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c8d052b8d8a04
2b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a0042bef85052b40
ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a0454739b8ffc0b3a0
383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394313139b8ffc0
40d480181a39817f012b7e7d052b7d7f052bed7f052bd87f017f85251f88
85012b8785012b8485052b8385052b298539854985036685014685013685
012685011b37151836151535151234150f33150c3215093115063015032f
15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f22230e24230f
1e1f0e201f0f00051005023c3d0e0b3c743c993c030f10110c090a0b0c06
07080c0304050c0001020c0603641f702a010f2a010b0f4b0f020b003b00
44037403ab00db0f060b000b030b0f3b003b0959035b0976039b009b0999
0fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d1204140d2ff9
6ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8010bb22ff92f
ba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c263c243c223c
203c1e3c1b3c183c153c123c0f3c093c063c033c003c035050335401b012
4b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58
b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58b801
19b101018e851bb900010100b04b60858d592b2b1d42b0644b5358b20380
801d4259b0324b5358b20390901d4259004bb03251b01b23422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73747573742b
2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c4560442b2b73
2b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b2b2b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b2b2b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b74742b2b2b
2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b
0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b2b2b2b
2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b2b2b2b
2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b
2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b101322b4bb0505242b002435c4bb064524bb01e505b60b01a23424bb0c8
524bb036505bb00e23420073747373737373737374737374737573737475
7373747373737373b100024354b102024354b1060243545b5b58416301fe
006401fa006401f9006401f8006401f7006401f6006401f0006401ef0064
01ee006401ed006401ec006401eb006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401d3006401d2006401d1006401cf0064
01ce006401cd006401cc006401a00064018f0064018e0064018a00640188
00640187006401860064015b0064015a0064015900640158006401540064
01500064014c0064014b0064014a00640136006401300064012f0064012d
0064012c006401090064010700640105406964f464f264f164f064ef64ed
64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c964c8
64c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d648c
648b648a64896485648464836480647f647e647d64626451645064486442
640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[16273 2835 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3548 150 <00010025fff002c204b3001c0097b0852b58403117100314201340262f48
13400c0f481310971716020a0f06010c030607400a00a7441b0aee070f13
1409091e07050b851a2fe1393211392fd6cd003fed322b001a1810cd5f5e
5d11393ffdd62b2b1a19cd2b31301b4023141340262f4813400c0f481317
10976c1716020a0f06010c030607401b070aee6c070f00183f2b321a10cd
5f5e5d11393f2bd62b2b19cd303159133e0337331521152111141e023332
363717060623222635112325323e23140b8e0143febd102c382c2846222d
477f44817e94038a08283f5f5bf765fe436173411c211f36453e99a3022b
>KAAAAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>KAAAAA+CambriaMath AddT42Char 
KAAAAA+CambriaMath /CharStrings get begin
/g150 150 def
end
KAAAAA+CambriaMath /Encoding get
dup 116 /g150 put
pop
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath /KAAAAA+CambriaMath findfont ct_VMDictPut
/MKLSCB+CambriaMath*1 
[116{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
597.126 467.814 mo
(t)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
597.126 467.814 mo
(t) false chp
.56571 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
grestore
1 /0 /CSD get_res sepcs
.506 sep
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 2366 19 <00020079000004380555001e002b006bb0852b5840251c20032091401c1c
130705080708a644071312a64413290329911303177e24242d1f007f0c2f
e13211392fe1003fed2b2b00182f2b110033111239182f1aed2b31301b40
111c20916c1c1c13070508071329916c130300183f2b2f11331112392f2b
30315925141e02171521353e023511342e02273521321615140e02232227
353332363635342e0223220701a90d1b2e31fe493e2a0d0a17262e01f0ea
e54884b4636f3d7471934e2e5170426332fd3b4629170b31311027484a03
61453f23150d31b3b768a66a2e04533b89715673461d0400>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g19 19 def
end
MKLSCB+CambriaMath /Encoding get
dup 80 /g19 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[80{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
253.772 158.882 mo
(P)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
253.772 158.882 mo
(P) false chp
.56571 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 1182 11 <000100790000050405550038008ab0852b5840302b0f030f91402b23172b
91303006091503181718a644081712253134032232232322a6442303007f
2c0d0d3a0f2a7f1db8fff0b30f014d1d2f2be13212392f33e1003f2b1100
33111733183f332b110017332b00182f1aed2b31301b40152b0f916c2b06
09150318081712253134032232230300183f331117333f331117332f2b30
315925141e03171521353e0235112111141e02171521353e023511342e02
273521150e0315112111342626273521150e02150490060e142527fe5d37
2c11fdd40915292efe5b3e2a0d0a17262e01a52c27170b022c11283b01a3
382c10fa3a3a2316120a31310e22465301a3fe5d433e24180c3131102748
4a0361453f23150d31310b16214245fe9e01625740221031310e23465200
>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g11 11 def
end
MKLSCB+CambriaMath /Encoding get
dup 72 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[72{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
264.943 158.882 mo
(H)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
264.943 158.882 mo
(H) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 236 4 <00020006000004e90565001f002200beb0852b58404408092122050b0a20
220e2219182220212203050e051a1f1f240e1713080b2214200a030a9140
0f204f200211032020181201141e03111211a64400160e061b0512221804
003f332f17332b11001733111239182f5f5e5d1aed2b1112003939300118
2f333312392f3333111217391133331087c0c0c087c0c0c0311b4022080b
2214200a916c0f204f200211032020181201141e031100160e061b051222
180400183f332f17331117331112392f5f5e5d2b11123939305921353e02
353426272721070606151416171521353636370133011e02171501210303
1c323118100f25fe2e221a103d3ffe5538532701a19e01541825342dfcb3
01a2be310a182b24224f3181624a4c1f3c380931310970680453fba54e52
2e0b31021c028500>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g4 4 def
end
MKLSCB+CambriaMath /Encoding get
dup 65 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 
139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
278.392 158.882 mo
(A)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
278.392 158.882 mo
(A) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 2600 22 <00010070fff003950565003000e1b0852b58400f2f100e15482f2d2f0001
00000b0416b8fff0403c0e154816130018101820188018040e0318181c0b
2424041c2d04030491402d13131c031c91130418a44f170117172820ed0f
0f3028ed07073200a4302fe112392fe112392fe111392f5de1003fed2b00
183f1aed2b1112003911331239182f5f5e5d12392b1112392f5d12392b31
301b400f2f100e15482f2d2f000100000b0416b8fff040230e1548161300
18101820188018040e0318181c0b24241c2d04916c2d13131c916c130400
183f2b3f2b1139113312392f5f5e5d12392b1112392f5d12392b30315913
1e0233323635342626272e02353436363332161711232e02232206061514
1616171e0215140e0223222711d414446c55757d34767975884369cb834c
916d6317465e4b41673c336c6a808d4f4275a3619dcd01375866317a754b
665a3c3a6f824d70a55a101cfef258622730614347625434406e8d5e6991
5b2935011200>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g22 22 def
end
MKLSCB+CambriaMath /Encoding get
dup 83 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 
32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
290.276 158.882 mo
(S)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
290.276 158.882 mo
(S) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 840 8 <000100790000042a0555002e00ceb0852b58b9000fffc0404b090c480f0a
1f1f17180202090a0a17031240090c48121791400a2e220a9128302223a6
44221803189140222e2da6442e090309912e0311a40f12121801a4020218
2120a41f1f300a187f272fe13212392fe13212392fe112392f33e1003fed
2b2b00182f1aed2b2b2b00182f1afdc62b2b11120039182f1112392f10c6
2b31301bb9000fffc04023090c480f0a1f1f17180202090a1240090c4812
0a17916c0a2218916c222e09916c2e0300183f2b2f2b2f2bc62b1112392f
1112392f10c62b3031590111232e0423211133323636373311232e022323
1121323e0337330321353e023511342e0227350420620f2022293827fec4
d62c32210f5e5e0e222f2fd60137313d2c2217146313fc623e2a0d0a1726
2e0555fed2314a321e0bfdf4193c40fe803c3d1afdbf1129424744fea131
1027484a0361453f23150d31>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g8 8 def
end
MKLSCB+CambriaMath /Encoding get
dup 69 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[65{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 
2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
299.882 158.882 mo
(E)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
299.882 158.882 mo
(E) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if

2 0 3 <> MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g3 3 def
end
MKLSCB+CambriaMath /Encoding get
dup 32 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 32{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 
7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
311.172 158.882 mo
( )sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
311.172 158.882 mo
( ) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 9280 883 <000100b2000003ce0565001a005fb0852b58401e12161515170806090809
994408170417000e161609060009008a0e0e1c1b1112392fe1c610c61133
2f111239003f2f2b110033111239182f333931301b400b12161515170806
0908170400183f2f11331112392f333930315901141e03171521353e0335
11342623220607270133061502b70d213e5e4dfd1d6f5f32171c1b207657
2c01d4370601053a3b25150b0249490511223e46032b2825423a4d011760
aa00>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g883 883 def
end
MKLSCB+CambriaMath /Encoding get
dup 49 /g883 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 15{/.notdef}rp /g4 3{/.notdef}rp /g8 
2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 
139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
315.014 158.882 mo
(1)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
315.014 158.882 mo
(1) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
428.74 159.821 mo
(P)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
428.74 159.821 mo
(P) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
439.911 159.821 mo
(H)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
439.911 159.821 mo
(H) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
453.36 159.821 mo
(A)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
453.36 159.821 mo
(A) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
465.244 159.821 mo
(S)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
465.244 159.821 mo
(S) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
474.85 159.821 mo
(E)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
474.85 159.821 mo
(E) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
486.14 159.821 mo
( )sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
486.14 159.821 mo
( ) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 9462 884 <00010081000003c9056500280099b0852b584033201d121209181816081d
16031a169b401d040905401013480528082803289f081919120905070620
8c12122a19280909188e192fe1332f331112392ff1d632cd1112392f002f
ed2b001810c62b333f1aed322b11120039182f113911123931301b401b20
1d1212091818081a1d169b6c1d040905401013480508289f6c0800182f2b
c62b333f2b3211392f113911123930315925323e02373303213536363736
373e02353426262322072335363633321615140e0307060702be313c2415
105511fcc92b9286743338371830634bbb417979d354babe152d4c5c71be
59a00c1c2d2ffedc3069dc95804248695d2f4b7342d0c03933a39b355957
646778c99600>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g884 884 def
end
MKLSCB+CambriaMath /Encoding get
dup 50 /g884 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 3{/.notdef}rp 
/g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp 
/g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
489.982 159.821 mo
(2)sh
MKLSCB+CambriaMath*1 [19.8066 2.88408e-7 0 -19.7663 0 0 ]msf
489.982 159.821 mo
(2) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 544 6 <00010077fff004120565002000bdb0852b58401014100e1548140f125f12
6f1203121700b8fff040300e154800000250026002d002040903021e170e
030e914017131e060306911e041e010606020a0113a4021212220a7e1a2f
e112392f33e132111239111239003fed2b00183f1aed2b001810c45f5e5d
392b10c45d392b31301b401014100e1548140f125f126f1203121700b8ff
f0401d0e154800000250026002d002040903021e170e916c17131e06916c
1e0400183f2b3f2b10c45f5e5d392b10c45d392b3031590111232e022322
06021514121633323636373311060623220011341224333216041263184a
624567a15c4c946c52684720635ec576fefefc870106b65b9a0538feeb57
672c89feedc3c4feeb8d2f6663fee2191901580155d60142b013>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g6 6 def
end
MKLSCB+CambriaMath /Encoding get
dup 67 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp 
/g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
794.111 392.846 mo
(C)sh
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
794.111 392.846 mo
(C) false chp
.504 lw
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 1834 15 <00010079000004100555001e0071b0852b58402700091009020c03090917
000b0ca6440b00030091400b19161716a64417030a09a4080820007f102f
e112392fe132003f2b110033182f1aed2b2b11120039182f5f5e5d31301b
401300091009020c030909170b00916c0b1916170300183f11332f2b1139
2f5f5e5d3031592521323e0437330321353e023511342e02273521150e03
1501a901062b3a29211e1b146514fc7d3e2a0d0a17262e01a52c25180c5c
0a15253c5b5bfe6e311027484a0361453f23150d31310c1320424800>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g15 15 def
end
MKLSCB+CambriaMath /Encoding get
dup 76 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 3{/.notdef}rp /g15 3{/.notdef}rp 
/g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
804.046 392.846 mo
(L)sh
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
804.046 392.846 mo
(L) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 1482 14 <0001007900000509055500450094b0852b584038002a032a401626030300
3e3100911e301b1e3303303130a6441d211803310e1140033d3e3da6440f
0914033e03450b11161b2125072b7f372fe11732003f17332b1100173318
2f17332b110017332b00182f17331acd2b31301b401c2a4016260303001b
1e3303301d211803310e1140033d0f0914033e0300183f17331117332f17
331117332f17331acd303159013332363637363736373635342627352115
0e020701011e0217152135363635342627032e02232311141e0217152135
3e023511342e02273521150e031501a81e263f4e5060232c0f0c2e2801b4
203e413ffeb0016c3a423c22fe4725221719e929262c25350915292efe5b
3e2a0d0a17262e01a52c27170b02ec18425a6b3039271d1b282504313107
233d46fe86fdef54431f053131031616123324015b3e2813fe5d433e2418
0c31311027484a0361453f23150d31310b1621424500>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g14 14 def
end
MKLSCB+CambriaMath /Encoding get
dup 75 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 /g15 
3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
813.434 392.846 mo
(K)sh
MKLSCB+CambriaMath*1 [17.6458 2.56945e-7 0 -17.6099 0 0 ]msf
813.434 392.846 mo
(K) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
.506 sep
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
648.363 164.153 mo
(P)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
648.363 164.153 mo
(P) false chp
.5664 lw
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
659.528 164.153 mo
(H)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
659.528 164.153 mo
(H) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
672.973 164.153 mo
(A)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
672.973 164.153 mo
(A) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
684.851 164.153 mo
(S)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
684.851 164.153 mo
(S) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
694.449 164.153 mo
(E)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
694.449 164.153 mo
(E) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
705.733 164.153 mo
( )sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
705.733 164.153 mo
( ) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MKLSCB+CambriaMath gcheck setglobal} if
2 9738 885 <00010090fff003ca0565003000bbb0852b5840440d0c2526262503259a40
260416269a28300f1a0111031a001a001e2d161e03191e9a401613042d03
012d9b04040c0826262a308e00001a088c2a2a1a128c2121321b8e1a2fe1
12392fe112392fe112392fe112392f1239003fed322b00183f1aed322b11
12003939182f2f5f5e5d2b00182f1aed2b111200393931301b401f0d0c26
259a6c260f1a0111031a001a002d19161e9a6c161301042d9b6c04040018
3f2b323f2b321139392f2f5f5e5d2f2b3939303159133536363332161615
14060607151e031514060623222627353316163332363534262323353e02
353426232206079f74ca5e71aa5a447b623d71583565d09556c753782373
638285b0aa5a87b95a76715e761c043abe373646835b5581602e090b3554
754b74b4682720d4685e8e8b929a5808588a566f78666900>MKLSCB+CambriaMath AddT42Char 
MKLSCB+CambriaMath /CharStrings get begin
/g885 885 def
end
MKLSCB+CambriaMath /Encoding get
dup 51 /g885 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MKLSCB+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 /g885 13{/.notdef}rp /g4 
/.notdef /g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 
/g15 3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
MKLSCB+CambriaMath nf
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
709.58 164.153 mo
(3)sh
MKLSCB+CambriaMath*1 [19.8306 2.88757e-7 0 -19.7902 0 0 ]msf
709.58 164.153 mo
(3) false chp
gsave
[1.00033 1.45661e-8 0 -.998296 44.4431 484.297 ]ct
@
grestore newpath
799.793 368.684 mo
815.949 368.634 li
815.939 365.34 li
799.783 365.39 li
cp
801.424 362.095 mo
791.531 367.067 li
801.454 371.978 li
cp
814.318 371.939 mo
824.201 366.957 li
814.278 362.055 li
cp
.997223 .918425 .647791 .507591 cmyk
f
835.195 342.129 mo
835.195 350.485 li
831.894 350.485 li
831.894 342.129 li
cp
828.593 343.777 mo
833.544 333.893 li
838.496 343.777 li
cp
838.496 348.838 mo
833.544 358.721 li
828.593 348.838 li
cp
f
94.4346 288.581 mo
94.4346 381.991 li
91.1335 381.991 li
91.1335 288.581 li
cp
87.8324 290.228 mo
92.7841 280.345 li
97.7357 290.228 li
cp
97.7357 380.344 mo
92.7841 390.223 li
87.8324 380.344 li
cp
f
420.578 358.182 mo
420.578 387.788 li
417.277 387.788 li
417.277 358.182 li
cp
413.975 359.829 mo
418.927 349.946 li
423.879 359.829 li
cp
423.879 386.14 mo
418.927 396.023 li
413.975 386.14 li
cp
f
126.996 424.161 mo
131.948 424.155 li
131.946 422.921 li
126.994 422.927 li
cp
135.661 424.151 mo
140.613 424.145 li
140.612 422.91 li
135.66 422.916 li
cp
144.327 424.14 mo
149.278 424.134 li
149.278 422.899 li
144.325 422.905 li
cp
152.989 424.129 mo
157.941 424.124 li
157.941 422.889 li
152.989 422.895 li
cp
161.662 424.12 mo
166.614 424.113 li
166.604 422.878 li
161.652 422.884 li
cp
170.325 424.109 mo
175.276 424.103 li
175.276 422.867 li
170.325 422.873 li
cp
178.988 424.098 mo
183.939 424.092 li
183.939 422.856 li
178.988 422.863 li
cp
187.65 424.087 mo
192.602 424.081 li
192.602 422.846 li
187.65 422.852 li
cp
196.323 424.077 mo
201.275 424.071 li
201.265 422.835 li
196.313 422.841 li
cp
204.986 424.066 mo
209.938 424.06 li
209.938 422.824 li
204.986 422.83 li
cp
213.649 424.055 mo
218.601 424.049 li
218.601 422.814 li
213.649 422.82 li
cp
222.312 424.044 mo
227.264 424.038 li
227.264 422.803 li
222.312 422.809 li
cp
230.985 424.034 mo
235.936 424.028 li
235.926 422.792 li
230.975 422.798 li
cp
239.648 424.023 mo
244.599 424.017 li
244.599 422.781 li
239.648 422.788 li
cp
248.311 424.012 mo
253.262 424.006 li
253.262 422.771 li
248.311 422.777 li
cp
256.973 424.002 mo
261.925 423.995 li
261.925 422.76 li
256.973 422.766 li
cp
265.646 423.991 mo
270.598 423.985 li
270.588 422.749 li
265.636 422.755 li
cp
274.309 423.98 mo
279.261 423.974 li
279.261 422.738 li
274.309 422.745 li
cp
282.972 423.969 mo
287.924 423.963 li
287.924 422.728 li
282.972 422.734 li
cp
291.635 423.959 mo
296.587 423.953 li
296.587 422.717 li
291.635 422.723 li
cp
300.308 423.948 mo
305.259 423.942 li
305.249 422.706 li
300.298 422.712 li
cp
308.971 423.937 mo
313.922 423.931 li
313.922 422.696 li
308.971 422.702 li
cp
317.634 423.926 mo
322.585 423.92 li
322.585 422.685 li
317.634 422.691 li
cp
326.296 423.916 mo
331.248 423.91 li
331.248 422.674 li
326.296 422.68 li
cp
334.969 423.905 mo
339.921 423.899 li
339.911 422.663 li
334.959 422.67 li
cp
343.632 423.894 mo
348.584 423.888 li
348.584 422.653 li
343.632 422.659 li
cp
352.295 423.884 mo
357.247 423.877 li
357.247 422.642 li
352.295 422.648 li
cp
360.958 423.873 mo
365.91 423.867 li
365.91 422.631 li
360.958 422.637 li
cp
369.631 423.862 mo
374.582 423.856 li
374.572 422.621 li
369.621 422.627 li
cp
378.294 423.851 mo
383.245 423.845 li
383.245 422.61 li
378.294 422.616 li
cp
386.957 423.841 mo
391.908 423.835 li
391.908 422.599 li
386.957 422.605 li
cp
395.619 423.83 mo
400.571 423.824 li
400.571 422.588 li
395.619 422.594 li
cp
404.292 423.819 mo
409.244 423.813 li
409.234 422.578 li
404.282 422.584 li
cp
412.955 423.809 mo
417.907 423.802 li
417.907 422.567 li
412.955 422.573 li
cp
421.618 423.798 mo
426.57 423.792 li
426.57 422.556 li
421.618 422.562 li
cp
430.281 423.787 mo
435.233 423.781 li
435.233 422.545 li
430.281 422.552 li
cp
438.954 423.776 mo
443.905 423.77 li
443.895 422.535 li
438.944 422.541 li
cp
447.617 423.766 mo
452.568 423.759 li
452.568 422.524 li
447.617 422.53 li
cp
456.279 423.755 mo
461.231 423.749 li
461.231 422.513 li
456.279 422.519 li
cp
464.942 423.744 mo
469.894 423.738 li
469.894 422.503 li
464.942 422.509 li
cp
473.615 423.733 mo
478.567 423.727 li
478.557 422.492 li
473.605 422.498 li
cp
482.278 423.723 mo
487.23 423.717 li
487.23 422.481 li
482.278 422.487 li
cp
490.941 423.712 mo
495.893 423.706 li
495.893 422.47 li
490.941 422.476 li
cp
499.604 423.701 mo
504.555 423.695 li
504.555 422.46 li
499.604 422.466 li
cp
508.277 423.691 mo
513.228 423.684 li
513.218 422.449 li
508.267 422.455 li
cp
516.94 423.68 mo
521.891 423.674 li
521.891 422.438 li
516.94 422.444 li
cp
525.602 423.669 mo
530.554 423.663 li
530.554 422.427 li
525.602 422.434 li
cp
534.265 423.658 mo
539.217 423.652 li
539.217 422.417 li
534.265 422.423 li
cp
542.938 423.648 mo
547.89 423.642 li
547.88 422.406 li
542.928 422.412 li
cp
f
52.1436 258.742 mo
57.4914 258.742 li
57.4914 259.381 li
57.1563 259.411 56.9082 259.51 56.7471 259.66 cv
56.5861 259.8 56.505 260.01 56.505 260.279 cv
56.505 260.499 56.5251 260.698 56.5631 260.908 cv
56.6021 261.108 56.6831 261.427 56.8051 261.876 cv
58.7198 268.805 li
61.1086 261.906 li
61.2056 261.637 61.2816 261.377 61.3356 261.138 cv
61.3907 260.908 61.4187 260.648 61.4187 260.389 cv
61.4187 260.069 61.3356 259.83 61.1716 259.67 cv
61.0075 259.5 60.7545 259.401 60.4123 259.381 cv
60.4123 258.742 li
64.5807 258.742 li
64.5807 259.381 li
64.3356 259.411 64.1276 259.49 63.9565 259.61 cv
63.7865 259.73 63.6314 259.9 63.4924 260.119 cv
63.3543 260.349 63.1913 260.708 63.0042 261.208 cv
58.9519 271.979 li
56.7181 271.979 li
53.5266 261.168 li
53.3847 260.688 53.2655 260.349 53.1687 260.139 cv
53.072 259.94 52.9464 259.78 52.7916 259.65 cv
52.6369 259.53 52.4209 259.431 52.1436 259.381 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
73.8088 269.643 mo
73.4477 269.643 73.1606 269.823 72.9475 270.192 cv
72.7344 270.552 72.6064 271.081 72.5644 271.77 cv
74.9061 271.77 li
74.8881 271.051 74.7941 270.522 74.6251 270.172 cv
74.456 269.813 74.1839 269.643 73.8088 269.643 cv
cp
73.9218 268.914 mo
74.348 268.914 74.7221 268.964 75.0432 269.054 cv
75.3653 269.154 75.6404 269.294 75.8705 269.473 cv
76.0995 269.643 76.2896 269.853 76.4397 270.102 cv
76.6177 270.402 76.7528 270.741 76.8438 271.121 cv
76.9358 271.51 76.9838 271.969 76.9888 272.528 cv
72.5294 272.528 li
72.5334 273.377 72.6854 273.996 72.9825 274.395 cv
73.2806 274.794 73.7338 274.994 74.344 274.994 cv
74.7001 274.994 75.0212 274.934 75.3073 274.794 cv
75.5934 274.665 75.9025 274.425 76.2356 274.096 cv
76.8058 274.704 li
76.3276 275.214 75.8535 275.573 75.3843 275.783 cv
74.9161 275.992 74.377 276.102 73.7668 276.102 cv
72.6744 276.102 71.8531 275.803 71.3019 275.204 cv
70.7508 274.605 70.4757 273.726 70.4757 272.548 cv
70.4757 271.789 70.6167 271.131 70.9008 270.582 cv
71.1849 270.032 71.587 269.623 72.1072 269.334 cv
72.6274 269.054 73.2326 268.914 73.9218 268.914 cv
cp
68.542 268.914 mo
68.8281 268.914 69.1282 268.944 69.4423 269.004 cv
69.4423 270.941 li
68.1699 270.941 li
68.0899 270.671 67.9858 270.462 67.8568 270.312 cv
67.7278 270.172 67.5557 270.092 67.3396 270.092 cv
67.2366 270.092 67.1226 270.132 66.9985 270.192 cv
66.8745 270.252 66.7594 270.342 66.6544 270.462 cv
66.5484 270.572 66.4734 270.691 66.4293 270.811 cv
66.3843 270.931 66.3553 271.051 66.3413 271.171 cv
66.3273 271.29 66.3203 271.48 66.3203 271.72 cv
66.3203 273.956 li
66.3203 274.405 66.3363 274.714 66.3693 274.894 cv
66.4023 275.074 66.4673 275.204 66.5664 275.313 cv
66.6644 275.413 66.8305 275.483 67.0655 275.523 cv
67.0655 275.982 li
63.5974 275.982 li
63.5974 275.523 li
63.8225 275.463 63.9785 275.383 64.0656 275.284 cv
64.1526 275.184 64.2106 275.054 64.2416 274.884 cv
64.2716 274.714 64.2876 274.405 64.2876 273.966 cv
64.2876 271.081 li
64.2876 270.731 64.2816 270.482 64.2696 270.312 cv
64.2576 270.142 64.2296 270.013 64.1856 269.913 cv
64.1406 269.813 64.0726 269.733 63.9815 269.663 cv
63.8895 269.603 63.7314 269.543 63.5064 269.503 cv
63.5064 269.024 li
65.434 268.964 li
66.3203 268.964 li
66.2213 270.022 li
66.3133 270.052 li
66.6554 269.643 67.0065 269.354 67.3676 269.174 cv
67.7288 269.004 68.1209 268.914 68.542 268.914 cv
cp
86.1159 265.939 mo
86.9951 265.939 li
86.9951 269.943 li
87.0232 269.953 li
87.4503 269.573 87.8314 269.304 88.1665 269.144 cv
88.5016 268.994 88.8448 268.914 89.1969 268.914 cv
89.7131 268.914 90.1112 269.004 90.3923 269.194 cv
90.6734 269.384 90.8794 269.653 91.0075 270.013 cv
91.1365 270.372 91.2015 270.831 91.2015 271.4 cv
91.2015 273.956 li
91.2015 274.405 91.2155 274.704 91.2436 274.874 cv
91.2716 275.044 91.3306 275.184 91.4196 275.284 cv
91.5086 275.383 91.6727 275.463 91.9118 275.523 cv
91.9118 275.982 li
88.5006 275.982 li
88.5006 275.523 li
88.7207 275.473 88.8718 275.393 88.9538 275.293 cv
89.0358 275.204 89.0928 275.064 89.1229 274.894 cv
89.1539 274.714 89.1689 274.405 89.1689 273.966 cv
89.1689 272.129 li
89.1689 271.67 89.1539 271.3 89.1229 271.041 cv
89.0928 270.781 89.0408 270.582 88.9678 270.442 cv
88.8958 270.292 88.8018 270.192 88.6867 270.122 cv
88.5717 270.052 88.4206 270.013 88.2336 270.013 cv
88.0555 270.013 87.8684 270.072 87.6744 270.182 cv
87.4793 270.292 87.3173 270.442 87.1892 270.631 cv
87.0602 270.821 86.9951 271.021 86.9951 271.23 cv
86.9951 273.956 li
86.9951 274.405 87.0081 274.714 87.0342 274.884 cv
87.0602 275.044 87.1172 275.184 87.2062 275.284 cv
87.2952 275.383 87.4593 275.463 87.6984 275.523 cv
87.6984 275.982 li
84.2522 275.982 li
84.2522 275.523 li
84.4913 275.463 84.6554 275.383 84.7444 275.284 cv
84.8334 275.184 84.8924 275.054 84.9205 274.884 cv
84.9485 274.724 84.9625 274.415 84.9625 273.956 cv
84.9625 268.485 li
84.9625 267.986 84.9555 267.627 84.9415 267.407 cv
84.9275 267.197 84.8985 267.028 84.8534 266.918 cv
84.8094 266.808 84.7434 266.728 84.6564 266.658 cv
84.5703 266.598 84.4073 266.538 84.1682 266.499 cv
84.1682 266.029 li
cp
82.2306 265.91 mo
82.6337 265.91 82.9928 265.939 83.3069 266.009 cv
83.3069 267.437 li
82.3506 267.437 li
82.2706 267.177 82.1826 266.988 82.0865 266.868 cv
81.9905 266.748 81.8654 266.688 81.7104 266.688 cv
81.5083 266.688 81.3543 266.748 81.2462 266.888 cv
81.1382 267.018 81.0642 267.207 81.0242 267.457 cv
80.9842 267.696 80.9651 268.046 80.9651 268.485 cv
80.9651 269.024 li
82.3226 269.024 li
82.3226 269.903 li
80.9651 269.903 li
80.9651 274.225 li
80.9651 274.575 80.9832 274.824 81.0212 274.964 cv
81.0582 275.114 81.1252 275.224 81.2212 275.313 cv
81.3173 275.393 81.4873 275.463 81.7314 275.523 cv
81.7314 275.982 li
78.2282 275.982 li
78.2282 275.523 li
78.4493 275.453 78.6024 275.383 78.6894 275.303 cv
78.7764 275.224 78.8384 275.114 78.8755 274.974 cv
78.9135 274.834 78.9325 274.585 78.9325 274.225 cv
78.9325 269.903 li
78.0742 269.903 li
78.0742 269.414 li
78.3223 269.384 78.4943 269.334 78.5914 269.284 cv
78.6874 269.224 78.7654 269.144 78.8264 269.024 cv
78.8875 268.904 78.9295 268.725 78.9535 268.465 cv
79.0285 267.627 79.3416 266.988 79.8918 266.558 cv
80.443 266.119 81.2222 265.91 82.2306 265.91 cv
cp
ef
206.587 228.453 mo
211.538 228.463 li
211.528 229.701 li
206.577 229.691 li
cp
215.25 228.473 mo
220.201 228.483 li
220.201 229.711 li
215.25 229.701 li
cp
223.913 228.483 mo
228.864 228.493 li
228.864 229.731 li
223.913 229.721 li
cp
232.575 228.503 mo
237.527 228.503 li
237.527 229.741 li
232.575 229.731 li
cp
241.248 228.513 mo
246.2 228.523 li
246.19 229.761 li
241.238 229.751 li
cp
249.911 228.523 mo
254.863 228.533 li
254.863 229.771 li
249.911 229.761 li
cp
258.574 228.543 mo
263.526 228.553 li
263.526 229.781 li
258.574 229.781 li
cp
267.237 228.553 mo
272.188 228.563 li
272.188 229.801 li
267.237 229.791 li
cp
275.91 228.573 mo
280.861 228.573 li
280.851 229.811 li
275.9 229.801 li
cp
284.573 228.583 mo
289.524 228.593 li
289.524 229.831 li
284.573 229.821 li
cp
293.235 228.593 mo
298.187 228.603 li
298.187 229.841 li
293.235 229.831 li
cp
301.898 228.613 mo
306.85 228.623 li
306.85 229.851 li
301.898 229.851 li
cp
310.571 228.623 mo
315.523 228.633 li
315.513 229.871 li
310.561 229.861 li
cp
319.234 228.643 mo
324.186 228.643 li
324.186 229.881 li
319.234 229.871 li
cp
327.897 228.653 mo
332.849 228.663 li
332.849 229.901 li
327.897 229.891 li
cp
336.56 228.663 mo
341.511 228.673 li
341.511 229.911 li
336.56 229.901 li
cp
345.233 228.683 mo
350.184 228.693 li
350.174 229.921 li
345.223 229.921 li
cp
353.896 228.693 mo
358.847 228.703 li
358.847 229.941 li
353.896 229.931 li
cp
362.558 228.713 mo
367.51 228.713 li
367.51 229.951 li
362.558 229.941 li
cp
371.221 228.723 mo
376.173 228.733 li
376.173 229.971 li
371.221 229.961 li
cp
379.894 228.733 mo
384.846 228.743 li
384.836 229.981 li
379.884 229.971 li
cp
388.557 228.753 mo
393.509 228.763 li
393.509 229.991 li
388.557 229.991 li
cp
397.22 228.763 mo
402.172 228.773 li
402.172 230.011 li
397.22 230.001 li
cp
405.883 228.783 mo
410.834 228.783 li
410.834 230.021 li
405.883 230.011 li
cp
414.556 228.793 mo
419.507 228.803 li
419.497 230.041 li
414.546 230.031 li
cp
423.219 228.813 mo
428.17 228.813 li
428.17 230.051 li
423.219 230.041 li
cp
431.881 228.823 mo
436.833 228.833 li
436.833 230.061 li
431.881 230.061 li
cp
440.544 228.833 mo
445.496 228.843 li
445.496 230.081 li
440.544 230.071 li
cp
449.217 228.853 mo
454.169 228.863 li
454.159 230.091 li
449.207 230.081 li
cp
457.88 228.863 mo
462.832 228.873 li
462.832 230.111 li
457.88 230.101 li
cp
466.543 228.883 mo
471.495 228.883 li
471.495 230.121 li
466.543 230.111 li
cp
475.206 228.893 mo
480.157 228.903 li
480.157 230.141 li
475.206 230.131 li
cp
483.879 228.903 mo
488.83 228.913 li
488.82 230.151 li
483.869 230.141 li
cp
492.542 228.923 mo
497.493 228.933 li
497.493 230.161 li
492.542 230.161 li
cp
501.204 228.933 mo
506.156 228.943 li
506.156 230.18 li
501.204 230.171 li
cp
509.867 228.953 mo
514.819 228.953 li
514.819 230.19 li
509.867 230.18 li
cp
518.54 228.963 mo
523.492 228.973 li
523.482 230.21 li
518.53 230.2 li
cp
527.203 228.973 mo
532.155 228.983 li
532.155 230.22 li
527.203 230.21 li
cp
535.866 228.993 mo
540.817 229.003 li
540.817 230.23 li
535.866 230.23 li
cp
544.529 229.003 mo
549.48 229.012 li
549.48 230.25 li
544.529 230.24 li
cp
553.202 229.022 mo
558.153 229.022 li
558.143 230.26 li
553.192 230.25 li
cp
561.864 229.032 mo
566.816 229.042 li
566.816 230.28 li
561.864 230.27 li
cp
570.527 229.042 mo
575.479 229.052 li
575.479 230.29 li
570.527 230.28 li
cp
579.19 229.062 mo
584.142 229.072 li
584.142 230.3 li
579.19 230.3 li
cp
587.863 229.072 mo
592.815 229.082 li
592.805 230.32 li
587.853 230.31 li
cp
596.526 229.092 mo
601.478 229.092 li
601.478 230.33 li
596.526 230.32 li
cp
605.189 229.102 mo
610.14 229.112 li
610.14 230.35 li
605.189 230.34 li
cp
613.852 229.112 mo
618.803 229.122 li
618.803 230.36 li
613.852 230.35 li
cp
622.525 229.132 mo
627.476 229.142 li
627.466 230.37 li
622.515 230.37 li
cp
631.187 229.142 mo
636.139 229.152 li
636.139 230.39 li
631.187 230.38 li
cp
639.85 229.162 mo
642.881 229.162 li
642.881 230.4 li
639.85 230.39 li
cp
.997223 .918425 .647791 .507591 cmyk
f
107.671 227.735 mo
112.623 227.755 li
112.619 228.993 li
107.667 228.973 li
cp
116.337 227.765 mo
121.289 227.785 li
121.284 229.022 li
116.332 229.003 li
cp
125.002 227.805 mo
129.953 227.815 li
129.949 229.052 li
124.998 229.032 li
cp
f
564.265 442.58 mo
624.895 442.58 li
624.895 445.874 li
564.265 445.874 li
cp
565.916 449.169 mo
556.013 444.227 li
565.916 439.286 li
cp
623.245 439.286 mo
633.148 444.227 li
623.245 449.169 li
cp
f
103.948 74.7458 mo
210.628 74.7458 li
210.628 38.837 li
208.978 40.4842 li
316.643 40.4842 li
316.643 37.1898 li
207.327 37.1898 li
207.327 73.0986 li
208.978 71.4514 li
103.948 71.4514 li
cp
f
310.771 37.1898 mo
480.447 37.1898 li
480.447 40.4842 li
310.771 40.4842 li
cp
f
480.387 37.1898 mo
558.273 37.1898 li
558.273 73.0986 li
556.623 71.4514 li
622.284 71.4514 li
622.284 74.7458 li
554.972 74.7458 li
554.972 38.837 li
556.623 40.4842 li
480.387 40.4842 li
cp
f
622.284 74.7458 mo
805.575 74.626 li
805.575 71.3316 li
622.274 71.4514 li
cp
f
105.628 124.221 mo
212.309 124.221 li
212.309 88.3126 li
210.658 89.9598 li
318.324 89.9598 li
318.324 86.6654 li
209.008 86.6654 li
209.008 122.574 li
210.658 120.927 li
105.628 120.927 li
cp
f
212.699 86.5456 mo
374.132 86.5456 li
374.132 120.627 li
372.482 118.98 li
623.355 118.98 li
623.355 122.275 li
370.831 122.275 li
370.831 88.1928 li
372.482 89.84 li
212.699 89.84 li
cp
f
620.364 122.345 mo
805.585 122.065 li
805.575 118.771 li
620.354 119.05 li
cp
f
371.301 37.669 mo
398.85 37.669 li
398.85 75.2249 li
371.301 75.2249 li
cp
374.602 73.5777 mo
372.952 71.9305 li
397.2 71.9305 li
395.549 73.5777 li
395.549 39.3162 li
397.2 40.9634 li
372.952 40.9634 li
374.602 39.3162 li
cp
f
395.839 38.3578 mo
371.611 72.2001 li
374.302 74.1168 li
398.52 40.2746 li
cp
f
374.322 38.3978 mo
396.92 71.7209 li
394.189 73.5678 li
371.591 40.2446 li
cp
f
74.6261 52.8631 mo
79.7037 52.8631 li
79.7037 53.492 li
79.3616 53.5819 79.1275 53.6917 79.0025 53.8015 cv
78.8765 53.9213 78.7874 54.071 78.7364 54.2707 cv
78.6844 54.4604 78.6594 54.7998 78.6594 55.269 cv
78.6594 64.8826 li
80.535 64.8826 li
80.9411 64.8826 81.2713 64.8127 81.5263 64.663 cv
81.7814 64.5032 82.0005 64.2537 82.1846 63.8943 cv
82.3676 63.5349 82.5497 62.9559 82.7307 62.1373 cv
84.0552 62.1373 li
83.8431 66.0306 li
74.6261 66.0306 li
74.6261 65.3917 li
74.9742 65.3019 75.2112 65.2021 75.3373 65.0922 cv
75.4623 64.9724 75.5484 64.8127 75.5934 64.623 cv
75.6384 64.4334 75.6604 64.0939 75.6604 63.6048 cv
75.6604 55.289 li
75.6604 54.7998 75.6404 54.4604 75.5984 54.2707 cv
75.5564 54.081 75.4703 53.9313 75.3413 53.8115 cv
75.2132 53.7017 74.9742 53.5919 74.6261 53.492 cv
cp
62.8622 52.8631 mo
72.4563 52.8631 li
72.4563 55.9279 li
71.1309 55.9279 li
70.9178 55.3189 70.7378 54.8996 70.5897 54.69 cv
70.4407 54.4704 70.2636 54.3006 70.0575 54.1808 cv
69.8515 54.0511 69.4994 53.9912 69.0032 53.9912 cv
66.8955 53.9912 li
66.8955 58.6233 li
68.1719 58.6233 li
68.455 58.6233 68.6781 58.5833 68.8391 58.5035 cv
69.0002 58.4236 69.1342 58.2839 69.2403 58.1042 cv
69.3463 57.9145 69.4483 57.625 69.5454 57.2356 cv
70.6377 57.2356 li
70.6377 61.149 li
69.5454 61.149 li
69.4543 60.7796 69.3543 60.4901 69.2453 60.3004 cv
69.1352 60.1007 69.0052 59.961 68.8531 59.8712 cv
68.7021 59.7913 68.475 59.7514 68.1719 59.7514 cv
66.8955 59.7514 li
66.8955 64.9026 li
68.9932 64.9026 li
69.2193 64.9026 69.4093 64.8926 69.5644 64.8626 cv
69.7194 64.8327 69.8575 64.7827 69.9805 64.7129 cv
70.1025 64.643 70.2206 64.5432 70.3326 64.4234 cv
70.4457 64.3036 70.5457 64.1638 70.6327 64.0241 cv
70.7198 63.8843 70.8118 63.6946 70.9088 63.465 cv
71.0049 63.2354 71.1119 62.916 71.2279 62.5066 cv
72.5524 62.5066 li
72.3693 66.0306 li
62.8622 66.0306 li
62.8622 65.3917 li
63.2103 65.3019 63.4473 65.2021 63.5734 65.0922 cv
63.6984 64.9724 63.7845 64.8227 63.8295 64.633 cv
63.8745 64.4433 63.8965 64.1039 63.8965 63.6147 cv
63.8965 55.289 li
63.8965 54.7998 63.8765 54.4604 63.8345 54.2707 cv
63.7925 54.081 63.7064 53.9313 63.5774 53.8115 cv
63.4493 53.7017 63.2103 53.5919 62.8622 53.492 cv
cp
57.3893 52.7034 mo
57.9635 52.7034 58.5117 52.7333 59.0339 52.7932 cv
59.5561 52.8531 60.1523 52.9629 60.8225 53.1227 cv
60.8225 55.9179 li
59.498 55.9179 li
59.324 55.1891 59.0659 54.66 58.7248 54.3306 cv
58.3827 54.0012 57.8895 53.8315 57.2443 53.8315 cv
56.6641 53.8315 56.1989 53.9812 55.8468 54.2907 cv
55.4957 54.5901 55.3197 54.9995 55.3197 55.5186 cv
55.3197 55.8979 55.3927 56.2174 55.5377 56.4969 cv
55.6828 56.7664 55.9259 57.036 56.268 57.2955 cv
56.6091 57.5551 57.1062 57.8546 57.7575 58.184 cv
58.5497 58.6033 59.1739 59.0026 59.6281 59.4019 cv
60.0832 59.7913 60.4183 60.2206 60.6344 60.6898 cv
60.8505 61.159 60.9585 61.698 60.9585 62.317 cv
60.9585 63.1056 60.7745 63.7944 60.4073 64.3734 cv
60.0392 64.9625 59.504 65.4117 58.8018 65.7212 cv
58.0986 66.0306 57.2863 66.1903 56.365 66.1903 cv
55.7068 66.1903 55.0216 66.1505 54.3094 66.0806 cv
53.597 66.0007 52.9281 65.8909 52.3027 65.7511 cv
52.3027 62.7762 li
53.6276 62.7762 li
53.7887 63.5449 54.0579 64.1139 54.4352 64.4933 cv
54.8125 64.8726 55.3657 65.0623 56.0939 65.0623 cv
56.7321 65.0623 57.2303 64.8926 57.5884 64.5631 cv
57.9455 64.2337 58.1246 63.7745 58.1246 63.1655 cv
58.1246 62.5765 57.9525 62.0774 57.6074 61.688 cv
57.2623 61.2887 56.6641 60.8794 55.8128 60.4501 cv
55.1036 60.1107 54.5124 59.7514 54.0386 59.382 cv
53.5647 59.0126 53.1908 58.5833 52.9168 58.0942 cv
52.6428 57.605 52.5057 57.046 52.5057 56.4071 cv
52.5057 55.6184 52.7024 54.9496 53.0957 54.3905 cv
53.4889 53.8414 54.0579 53.4221 54.8025 53.1327 cv
55.5477 52.8431 56.41 52.7034 57.3893 52.7034 cv
cp
ef
68.0559 107.809 mo
66.1212 113.24 li
69.6034 113.24 li
cp
76.2776 105.274 mo
81.0842 105.274 li
83.7631 113.2 li
86.664 105.274 li
91.2005 105.274 li
91.2005 105.913 li
90.8584 106.012 90.6264 106.112 90.5043 106.232 cv
90.3813 106.342 90.2962 106.492 90.2472 106.681 cv
90.1992 106.871 90.1752 107.21 90.1752 107.69 cv
90.1752 116.035 li
90.1752 116.435 90.1942 116.744 90.2332 116.974 cv
90.2712 117.203 90.3503 117.373 90.4703 117.493 cv
90.5893 117.613 90.8324 117.722 91.2005 117.812 cv
91.2005 118.451 li
86.2389 118.451 li
86.2389 117.812 li
86.523 117.742 86.7191 117.672 86.8291 117.613 cv
86.9381 117.553 87.0242 117.483 87.0852 117.383 cv
87.1462 117.293 87.1912 117.153 87.2202 116.964 cv
87.2492 116.774 87.2642 116.455 87.2642 116.015 cv
87.2642 111.293 li
87.2642 110.774 87.2732 110.155 87.2932 109.447 cv
87.3123 108.738 87.3313 108.239 87.3513 107.939 cv
87.1482 107.939 li
87.0322 108.328 86.7871 109.027 86.413 110.026 cv
83.8211 116.994 li
82.1185 116.994 li
79.3916 109.167 li
79.2306 108.728 79.0885 108.279 78.9665 107.849 cv
78.7924 107.849 li
78.8565 108.907 78.8885 110.165 78.8885 111.613 cv
78.8885 116.045 li
78.8885 116.524 78.9115 116.854 78.9565 117.044 cv
79.0015 117.233 79.0915 117.383 79.2276 117.503 cv
79.3626 117.633 79.5977 117.732 79.9328 117.812 cv
79.9328 118.451 li
76.2776 118.451 li
76.2776 117.812 li
76.6257 117.722 76.8628 117.623 76.9888 117.503 cv
77.1139 117.393 77.1999 117.243 77.2449 117.054 cv
77.2899 116.864 77.3119 116.524 77.3119 116.035 cv
77.3119 107.69 li
77.3119 107.2 77.2909 106.871 77.2499 106.691 cv
77.2079 106.512 77.1259 106.362 77.0028 106.242 cv
76.8808 106.132 76.6387 106.022 76.2776 105.913 cv
cp
67.6297 105.214 mo
70.2126 105.214 li
73.4036 116.015 li
73.5457 116.504 73.6647 116.844 73.7618 117.044 cv
73.8578 117.253 73.9838 117.413 74.1389 117.543 cv
74.2929 117.663 74.509 117.762 74.7871 117.812 cv
74.7871 118.451 li
69.4483 118.451 li
69.4483 117.812 li
69.7834 117.772 70.0315 117.682 70.1926 117.533 cv
70.3536 117.383 70.4347 117.173 70.4347 116.904 cv
70.4347 116.704 70.4117 116.485 70.3666 116.245 cv
70.3216 115.995 70.2476 115.686 70.1446 115.317 cv
69.8835 114.368 li
65.7541 114.368 li
65.435 115.287 li
65.344 115.546 65.27 115.796 65.2119 116.035 cv
65.1539 116.275 65.1249 116.534 65.1249 116.804 cv
65.1249 117.433 65.46 117.772 66.1312 117.812 cv
66.1312 118.451 li
62.0019 118.451 li
62.0019 117.812 li
62.2399 117.792 62.449 117.702 62.6301 117.563 cv
62.8101 117.423 62.9752 117.233 63.1232 116.984 cv
63.2713 116.744 63.4293 116.395 63.5974 115.935 cv
cp
57.3893 105.124 mo
57.9635 105.124 58.5117 105.154 59.0339 105.214 cv
59.5561 105.274 60.1523 105.383 60.8225 105.543 cv
60.8225 108.338 li
59.498 108.338 li
59.324 107.61 59.0659 107.081 58.7238 106.751 cv
58.3827 106.422 57.8895 106.252 57.2443 106.252 cv
56.6641 106.252 56.1989 106.402 55.8468 106.711 cv
55.4957 107.011 55.3197 107.42 55.3197 107.939 cv
55.3197 108.318 55.3927 108.638 55.5377 108.907 cv
55.6828 109.187 55.9259 109.457 56.268 109.716 cv
56.6091 109.976 57.1062 110.275 57.7575 110.605 cv
58.5497 111.014 59.1739 111.423 59.6281 111.813 cv
60.0832 112.212 60.4183 112.641 60.6344 113.11 cv
60.8505 113.579 60.9585 114.119 60.9585 114.738 cv
60.9585 115.526 60.7745 116.215 60.4073 116.794 cv
60.0392 117.383 59.504 117.822 58.8018 118.142 cv
58.0986 118.451 57.2863 118.611 56.364 118.611 cv
55.7068 118.611 55.0216 118.571 54.3093 118.491 cv
53.5969 118.421 52.928 118.311 52.3026 118.172 cv
52.3026 115.197 li
53.6275 115.197 li
53.7887 115.965 54.0579 116.534 54.4351 116.914 cv
54.8125 117.293 55.3647 117.473 56.0939 117.473 cv
56.7321 117.473 57.2303 117.313 57.5874 116.984 cv
57.9455 116.654 58.1246 116.195 58.1246 115.586 cv
58.1246 114.997 57.9525 114.498 57.6074 114.109 cv
57.2623 113.709 56.6641 113.3 55.8128 112.871 cv
55.1036 112.521 54.5124 112.172 54.0385 111.803 cv
53.5647 111.423 53.1908 110.994 52.9168 110.505 cv
52.6427 110.016 52.5057 109.457 52.5057 108.828 cv
52.5057 108.039 52.7023 107.37 53.0956 106.811 cv
53.4889 106.262 54.0579 105.843 54.8025 105.553 cv
55.5477 105.264 56.41 105.124 57.3893 105.124 cv
cp
ef
352.115 52.8631 mo
357.487 52.8631 li
357.487 53.492 li
357.187 53.532 356.977 53.6018 356.847 53.7017 cv
356.716 53.8115 356.656 53.9712 356.656 54.1908 cv
356.656 54.3605 356.706 54.5702 356.817 54.7998 cv
356.927 55.0294 357.137 55.4188 357.467 55.9678 cv
358.367 57.4652 li
359.537 55.7482 li
359.798 55.3688 359.968 55.0693 360.058 54.8697 cv
360.148 54.67 360.188 54.4504 360.188 54.2208 cv
360.188 54.0112 360.118 53.8514 359.978 53.7216 cv
359.838 53.6018 359.637 53.522 359.387 53.492 cv
359.387 52.8631 li
363.379 52.8631 li
363.379 53.502 li
363.189 53.5619 363.019 53.6418 362.849 53.7516 cv
362.678 53.8614 362.488 54.0511 362.268 54.3106 cv
362.048 54.5702 361.698 55.0493 361.208 55.7382 cv
359.127 58.7031 li
361.948 63.3652 li
362.258 63.8743 362.508 64.2737 362.698 64.5532 cv
362.899 64.8327 363.069 65.0323 363.219 65.1621 cv
363.369 65.2819 363.529 65.3618 363.699 65.3917 cv
363.699 66.0306 li
358.317 66.0306 li
358.317 65.3917 li
358.607 65.3618 358.817 65.2919 358.947 65.192 cv
359.087 65.0922 359.157 64.9225 359.157 64.7029 cv
359.157 64.5931 359.127 64.4733 359.087 64.3335 cv
359.047 64.2038 358.987 64.064 358.917 63.9242 cv
358.837 63.7745 358.707 63.5449 358.507 63.2054 cv
357.157 60.9992 li
355.586 63.3253 li
355.466 63.5049 355.356 63.6747 355.276 63.8344 cv
355.196 63.9841 355.136 64.1339 355.096 64.2537 cv
355.066 64.3834 355.056 64.5332 355.056 64.7129 cv
355.056 64.8826 355.126 65.0323 355.256 65.1621 cv
355.396 65.2919 355.596 65.3717 355.856 65.3917 cv
355.856 66.0306 li
351.855 66.0306 li
351.855 65.3917 li
352.145 65.3019 352.415 65.1422 352.685 64.8926 cv
352.945 64.653 353.345 64.1339 353.886 63.3552 cv
356.406 59.7514 li
353.966 55.7083 li
353.706 55.269 353.475 54.9096 353.285 54.6201 cv
353.095 54.3306 352.935 54.101 352.805 53.9513 cv
352.675 53.8015 352.565 53.6917 352.465 53.6318 cv
352.365 53.5719 352.245 53.522 352.115 53.492 cv
cp
339.471 52.8631 mo
350.855 52.8631 li
350.855 56.2473 li
349.524 56.2473 li
349.394 55.7582 349.274 55.3788 349.174 55.1193 cv
349.074 54.8597 348.944 54.6501 348.804 54.4803 cv
348.654 54.3006 348.484 54.1808 348.284 54.101 cv
348.084 54.0311 347.774 53.9912 347.363 53.9912 cv
346.663 53.9912 li
346.663 63.6147 li
346.663 64.1139 346.693 64.4633 346.743 64.663 cv
346.793 64.8526 346.893 65.0124 347.043 65.1322 cv
347.193 65.252 347.463 65.3418 347.834 65.3917 cv
347.834 66.0306 li
342.492 66.0306 li
342.492 65.3917 li
342.762 65.3518 342.982 65.2919 343.142 65.222 cv
343.292 65.1422 343.412 65.0423 343.492 64.9026 cv
343.572 64.7728 343.612 64.5931 343.632 64.3834 cv
343.652 64.1738 343.662 63.9242 343.662 63.6147 cv
343.662 53.9912 li
342.882 53.9912 li
342.492 53.9912 342.172 54.0411 341.942 54.1409 cv
341.712 54.2408 341.511 54.4404 341.331 54.7299 cv
341.161 55.0095 340.981 55.5186 340.791 56.2473 cv
339.471 56.2473 li
cp
ef
211.378 176.602 mo
556.983 176.602 li
556.983 137.668 li
555.332 139.316 li
806.856 139.316 li
806.856 136.021 li
553.682 136.021 li
553.682 174.955 li
555.332 173.308 li
211.378 173.308 li
cp
f
767.282 135.901 mo
806.776 135.901 li
806.776 174.236 li
805.125 172.589 li
812.598 172.589 li
812.598 175.883 li
803.474 175.883 li
803.474 137.549 li
805.125 139.196 li
767.282 139.196 li
cp
f
64.0335 153.421 mo
67.9498 153.421 li
71.374 159.361 li
71.587 159.731 71.8641 160.24 72.2052 160.869 cv
72.5474 161.508 72.8505 162.107 73.1145 162.676 cv
73.2696 162.676 li
73.1986 161.138 73.1636 159.461 73.1636 157.644 cv
73.1636 155.847 li
73.1636 155.418 73.1466 155.119 73.1145 154.929 cv
73.0825 154.749 73.0305 154.609 72.9595 154.51 cv
72.8895 154.42 72.8004 154.34 72.6944 154.28 cv
72.5874 154.21 72.3993 154.14 72.1282 154.06 cv
72.1282 153.421 li
75.7844 153.421 li
75.7844 154.06 li
75.5263 154.14 75.3443 154.21 75.2373 154.27 cv
75.1312 154.33 75.0412 154.41 74.9672 154.5 cv
74.8921 154.599 74.8361 154.749 74.7971 154.939 cv
74.7591 155.139 74.7391 155.438 74.7391 155.847 cv
74.7391 166.599 li
72.2833 166.599 li
67.9308 159.092 li
67.3446 158.074 66.9125 157.275 66.6354 156.696 cv
66.5484 156.696 li
66.6124 158.074 66.6444 159.541 66.6444 161.078 cv
66.6444 164.183 li
66.6444 164.662 66.6684 165.002 66.7174 165.201 cv
66.7654 165.391 66.8525 165.541 66.9785 165.651 cv
67.1046 165.77 67.3406 165.87 67.6888 165.96 cv
67.6888 166.599 li
64.0335 166.599 li
64.0335 165.96 li
64.3757 165.87 64.6087 165.76 64.7348 165.641 cv
64.8608 165.531 64.9478 165.371 64.9959 165.191 cv
65.0439 165.002 65.0679 164.662 65.0679 164.183 cv
65.0679 155.837 li
65.0679 155.348 65.0469 155.019 65.0059 154.839 cv
64.9639 154.649 64.8768 154.5 64.7448 154.38 cv
64.6117 154.25 64.3757 154.15 64.0335 154.06 cv
cp
52.2987 153.421 mo
61.8928 153.421 li
61.8928 156.486 li
60.5674 156.486 li
60.3543 155.877 60.1743 155.468 60.0262 155.248 cv
59.8772 155.039 59.7001 154.869 59.494 154.739 cv
59.288 154.609 58.9359 154.55 58.4397 154.55 cv
56.331 154.55 li
56.331 159.182 li
57.6084 159.182 li
57.8915 159.182 58.1146 159.142 58.2756 159.062 cv
58.4367 158.982 58.5707 158.852 58.6768 158.663 cv
58.7828 158.473 58.8848 158.183 58.9819 157.794 cv
60.0742 157.794 li
60.0742 161.717 li
58.9819 161.717 li
58.8908 161.338 58.7908 161.058 58.6818 160.859 cv
58.5717 160.659 58.4417 160.519 58.2896 160.44 cv
58.1386 160.36 57.9115 160.31 57.6084 160.31 cv
56.331 160.31 li
56.331 165.471 li
58.4297 165.471 li
58.6558 165.471 58.8458 165.451 59.0009 165.421 cv
59.1559 165.391 59.294 165.341 59.417 165.271 cv
59.5391 165.201 59.6571 165.102 59.7691 164.982 cv
59.8822 164.862 59.9822 164.732 60.0692 164.592 cv
60.1563 164.443 60.2483 164.263 60.3453 164.033 cv
60.4414 163.794 60.5484 163.474 60.6644 163.075 cv
61.9889 163.075 li
61.8058 166.599 li
52.2987 166.599 li
52.2987 165.96 li
52.6468 165.87 52.8837 165.77 53.0094 165.651 cv
53.1351 165.531 53.2206 165.381 53.2657 165.191 cv
53.3109 165.002 53.3334 164.662 53.3334 164.173 cv
53.3334 155.857 li
53.3334 155.368 53.3125 155.029 53.2706 154.839 cv
53.2287 154.649 53.1432 154.49 53.0143 154.38 cv
52.8853 154.26 52.6468 154.16 52.2987 154.06 cv
cp
ef
212.749 175.923 mo
210.358 175.923 li
210.358 145.215 li
212.009 146.863 li
105.628 146.863 li
105.628 143.568 li
213.659 143.568 li
213.659 174.276 li
212.009 172.629 li
212.749 172.629 li
cp
f
767.282 122.055 mo
808.096 122.055 li
808.096 88.7918 li
806.445 90.439 li
812.598 90.439 li
812.598 87.1446 li
804.795 87.1446 li
804.795 120.408 li
806.445 118.761 li
767.282 118.761 li
cp
f
768.843 74.017 mo
809.657 74.017 li
809.657 40.7538 li
808.006 42.401 li
814.158 42.401 li
814.158 39.1066 li
806.355 39.1066 li
806.355 72.3698 li
808.006 70.7226 li
768.843 70.7226 li
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/MKLSCB+CambriaMath*1 uf
/MKLSCB+CambriaMath uf
/KAAAAA+CambriaMath uf
/MKLSCA+Calibri-Bold*1 uf
/MKLSCA+Calibri-Bold uf
/IAAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
