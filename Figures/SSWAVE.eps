%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SSWAVE.pdf
%%Creator: Adobe Acrobat 22.1.0
%%For: lwzz0
%%CreationDate: 2022/5/30, 13:42:04
%%BoundingBox: -1 0 1137 563
%%HiResBoundingBox: 0 0 1136.1638 562.9176
%%CropBox: 0 0 1136.1638 562.9176
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1181 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.425dc87, 2021/10/27-16:20:32        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® LTSC"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® LTSC"
   xmp:CreateDate="2022-05-30T13:41:32+08:00"
   xmp:ModifyDate="2022-05-30T13:41:54+08:00"
   xmp:MetadataDate="2022-05-30T13:41:54+08:00"
   xmpMM:DocumentID="uuid:24609816-B5F3-4EE0-9961-8AF523FC9A45"
   xmpMM:InstanceID="uuid:2c625591-6110-4fb7-8108-94a62bb5e1bf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>李 王臻</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -562.918 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-4.57764e-5 0 mo
-4.57764e-5 562.918 li
1136.16 562.918 li
1136.16 0 li
cp
clp
gsave
-.0657959 563.63 mo
1136.93 563.63 li
1136.93 -.369873 li
-.0657959 -.369873 li
cp
clp
gsave
-2.0658 773.63 mo
1152.45 773.63 li
1152.45 -68.17 li
-2.0658 -68.17 li
cp
eclp
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
-2.0658 773.72 mo
1152.48 773.72 li
1152.48 -68.1702 li
-2.0658 -68.1702 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
grestore
222.403 511.274 mo
642.895 511.274 li
642.895 147.969 li
222.403 147.969 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.166293 .082826 0 0 cmyk
ef
222.403 511.274 mo
642.895 511.274 li
642.895 147.969 li
222.403 147.969 li
cp
.874327 .707973 .187198 0 cmyk
.55 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
643.473 510.39 mo
951.755 510.39 li
951.755 147.085 li
643.473 147.085 li
cp
.00628672 .137575 .155398 0 cmyk
ef
643.473 510.39 mo
951.755 510.39 li
951.755 147.085 li
643.473 147.085 li
cp
.874327 .707973 .187198 0 cmyk
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
93.7478 515.816 mo
93.7503 233.573 li
87.66 233.573 li
87.6575 515.816 li
cp
99.8406 236.617 mo
90.7039 218.398 li
81.5696 236.617 li
cp
.997223 .918425 .647791 .507591 cmyk
f
90.7039 511.772 mo
1013.64 511.772 li
1013.64 517.85 li
90.7039 517.85 li
cp
1010.59 505.695 mo
1028.85 514.81 li
1010.59 523.927 li
cp
f
91.7374 354.151 mo
201.602 354.151 li
201.602 362.254 li
91.7374 362.254 li
cp
.00161746 .252781 .875608 0 cmyk
f
233.772 387.741 mo
405.248 387.741 li
405.248 395.844 li
233.772 395.844 li
cp
f
408.201 390.553 mo
411.056 395.12 li
410.982 395.036 li
412.434 397.227 li
412.385 397.146 li
413.812 399.228 li
413.738 399.127 li
415.19 401.079 li
415.018 400.871 li
416.494 402.621 li
416.322 402.42 li
417.798 403.947 li
417.503 403.677 li
419.029 404.966 li
418.61 404.664 li
420.136 405.659 li
419.668 405.401 li
421.219 406.157 li
420.727 405.953 li
422.277 406.469 li
421.883 406.358 li
423.458 406.707 li
423.064 406.638 li
424.639 406.823 li
424.418 406.803 li
425.993 406.896 li
425.746 406.889 li
428.945 406.869 li
428.995 414.972 li
425.648 414.992 li
423.827 414.886 li
421.908 414.665 li
419.914 414.223 li
417.897 413.558 li
415.879 412.571 li
413.935 411.294 li
412.089 409.713 li
410.367 407.945 li
408.718 405.99 li
407.168 403.881 li
405.667 401.71 li
404.166 399.437 li
401.311 394.828 li
cp
f
428.97 414.916 mo
954.093 412.05 li
954.044 403.947 li
428.945 406.813 li
cp
f
939.058 309.789 mo
632.4 460.4 li
635.968 467.67 li
942.65 317.057 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
203.797 355.971 mo
206.804 360.484 li
209.789 364.93 li
209.767 364.901 li
212.703 369.191 li
212.676 369.151 li
215.518 373.203 li
215.483 373.154 li
218.215 376.93 li
218.158 376.854 li
219.487 378.605 li
219.46 378.568 li
220.735 380.208 li
220.666 380.122 li
221.921 381.652 li
221.886 381.608 li
223.067 383.01 li
222.959 382.887 li
224.123 384.156 li
224.064 384.095 li
225.154 385.237 li
225.031 385.114 li
226.064 386.109 li
225.877 385.942 li
226.874 386.789 li
226.709 386.654 li
227.649 387.373 li
227.403 387.199 li
228.309 387.788 li
228.053 387.633 li
228.921 388.112 li
228.636 387.97 li
229.448 388.338 li
228.968 388.156 li
230.518 388.635 li
229.839 388.488 li
231.262 388.672 li
230.575 388.643 li
231.941 388.586 li
231.473 388.633 li
232.765 388.429 li
232.534 388.473 li
233.806 388.196 li
235.533 396.114 li
234.143 396.416 li
232.504 396.674 li
230.558 396.753 li
228.449 396.478 li
226.32 395.822 li
225.129 395.282 li
223.993 394.653 li
222.836 393.9 li
221.692 393.025 li
220.518 392.029 li
219.332 390.887 li
218.153 389.652 li
216.908 388.289 li
215.656 386.808 li
214.349 385.215 li
213.027 383.516 li
211.657 381.711 li
208.881 377.873 li
206.009 373.777 li
203.049 369.453 li
200.045 364.972 li
197.035 360.459 li
cp
.00161746 .252781 .875608 0 cmyk
f
209.6 309.789 mo
88.7451 369.846 li
92.3674 377.1 li
213.219 317.032 li
cp
1 /0 /CSD get_res sepcs
.816 sep
f
232 460.226 mo
635.156 460.226 li
635.156 468.328 li
232 468.328 li
cp
f
215.087 314.209 mo
217.302 337.184 li
218.426 348.536 li
219.553 359.745 li
219.551 359.725 li
220.712 370.738 li
220.712 370.72 li
221.894 381.475 li
221.891 381.458 li
223.089 391.935 li
223.087 391.906 li
224.322 402.034 li
224.32 401.998 li
224.965 406.913 li
225.609 411.709 li
226.254 416.391 li
226.249 416.364 li
226.913 420.949 li
226.909 420.917 li
227.593 425.373 li
227.588 425.341 li
228.289 429.687 li
228.284 429.665 li
228.985 433.864 li
228.978 433.822 li
229.699 437.874 li
229.694 437.849 li
230.413 441.753 li
230.4 441.687 li
231.158 445.444 li
231.151 445.41 li
231.906 448.999 li
231.889 448.921 li
232.684 452.346 li
232.672 452.297 li
233.464 455.538 li
233.447 455.467 li
234.259 458.544 li
234.237 458.46 li
235.066 461.35 li
235.039 461.257 li
235.888 463.965 li
228.136 466.384 li
227.273 463.631 li
226.416 460.65 li
225.585 457.498 li
224.778 454.195 li
223.968 450.706 li
223.2 447.06 li
222.432 443.251 li
221.704 439.303 li
220.978 435.217 li
220.272 430.986 li
219.566 426.613 li
218.879 422.125 li
218.21 417.509 li
217.56 412.787 li
216.913 407.967 li
216.266 403.031 li
215.023 392.871 li
213.822 382.366 li
212.639 371.595 li
211.475 360.562 li
210.348 349.334 li
209.221 337.96 li
207.006 314.994 li
cp
f
212.557 255.156 mo
125.4 255.156 li
125.4 263.259 li
212.557 263.259 li
cp
.61709 .780514 0 0 cmyk
f
215.085 257.734 mo
224.312 390.18 li
216.212 390.742 li
206.984 258.299 li
cp
f
220.789 394.737 mo
630.431 393.782 li
630.431 385.679 li
220.769 386.634 li
cp
f
639.413 500.139 mo
624.845 388.488 li
632.892 387.439 li
647.484 499.09 li
cp
f
640.988 494.11 mo
740.229 494.368 li
740.205 502.471 li
640.963 502.213 li
cp
f
742.469 499.706 mo
758.119 258.274 li
749.999 257.758 li
734.373 499.183 li
cp
f
752.336 255.156 mo
953.994 256.383 li
953.945 264.486 li
752.263 263.259 li
cp
f
644.26 410.945 mo
644.26 423.1 li
641.234 423.1 li
641.234 410.945 li
cp
644.26 432.217 mo
644.26 444.371 li
641.234 444.371 li
641.234 432.217 li
cp
644.26 453.485 mo
644.26 465.64 li
641.234 465.64 li
641.234 453.485 li
cp
644.26 474.757 mo
644.26 486.911 li
641.234 486.911 li
641.234 474.757 li
cp
644.26 496.026 mo
644.26 508.18 li
641.234 508.18 li
641.234 496.026 li
cp
644.26 517.297 mo
644.26 529.451 li
641.234 529.451 li
641.234 517.297 li
cp
644.26 538.566 mo
644.26 545.309 li
641.234 545.309 li
641.234 538.566 li
cp
.899962 .828183 .680751 .520256 cmyk
f
30.6859 381.36 mo
37.3038 381.36 li
37.3038 382.148 li
36.8889 382.197 36.5818 382.312 36.3822 382.494 cv
36.1829 382.678 36.0833 382.936 36.0833 383.27 cv
36.0833 383.533 36.1071 383.791 36.1549 384.041 cv
36.2029 384.292 36.3025 384.692 36.4541 385.242 cv
38.8238 393.816 li
41.7794 385.276 li
41.9 384.942 41.9935 384.628 42.0599 384.333 cv
42.1288 384.039 42.1633 383.729 42.1633 383.403 cv
42.1633 383.012 42.0599 382.715 41.8581 382.506 cv
41.6539 382.3 41.3414 382.18 40.9181 382.148 cv
40.9181 381.36 li
46.0759 381.36 li
46.0759 382.148 li
45.7732 382.197 45.5148 382.293 45.3032 382.44 cv
45.0916 382.587 44.9021 382.799 44.7298 383.074 cv
44.5576 383.349 44.3558 383.796 44.1245 384.417 cv
39.111 397.745 li
36.3466 397.745 li
32.3973 384.37 li
32.2216 383.773 32.0742 383.349 31.9544 383.098 cv
31.8348 382.848 31.6793 382.644 31.4878 382.489 cv
31.2964 382.335 31.0289 382.219 30.6859 382.148 cv
cp
.997223 .918425 .647791 .507591 cmyk
ef
45.1703 390.69 mo
53.6746 390.69 li
53.6746 393.482 li
52.4689 393.482 li
52.2769 392.925 52.1121 392.549 51.9767 392.353 cv
51.8414 392.156 51.6814 392.002 51.4944 391.889 cv
51.3049 391.773 50.9875 391.717 50.5347 391.717 cv
48.8368 391.717 li
48.8368 396.183 li
49.9638 396.183 li
50.2394 396.183 50.4511 396.141 50.6012 396.058 cv
50.7513 395.972 50.8743 395.83 50.9703 395.631 cv
51.0662 395.432 51.1474 395.152 51.2114 394.788 cv
52.2056 394.788 li
52.2056 398.614 li
51.2114 398.614 li
51.1425 398.246 51.0564 397.961 50.958 397.76 cv
50.8571 397.558 50.734 397.416 50.5889 397.335 cv
50.4412 397.251 50.232 397.212 49.9638 397.212 cv
48.8368 397.212 li
48.8368 400.468 li
48.8368 400.922 48.8614 401.241 48.9082 401.418 cv
48.9549 401.597 49.046 401.74 49.1838 401.85 cv
49.3216 401.958 49.5627 402.037 49.9023 402.091 cv
49.9023 402.67 li
45.1703 402.67 li
45.1703 402.091 li
45.4804 402.015 45.692 401.921 45.8076 401.813 cv
45.9208 401.705 46.002 401.565 46.0439 401.394 cv
46.0882 401.219 46.1103 400.907 46.1103 400.458 cv
46.1103 392.903 li
46.1103 392.458 46.0906 392.149 46.0537 391.977 cv
46.0168 391.803 45.938 391.665 45.8199 391.56 cv
45.7043 391.454 45.4853 391.358 45.1703 391.27 cv
cp
59.4352 390.55 mo
59.9569 390.55 60.4564 390.577 60.9314 390.634 cv
61.4063 390.688 61.9476 390.786 62.5579 390.926 cv
62.5579 393.472 li
61.3521 393.472 li
61.1947 392.812 60.9584 392.331 60.6484 392.029 cv
60.3383 391.727 59.8905 391.577 59.3023 391.577 cv
58.7757 391.577 58.3525 391.714 58.0326 391.989 cv
57.7127 392.264 57.5528 392.638 57.5528 393.111 cv
57.5528 393.453 57.6192 393.745 57.7496 393.995 cv
57.8825 394.243 58.104 394.486 58.414 394.722 cv
58.7265 394.96 59.1768 395.23 59.7699 395.535 cv
60.4909 395.908 61.0569 396.276 61.4703 396.635 cv
61.8837 396.996 62.1888 397.389 62.3857 397.811 cv
62.5825 398.236 62.681 398.729 62.681 399.292 cv
62.681 400.011 62.5136 400.635 62.179 401.165 cv
61.8443 401.693 61.3595 402.101 60.7197 402.386 cv
60.0799 402.668 59.3417 402.81 58.5026 402.81 cv
57.9046 402.81 57.2821 402.776 56.6349 402.71 cv
55.9853 402.641 55.3775 402.543 54.809 402.415 cv
54.809 399.712 li
56.0148 399.712 li
56.16 400.409 56.4061 400.927 56.7481 401.271 cv
57.0901 401.612 57.5946 401.784 58.2565 401.784 cv
58.8373 401.784 59.29 401.634 59.6149 401.335 cv
59.9397 401.038 60.1046 400.613 60.1046 400.063 cv
60.1046 399.525 59.9471 399.076 59.6321 398.717 cv
59.3196 398.356 58.7757 397.983 58.0006 397.597 cv
57.3559 397.281 56.8195 396.954 56.3864 396.618 cv
55.9557 396.281 55.6162 395.891 55.3676 395.447 cv
55.1191 395.002 54.9936 394.494 54.9936 393.919 cv
54.9936 393.2 55.1732 392.588 55.53 392.085 cv
55.8868 391.582 56.4061 391.201 57.0828 390.941 cv
57.7595 390.681 58.5444 390.55 59.4352 390.55 cv
cp
ef
71.5076 250.294 mo
71.013 250.294 70.6562 250.294 70.4421 250.319 cv
70.4421 263.75 li
70.5849 263.774 70.9491 263.774 71.5298 263.774 cv
72.7602 263.774 73.7149 263.529 74.3965 263.038 cv
75.0782 262.547 75.5974 261.785 75.9517 260.779 cv
76.3085 259.772 76.4857 258.495 76.4857 256.973 cv
76.4857 254.787 76.0576 253.118 75.2037 251.988 cv
74.3523 250.859 73.1194 250.294 71.5076 250.294 cv
cp
53.7903 250.294 mo
53.2957 250.294 52.9389 250.294 52.7248 250.319 cv
52.7248 263.75 li
52.8675 263.774 53.2317 263.774 53.8124 263.774 cv
55.0428 263.774 55.9976 263.529 56.6792 263.038 cv
57.3608 262.547 57.88 261.785 58.2344 260.779 cv
58.5912 259.772 58.7684 258.495 58.7684 256.973 cv
58.7684 254.787 58.3402 253.118 57.4863 251.988 cv
56.6349 250.859 55.4021 250.294 53.7903 250.294 cv
cp
65.4517 248.894 mo
71.675 248.894 li
73.0062 248.894 74.1209 248.993 75.0142 249.214 cv
75.9074 249.41 76.6998 249.729 77.3937 250.171 cv
78.0901 250.638 78.6487 251.153 79.0769 251.767 cv
79.5026 252.381 79.82 253.118 80.0267 253.928 cv
80.2359 254.738 80.3392 255.671 80.3392 256.678 cv
80.3392 258.372 80.0784 259.796 79.5617 260.975 cv
79.099 262.031 78.4297 262.915 77.5561 263.553 cv
76.6826 264.216 75.6392 264.658 74.4261 264.904 cv
73.5008 265.1 72.3197 265.198 70.8851 265.198 cv
65.4517 265.198 li
65.4517 264.413 li
65.8824 264.29 66.1752 264.167 66.3302 264.02 cv
66.4877 263.872 66.5935 263.701 66.6477 263.455 cv
66.7043 263.21 66.7313 262.792 66.7313 262.203 cv
66.7313 251.89 li
66.7313 251.301 66.7067 250.883 66.6551 250.638 cv
66.6034 250.417 66.4976 250.22 66.3376 250.073 cv
66.1777 249.926 65.8824 249.803 65.4517 249.68 cv
cp
47.7344 248.894 mo
53.9576 248.894 li
55.2889 248.894 56.4036 248.993 57.2968 249.214 cv
58.1901 249.41 58.9825 249.729 59.6764 250.171 cv
60.3728 250.638 60.9314 251.153 61.3595 251.767 cv
61.7852 252.381 62.1027 253.118 62.3094 253.928 cv
62.5185 254.738 62.6219 255.671 62.6219 256.678 cv
62.6219 258.372 62.3611 259.796 61.8443 260.975 cv
61.3817 262.031 60.7124 262.915 59.8388 263.553 cv
58.9652 264.216 57.9219 264.658 56.7087 264.904 cv
55.7835 265.1 54.6023 265.198 53.1677 265.198 cv
47.7344 265.198 li
47.7344 264.413 li
48.165 264.29 48.4579 264.167 48.6129 264.02 cv
48.7704 263.872 48.8762 263.701 48.9303 263.455 cv
48.9869 263.21 49.014 262.792 49.014 262.203 cv
49.014 251.89 li
49.014 251.301 48.9894 250.883 48.9377 250.638 cv
48.886 250.417 48.7802 250.22 48.6203 250.073 cv
48.4603 249.926 48.165 249.803 47.7344 249.68 cv
cp
30.8313 248.894 mo
37.449 248.894 li
37.449 249.68 li
37.0343 249.729 36.727 249.852 36.5277 250.024 cv
36.3281 250.22 36.2284 250.466 36.2284 250.81 cv
36.2284 251.055 36.2523 251.325 36.3003 251.571 cv
36.348 251.816 36.4479 252.234 36.5995 252.774 cv
38.969 261.343 li
41.9246 252.798 li
42.0452 252.479 42.1387 252.16 42.2051 251.865 cv
42.274 251.571 42.3085 251.252 42.3085 250.932 cv
42.3085 250.54 42.2051 250.245 42.0033 250.048 cv
41.7991 249.827 41.4866 249.705 41.0633 249.68 cv
41.0633 248.894 li
46.221 248.894 li
46.221 249.68 li
45.9184 249.729 45.66 249.827 45.4484 249.975 cv
45.2367 250.122 45.0473 250.319 44.875 250.613 cv
44.7028 250.883 44.501 251.325 44.2697 251.939 cv
39.2561 265.272 li
36.4917 265.272 li
32.5425 251.89 li
32.367 251.301 32.2194 250.883 32.0998 250.638 cv
31.98 250.368 31.8245 250.171 31.633 250.024 cv
31.4416 249.877 31.1743 249.754 30.8313 249.68 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
93.2139 391.749 mo
105.395 391.749 li
105.395 394.786 li
93.2139 394.786 li
cp
114.529 391.749 mo
126.709 391.749 li
126.709 394.786 li
114.529 394.786 li
cp
135.846 391.749 mo
148.027 391.749 li
148.027 394.786 li
135.846 394.786 li
cp
157.161 391.749 mo
169.342 391.749 li
169.342 394.786 li
157.161 394.786 li
cp
178.479 391.749 mo
190.659 391.749 li
190.659 394.786 li
178.479 394.786 li
cp
199.794 391.749 mo
211.974 391.749 li
211.974 394.786 li
199.794 394.786 li
cp
221.111 391.749 mo
233.292 391.749 li
233.292 394.786 li
221.111 394.786 li
cp
242.426 391.749 mo
246.07 391.749 li
246.07 394.786 li
242.426 394.786 li
cp
.997223 .918425 .647791 .507591 cmyk
f
92.9186 461.581 mo
105.099 461.581 li
105.099 464.618 li
92.9186 464.618 li
cp
114.234 461.581 mo
126.414 461.581 li
126.414 464.618 li
114.234 464.618 li
cp
135.551 461.581 mo
147.732 461.581 li
147.732 464.618 li
135.551 464.618 li
cp
156.866 461.581 mo
169.047 461.581 li
169.047 464.618 li
156.866 464.618 li
cp
178.183 461.581 mo
190.364 461.581 li
190.364 464.618 li
178.183 464.618 li
cp
199.498 461.581 mo
211.679 461.581 li
211.679 464.618 li
199.498 464.618 li
cp
220.816 461.581 mo
232.996 461.581 li
232.996 464.618 li
220.816 464.618 li
cp
242.131 461.581 mo
254.311 461.581 li
254.311 464.618 li
242.131 464.618 li
cp
263.436 461.581 mo
275.616 461.581 li
275.616 464.618 li
263.436 464.618 li
cp
284.77 461.581 mo
296.951 461.581 li
296.951 464.618 li
284.77 464.618 li
cp
306.08 461.581 mo
318.261 461.581 li
318.261 464.618 li
306.08 464.618 li
cp
327.391 461.581 mo
339.571 461.581 li
339.571 464.618 li
327.391 464.618 li
cp
348.701 461.581 mo
360.881 461.581 li
360.881 464.618 li
348.701 464.618 li
cp
370.035 461.581 mo
382.216 461.581 li
382.216 464.618 li
370.035 464.618 li
cp
391.345 461.581 mo
403.526 461.581 li
403.526 464.618 li
391.345 464.618 li
cp
412.655 461.581 mo
424.836 461.581 li
424.836 464.618 li
412.655 464.618 li
cp
433.965 461.581 mo
446.146 461.581 li
446.146 464.618 li
433.965 464.618 li
cp
455.3 461.581 mo
467.481 461.581 li
467.481 464.618 li
455.3 464.618 li
cp
476.61 461.581 mo
488.791 461.581 li
488.791 464.618 li
476.61 464.618 li
cp
497.92 461.581 mo
510.101 461.581 li
510.101 464.618 li
497.92 464.618 li
cp
519.23 461.581 mo
531.411 461.581 li
531.411 464.618 li
519.23 464.618 li
cp
540.565 461.581 mo
552.745 461.581 li
552.745 464.618 li
540.565 464.618 li
cp
561.875 461.581 mo
574.055 461.581 li
574.055 464.618 li
561.875 464.618 li
cp
583.185 461.581 mo
595.365 461.581 li
595.365 464.618 li
583.185 464.618 li
cp
604.495 461.581 mo
616.676 461.581 li
616.676 464.618 li
604.495 464.618 li
cp
625.83 461.581 mo
638.01 461.581 li
638.01 464.618 li
625.83 464.618 li
cp
647.14 461.581 mo
659.32 461.581 li
659.32 464.618 li
647.14 464.618 li
cp
668.45 461.581 mo
680.63 461.581 li
680.63 464.618 li
668.45 464.618 li
cp
689.76 461.581 mo
701.94 461.581 li
701.94 464.618 li
689.76 464.618 li
cp
711.094 461.581 mo
723.275 461.581 li
723.275 464.618 li
711.094 464.618 li
cp
732.404 461.581 mo
744.585 461.581 li
744.585 464.618 li
732.404 464.618 li
cp
753.714 461.581 mo
765.895 461.581 li
765.895 464.618 li
753.714 464.618 li
cp
775.024 461.581 mo
787.205 461.581 li
787.205 464.618 li
775.024 464.618 li
cp
796.359 461.581 mo
808.54 461.581 li
808.54 464.618 li
796.359 464.618 li
cp
817.669 461.581 mo
829.85 461.581 li
829.85 464.618 li
817.669 464.618 li
cp
838.979 461.581 mo
851.16 461.581 li
851.16 464.618 li
838.979 464.618 li
cp
860.289 461.581 mo
872.47 461.581 li
872.47 464.618 li
860.289 464.618 li
cp
881.624 461.581 mo
893.805 461.581 li
893.805 464.618 li
881.624 464.618 li
cp
902.934 461.581 mo
915.115 461.581 li
915.115 464.618 li
902.934 464.618 li
cp
924.244 461.581 mo
936.425 461.581 li
936.425 464.618 li
924.244 464.618 li
cp
f
92.9235 315.486 mo
105.104 315.461 li
105.094 312.416 li
92.9136 312.465 li
cp
114.241 315.412 mo
126.422 315.363 li
126.409 312.318 li
114.229 312.367 li
cp
135.556 315.338 mo
147.737 315.289 li
147.724 312.244 li
135.546 312.293 li
cp
156.873 315.265 mo
169.054 315.215 li
169.042 312.171 li
156.861 312.22 li
cp
178.188 315.166 mo
190.369 315.117 li
190.357 312.097 li
178.176 312.122 li
cp
199.506 315.093 mo
211.684 315.044 li
211.674 311.999 li
199.493 312.048 li
cp
220.821 315.019 mo
233.001 314.97 li
232.989 311.925 li
220.808 311.974 li
cp
242.136 314.921 mo
254.316 314.896 li
254.306 311.852 li
242.126 311.901 li
cp
263.46 314.847 mo
275.641 314.798 li
275.616 311.753 li
263.436 311.802 li
cp
284.77 314.773 mo
296.951 314.724 li
296.927 311.68 li
284.746 311.729 li
cp
306.08 314.7 mo
318.261 314.651 li
318.261 311.606 li
306.08 311.655 li
cp
327.391 314.602 mo
339.571 314.552 li
339.571 311.532 li
327.391 311.557 li
cp
348.725 314.528 mo
360.906 314.479 li
360.881 311.434 li
348.701 311.483 li
cp
370.035 314.454 mo
382.216 314.405 li
382.191 311.36 li
370.011 311.41 li
cp
391.345 314.356 mo
403.526 314.307 li
403.526 311.287 li
391.345 311.336 li
cp
412.655 314.282 mo
424.836 314.233 li
424.836 311.189 li
412.655 311.238 li
cp
433.99 314.209 mo
446.171 314.16 li
446.146 311.115 li
433.965 311.164 li
cp
455.3 314.135 mo
467.481 314.086 li
467.456 311.041 li
455.275 311.09 li
cp
476.61 314.037 mo
488.791 313.988 li
488.791 310.968 li
476.61 310.992 li
cp
497.92 313.963 mo
510.101 313.914 li
510.101 310.869 li
497.92 310.918 li
cp
519.255 313.89 mo
531.435 313.84 li
531.411 310.796 li
519.23 310.845 li
cp
540.565 313.791 mo
552.745 313.742 li
552.721 310.722 li
540.54 310.771 li
cp
561.875 313.718 mo
574.055 313.669 li
574.055 310.624 li
561.875 310.673 li
cp
583.185 313.644 mo
595.365 313.595 li
595.365 310.55 li
583.185 310.599 li
cp
604.519 313.57 mo
616.7 313.521 li
616.676 310.476 li
604.495 310.526 li
cp
625.83 313.472 mo
638.01 313.423 li
637.986 310.403 li
625.805 310.427 li
cp
647.14 313.398 mo
659.32 313.349 li
659.32 310.305 li
647.14 310.354 li
cp
668.45 313.325 mo
680.63 313.276 li
680.63 310.231 li
668.45 310.28 li
cp
689.784 313.227 mo
701.965 313.177 li
701.94 310.157 li
689.76 310.206 li
cp
711.094 313.153 mo
723.275 313.104 li
723.25 310.059 li
711.07 310.108 li
cp
732.404 313.079 mo
744.585 313.03 li
744.585 309.985 li
732.404 310.035 li
cp
753.714 313.006 mo
765.895 312.956 li
765.895 309.912 li
753.714 309.961 li
cp
775.049 312.907 mo
787.23 312.858 li
787.205 309.838 li
775.024 309.863 li
cp
796.359 312.834 mo
808.54 312.785 li
808.515 309.74 li
796.334 309.789 li
cp
817.669 312.76 mo
829.85 312.711 li
829.85 309.666 li
817.669 309.715 li
cp
838.979 312.662 mo
851.16 312.613 li
851.16 309.593 li
838.979 309.642 li
cp
860.289 312.588 mo
872.47 312.539 li
872.47 309.494 li
860.289 309.543 li
cp
881.624 312.514 mo
893.805 312.465 li
893.78 309.421 li
881.599 309.47 li
cp
902.934 312.416 mo
915.115 312.392 li
915.115 309.347 li
902.934 309.396 li
cp
924.244 312.343 mo
936.425 312.293 li
936.425 309.273 li
924.244 309.298 li
cp
f
913.392 330.439 mo
902.958 356.201 li
905.591 353.832 li
900.301 355.376 li
895.158 357.056 li
890.236 358.834 li
885.536 360.729 li
881.058 362.725 li
876.801 364.822 li
872.79 367.02 li
869 369.281 li
865.407 371.658 li
862.085 374.121 li
859.01 376.653 li
856.155 379.285 li
853.571 381.991 li
851.234 384.753 li
849.142 387.599 li
847.321 390.516 li
845.771 393.49 li
844.516 396.537 li
843.531 399.631 li
842.867 402.761 li
842.498 405.939 li
842.449 409.121 li
842.695 412.315 li
843.285 415.51 li
844.196 418.658 li
845.402 421.798 li
846.927 424.875 li
848.773 427.902 li
850.889 430.873 li
853.325 433.81 li
856.081 436.656 li
859.133 439.445 li
862.43 442.159 li
865.949 444.715 li
869.689 447.158 li
873.626 449.481 li
877.736 451.676 li
882.042 453.756 li
886.496 455.69 li
891.098 457.527 li
895.872 459.231 li
900.768 460.817 li
905.813 462.268 li
910.981 463.604 li
916.246 464.807 li
921.611 465.878 li
927.049 466.836 li
932.586 467.661 li
938.221 468.336 li
943.856 468.898 li
949.59 469.328 li
955.348 469.627 li
961.155 469.777 li
966.962 469.814 li
972.794 469.704 li
978.626 469.441 li
984.434 469.048 li
990.241 468.503 li
996.024 467.83 li
1001.78 467.003 li
1007.47 466.028 li
1013.1 464.901 li
1018.69 463.624 li
1024.17 462.212 li
1029.54 460.645 li
1034.68 458.968 li
1039.6 457.191 li
1044.3 455.293 li
1048.78 453.299 li
1053.04 451.199 li
1057.05 449.004 li
1060.84 446.74 li
1064.43 444.366 li
1067.75 441.903 li
1070.83 439.372 li
1073.68 436.739 li
1076.27 434.034 li
1078.61 431.271 li
1080.7 428.425 li
1082.52 425.501 li
1084.07 422.515 li
1085.32 419.493 li
1086.31 416.394 li
1086.97 413.261 li
1087.34 410.083 li
1087.39 406.904 li
1087.15 403.709 li
1086.55 400.517 li
1085.64 397.347 li
1084.44 394.221 li
1082.91 391.154 li
1081.07 388.1 li
1078.93 385.119 li
1076.49 382.219 li
1073.76 379.354 li
1070.73 376.579 li
1068.3 374.561 li
1065.71 372.621 li
1063.05 370.75 li
1060.25 368.943 li
1057.35 367.197 li
1054.32 365.51 li
1051.19 363.904 li
1047.92 362.352 li
1041.2 359.462 li
1034.07 356.83 li
1026.61 354.49 li
1018.83 352.42 li
1010.79 350.635 li
1002.5 349.132 li
993.981 347.932 li
985.295 347.05 li
976.461 346.471 li
967.479 346.208 li
958.448 346.284 li
949.417 346.692 li
951.238 347.03 li
cp
948.827 354.829 mo
958.744 354.382 li
958.596 354.384 li
967.479 354.311 li
967.332 354.311 li
976.141 354.569 li
975.993 354.561 li
984.704 355.131 li
984.557 355.119 li
993.071 355.985 li
992.923 355.966 li
1001.29 357.144 li
1001.12 357.12 li
1009.26 358.593 li
1009.11 358.561 li
1016.99 360.309 li
1016.82 360.27 li
1024.42 362.296 li
1024.25 362.247 li
1031.56 364.53 li
1031.36 364.464 li
1038.3 367.025 li
1038.1 366.946 li
1044.65 369.763 li
1044.5 369.699 li
1047.65 371.192 li
1047.53 371.135 li
1050.53 372.682 li
1050.43 372.621 li
1053.33 374.241 li
1053.21 374.173 li
1056.02 375.847 li
1055.89 375.776 li
1058.58 377.507 li
1058.45 377.424 li
1060.99 379.209 li
1060.86 379.125 li
1063.3 380.967 li
1063.18 380.854 li
1065.47 382.75 li
1065.32 382.619 li
1068.17 385.234 li
1067.98 385.04 li
1070.51 387.712 li
1070.34 387.516 li
1072.6 390.204 li
1072.43 389.981 li
1074.4 392.706 li
1074.2 392.417 li
1075.87 395.179 li
1075.7 394.887 li
1077.08 397.649 li
1076.93 397.332 li
1078.02 400.112 li
1077.89 399.741 li
1078.68 402.54 li
1078.61 402.172 li
1079.12 404.971 li
1079.07 404.556 li
1079.3 407.355 li
1079.27 406.982 li
1079.25 409.762 li
1079.27 409.337 li
1078.93 412.119 li
1079 411.753 li
1078.41 414.515 li
1078.51 414.14 li
1077.62 416.885 li
1077.74 416.551 li
1076.64 419.257 li
1076.76 418.96 li
1075.38 421.648 li
1075.55 421.351 li
1073.88 424.003 li
1074.05 423.758 li
1072.13 426.373 li
1072.31 426.157 li
1070.14 428.718 li
1070.31 428.526 li
1067.9 431.05 li
1068.07 430.873 li
1065.42 433.341 li
1065.59 433.189 li
1062.66 435.583 li
1062.83 435.458 li
1059.66 437.798 li
1059.83 437.675 li
1056.43 439.941 li
1056.58 439.838 li
1052.94 442.011 li
1053.09 441.935 li
1049.2 444.052 li
1049.37 443.973 li
1045.26 445.999 li
1045.39 445.933 li
1041.06 447.865 li
1041.18 447.809 li
1036.63 449.65 li
1036.77 449.596 li
1031.98 451.327 li
1032.1 451.288 li
1027.08 452.926 li
1027.2 452.889 li
1021.96 454.418 li
1022.11 454.382 li
1016.72 455.762 li
1016.82 455.737 li
1011.35 456.989 li
1011.45 456.965 li
1005.92 458.07 li
1006.04 458.05 li
1000.45 459.008 li
1000.58 458.991 li
994.916 459.801 li
995.04 459.786 li
989.355 460.449 li
989.429 460.442 li
983.745 460.974 li
983.843 460.967 li
978.11 461.353 li
978.208 461.348 li
972.474 461.606 li
972.573 461.603 li
966.864 461.714 li
966.962 461.711 li
961.229 461.674 li
961.327 461.677 li
955.618 461.529 li
955.717 461.534 li
950.057 461.24 li
950.156 461.245 li
944.52 460.82 li
944.619 460.83 li
939.058 460.277 li
939.131 460.287 li
933.619 459.624 li
933.742 459.639 li
928.304 458.828 li
928.427 458.846 li
923.063 457.905 li
923.161 457.922 li
917.895 456.874 li
918.018 456.896 li
912.851 455.717 li
912.949 455.747 li
907.929 454.438 li
908.028 454.468 li
903.081 453.048 li
903.229 453.088 li
898.431 451.541 li
898.554 451.58 li
893.903 449.923 li
894.051 449.974 li
889.547 448.189 li
889.67 448.238 li
885.364 446.36 li
885.512 446.426 li
881.353 444.42 li
881.501 444.494 li
877.539 442.375 li
877.687 442.458 li
873.897 440.231 li
874.069 440.334 li
870.501 437.997 li
870.649 438.102 li
867.302 435.671 li
867.499 435.821 li
864.374 433.26 li
864.546 433.412 li
861.692 430.78 li
861.839 430.942 li
859.28 428.29 li
859.477 428.519 li
857.238 425.81 li
857.41 426.039 li
855.466 423.313 li
855.638 423.578 li
853.965 420.833 li
854.137 421.135 li
852.759 418.373 li
852.907 418.699 li
851.824 415.9 li
851.947 416.256 li
851.16 413.477 li
851.234 413.852 li
850.717 411.053 li
850.766 411.468 li
850.545 408.669 li
850.569 409.042 li
850.594 406.26 li
850.569 406.687 li
850.914 403.905 li
850.84 404.271 li
851.43 401.509 li
851.332 401.882 li
852.218 399.139 li
852.095 399.464 li
853.227 396.738 li
853.079 397.055 li
854.457 394.386 li
854.285 394.671 li
855.958 392.019 li
855.786 392.267 li
857.705 389.652 li
857.533 389.865 li
859.699 387.307 li
859.526 387.498 li
861.938 384.974 li
861.766 385.151 li
864.423 382.683 li
864.251 382.835 li
867.179 380.441 li
867.007 380.564 li
870.181 378.227 li
870.009 378.347 li
873.405 376.083 li
873.257 376.184 li
876.899 374.011 li
876.752 374.089 li
880.615 371.973 li
880.467 372.051 li
884.577 370.025 li
884.454 370.092 li
888.785 368.157 li
888.662 368.213 li
893.214 366.372 li
893.066 366.428 li
897.865 364.697 li
897.742 364.737 li
902.762 363.099 li
902.639 363.136 li
909.75 361.053 li
919.347 337.339 li
913.958 339.532 li
cp
.46949 .402014 .372625 0 cmyk
f
881.058 444.609 mo
929.338 444.675 li
929.313 452.778 li
881.033 452.712 li
cp
.997223 .918425 .647791 .507591 cmyk
f
928.895 422.184 mo
975.895 422.068 li
975.87 413.965 li
928.87 414.081 li
cp
f
975.009 381.556 mo
1023.95 382.342 li
1023.83 390.442 li
974.886 389.657 li
cp
f
976.928 419.522 mo
979.955 382.695 li
971.859 382.035 li
968.833 418.859 li
cp
f
929.387 451.936 mo
933.029 415.473 li
924.958 414.668 li
921.291 451.131 li
cp
f
1026.54 388.974 mo
1028.11 359.303 li
1020.02 358.873 li
1018.44 388.544 li
cp
f
1046.03 406.022 mo
1046.03 412.35 li
1046.49 412.374 1047.03 412.387 1047.65 412.387 cv
1048.41 412.387 1049.03 412.293 1049.52 412.107 cv
1050.01 411.918 1050.41 411.591 1050.68 411.127 cv
1050.95 410.66 1051.07 410.022 1051.07 409.209 cv
1051.07 408.524 1050.97 407.952 1050.75 407.49 cv
1050.55 407.029 1050.21 406.668 1049.74 406.41 cv
1049.27 406.15 1048.59 406.022 1047.67 406.022 cv
cp
1047.65 398.879 mo
1047.08 398.879 1046.54 398.901 1046.03 398.941 cv
1046.03 404.625 li
1047.63 404.625 li
1048.41 404.625 1049.03 404.509 1049.5 404.279 cv
1049.94 404.048 1050.28 403.719 1050.53 403.292 cv
1050.78 402.867 1050.87 402.28 1050.87 401.531 cv
1050.87 400.615 1050.63 399.945 1050.11 399.52 cv
1049.59 399.093 1048.78 398.879 1047.65 398.879 cv
cp
1041.03 397.482 mo
1048.88 397.482 li
1049.69 397.482 1050.36 397.519 1050.9 397.59 cv
1051.42 397.661 1051.91 397.777 1052.33 397.931 cv
1052.77 398.086 1053.11 398.26 1053.36 398.457 cv
1053.63 398.651 1053.85 398.877 1054.02 399.132 cv
1054.2 399.385 1054.34 399.677 1054.44 400.004 cv
1054.54 400.33 1054.59 400.691 1054.59 401.089 cv
1054.59 402.889 1053.51 404.237 1051.34 405.138 cv
1051.34 405.246 li
1052.45 405.595 1053.31 406.103 1053.9 406.768 cv
1054.47 407.431 1054.76 408.229 1054.76 409.163 cv
1054.76 409.958 1054.64 410.651 1054.37 411.24 cv
1054.1 411.829 1053.7 412.313 1053.14 412.691 cv
1052.6 413.069 1051.96 413.347 1051.22 413.521 cv
1050.48 413.695 1049.54 413.784 1048.41 413.784 cv
1041.03 413.784 li
1041.03 412.995 li
1041.47 412.883 1041.77 412.757 1041.92 412.612 cv
1042.06 412.47 1042.16 412.281 1042.24 412.045 cv
1042.29 411.812 1042.31 411.392 1042.31 410.786 cv
1042.31 400.492 li
1042.31 399.888 1042.29 399.469 1042.24 399.233 cv
1042.19 398.997 1042.09 398.808 1041.92 398.666 cv
1041.77 398.523 1041.47 398.391 1041.03 398.27 cv
cp
1014.16 397.482 mo
1020.43 397.482 li
1020.43 398.27 li
1020.02 398.383 1019.72 398.511 1019.57 398.653 cv
1019.43 398.796 1019.3 398.987 1019.25 399.228 cv
1019.18 399.466 1019.15 399.879 1019.15 400.468 cv
1019.15 412.362 li
1021.47 412.362 li
1021.98 412.362 1022.38 412.269 1022.7 412.082 cv
1023.02 411.895 1023.29 411.581 1023.51 411.139 cv
1023.73 410.697 1023.98 409.97 1024.2 408.959 cv
1025.82 408.959 li
1025.58 413.784 li
1014.16 413.784 li
1014.16 412.995 li
1014.6 412.883 1014.9 412.757 1015.05 412.612 cv
1015.19 412.47 1015.29 412.278 1015.37 412.04 cv
1015.41 411.802 1015.44 411.38 1015.44 410.773 cv
1015.44 400.492 li
1015.44 399.888 1015.41 399.469 1015.37 399.233 cv
1015.32 398.997 1015.22 398.808 1015.05 398.666 cv
1014.9 398.523 1014.6 398.391 1014.16 398.27 cv
cp
1034.19 397.293 mo
1034.9 397.293 1035.57 397.33 1036.23 397.406 cv
1036.87 397.482 1037.61 397.615 1038.45 397.806 cv
1038.45 401.268 li
1036.8 401.268 li
1036.58 400.37 1036.26 399.714 1035.84 399.304 cv
1035.42 398.894 1034.81 398.69 1034.02 398.69 cv
1033.3 398.69 1032.71 398.877 1032.27 399.25 cv
1031.85 399.626 1031.63 400.134 1031.63 400.78 cv
1031.63 401.241 1031.73 401.642 1031.9 401.98 cv
1032.07 402.317 1032.37 402.648 1032.81 402.97 cv
1033.23 403.292 1033.85 403.66 1034.66 404.075 cv
1035.62 404.586 1036.4 405.084 1036.97 405.573 cv
1037.54 406.064 1037.93 406.597 1038.2 407.174 cv
1038.47 407.751 1038.62 408.421 1038.62 409.185 cv
1038.62 410.164 1038.37 411.014 1037.93 411.736 cv
1037.46 412.455 1036.8 413.01 1035.94 413.396 cv
1035.08 413.781 1034.07 413.975 1032.93 413.975 cv
1032.1 413.975 1031.26 413.928 1030.38 413.838 cv
1029.49 413.744 1028.68 413.612 1027.89 413.437 cv
1027.89 409.759 li
1029.54 409.759 li
1029.74 410.707 1030.08 411.412 1030.52 411.878 cv
1030.99 412.345 1031.68 412.578 1032.59 412.578 cv
1033.38 412.578 1033.99 412.374 1034.44 411.969 cv
1034.88 411.561 1035.1 410.984 1035.1 410.236 cv
1035.1 409.504 1034.88 408.892 1034.46 408.404 cv
1034.04 407.915 1033.3 407.407 1032.25 406.881 cv
1031.36 406.452 1030.62 406.007 1030.06 405.551 cv
1029.47 405.091 1029 404.561 1028.65 403.955 cv
1028.31 403.351 1028.14 402.658 1028.14 401.877 cv
1028.14 400.898 1028.38 400.068 1028.87 399.383 cv
1029.37 398.698 1030.08 398.177 1030.99 397.823 cv
1031.9 397.47 1032.98 397.293 1034.19 397.293 cv
cp
ef
1064.24 408.482 mo
1078.98 408.482 li
1078.98 410.069 li
1064.24 410.069 li
cp
1064.24 403.525 mo
1078.98 403.525 li
1078.98 405.114 li
1064.24 405.114 li
cp
ef
1087.91 378.919 mo
1094.53 378.919 li
1094.53 379.707 li
1094.11 379.756 1093.81 379.872 1093.62 380.053 cv
1093.42 380.238 1093.32 380.495 1093.32 380.832 cv
1093.32 381.095 1093.32 381.35 1093.37 381.6 cv
1093.42 381.851 1093.52 382.251 1093.69 382.801 cv
1096.05 391.375 li
1099.01 382.838 li
1099.13 382.502 1099.23 382.187 1099.28 381.893 cv
1099.35 381.598 1099.4 381.289 1099.4 380.962 cv
1099.4 380.572 1099.28 380.274 1099.08 380.066 cv
1098.88 379.859 1098.56 379.739 1098.14 379.707 cv
1098.14 378.919 li
1103.31 378.919 li
1103.31 379.707 li
1102.99 379.756 1102.75 379.855 1102.52 380.002 cv
1102.33 380.149 1102.13 380.36 1101.96 380.633 cv
1101.79 380.908 1101.59 381.357 1101.34 381.976 cv
1096.35 395.304 li
1093.57 395.304 li
1089.63 381.929 li
1089.46 381.333 1089.31 380.908 1089.19 380.658 cv
1089.06 380.407 1088.92 380.203 1088.72 380.049 cv
1088.52 379.894 1088.25 379.781 1087.91 379.707 cv
cp
ef
1102.4 388.25 mo
1110.89 388.25 li
1110.89 391.041 li
1109.69 391.041 li
1109.51 390.484 1109.34 390.108 1109.19 389.912 cv
1109.07 389.718 1108.9 389.561 1108.73 389.448 cv
1108.53 389.333 1108.21 389.276 1107.77 389.276 cv
1106.07 389.276 li
1106.07 393.745 li
1107.2 393.745 li
1107.47 393.745 1107.67 393.701 1107.82 393.617 cv
1107.99 393.531 1108.11 393.389 1108.18 393.19 cv
1108.28 392.991 1108.38 392.711 1108.43 392.348 cv
1109.44 392.348 li
1109.44 396.176 li
1108.43 396.176 li
1108.36 395.805 1108.28 395.52 1108.18 395.319 cv
1108.09 395.117 1107.96 394.975 1107.82 394.894 cv
1107.67 394.811 1107.47 394.771 1107.2 394.771 cv
1106.07 394.771 li
1106.07 398.027 li
1106.07 398.484 1106.09 398.801 1106.14 398.98 cv
1106.19 399.157 1106.27 399.302 1106.41 399.41 cv
1106.56 399.518 1106.78 399.599 1107.13 399.65 cv
1107.13 400.23 li
1102.4 400.23 li
1102.4 399.65 li
1102.7 399.574 1102.92 399.481 1103.04 399.373 cv
1103.14 399.265 1103.24 399.125 1103.26 398.953 cv
1103.31 398.781 1103.34 398.469 1103.34 398.017 cv
1103.34 390.462 li
1103.34 390.018 1103.31 389.708 1103.29 389.536 cv
1103.24 389.362 1103.16 389.224 1103.04 389.119 cv
1102.92 389.013 1102.72 388.918 1102.4 388.829 cv
cp
1116.94 388.11 mo
1117.49 388.11 1117.98 388.137 1118.45 388.193 cv
1118.94 388.247 1119.48 388.345 1120.07 388.488 cv
1120.07 391.032 li
1118.86 391.032 li
1118.72 390.371 1118.47 389.89 1118.18 389.588 cv
1117.86 389.286 1117.41 389.136 1116.82 389.136 cv
1116.3 389.136 1115.86 389.274 1115.54 389.549 cv
1115.22 389.824 1115.07 390.199 1115.07 390.673 cv
1115.07 391.012 1115.15 391.304 1115.27 391.555 cv
1115.39 391.803 1115.62 392.046 1115.94 392.281 cv
1116.26 392.52 1116.7 392.79 1117.29 393.094 cv
1118 393.47 1118.57 393.836 1118.99 394.197 cv
1119.41 394.555 1119.7 394.948 1119.9 395.373 cv
1120.09 395.795 1120.19 396.289 1120.19 396.851 cv
1120.19 397.57 1120.05 398.194 1119.7 398.725 cv
1119.36 399.255 1118.89 399.66 1118.25 399.945 cv
1117.61 400.227 1116.87 400.37 1116.03 400.37 cv
1115.42 400.37 1114.8 400.335 1114.16 400.269 cv
1113.5 400.203 1112.91 400.104 1112.32 399.974 cv
1112.32 397.271 li
1113.52 397.271 li
1113.67 397.968 1113.92 398.486 1114.26 398.83 cv
1114.61 399.171 1115.12 399.343 1115.79 399.343 cv
1116.35 399.343 1116.82 399.194 1117.14 398.896 cv
1117.46 398.597 1117.63 398.172 1117.63 397.622 cv
1117.63 397.084 1117.46 396.635 1117.17 396.276 cv
1116.85 395.915 1116.3 395.542 1115.52 395.157 cv
1114.88 394.84 1114.34 394.513 1113.92 394.177 cv
1113.47 393.841 1113.13 393.45 1112.88 393.006 cv
1112.64 392.561 1112.52 392.053 1112.52 391.479 cv
1112.52 390.759 1112.69 390.148 1113.06 389.644 cv
1113.4 389.141 1113.92 388.76 1114.61 388.5 cv
1115.27 388.24 1116.06 388.11 1116.94 388.11 cv
cp
ef
1097.78 413.793 mo
1098.93 413.793 1099.89 413.951 1100.65 414.265 cv
1101.39 414.579 1101.91 415.004 1102.25 415.542 cv
1102.57 416.079 1102.75 416.706 1102.75 417.423 cv
1102.75 418.051 1102.62 418.638 1102.4 419.178 cv
1102.16 419.718 1101.76 420.337 1101.17 421.03 cv
1100.61 421.722 1099.62 422.714 1098.24 424.003 cv
1097.82 424.401 1097.33 424.924 1096.74 425.572 cv
1096.15 426.223 1095.68 426.778 1095.34 427.239 cv
1095.34 427.357 li
1099.6 427.357 li
1100.11 427.357 1100.51 427.32 1100.75 427.244 cv
1101 427.168 1101.2 427.038 1101.34 426.851 cv
1101.49 426.662 1101.61 426.382 1101.71 426.009 cv
1103.09 426.009 li
1102.82 430.284 li
1091.87 430.284 li
1091.87 429.496 li
1092.48 428.087 1093.74 426.272 1095.63 424.05 cv
1096.5 423.038 1097.14 422.208 1097.6 421.555 cv
1098.05 420.902 1098.39 420.286 1098.61 419.704 cv
1098.83 419.122 1098.93 418.523 1098.93 417.901 cv
1098.93 417.025 1098.76 416.337 1098.37 415.841 cv
1097.97 415.343 1097.43 415.095 1096.74 415.095 cv
1095.46 415.095 1094.63 416.03 1094.26 417.901 cv
1092.09 417.901 li
1092.09 415.083 li
1093.4 414.557 1094.45 414.211 1095.24 414.044 cv
1096.05 413.877 1096.89 413.793 1097.78 413.793 cv
cp
ef
1106.22 410.938 mo
1109.76 410.938 li
1112.88 416.335 li
1113.08 416.674 1113.33 417.133 1113.65 417.712 cv
1113.94 418.292 1114.24 418.839 1114.46 419.355 cv
1114.61 419.355 li
1114.53 417.955 1114.51 416.428 1114.51 414.773 cv
1114.51 413.14 li
1114.51 412.755 1114.51 412.477 1114.46 412.31 cv
1114.43 412.143 1114.39 412.018 1114.34 411.93 cv
1114.26 411.841 1114.19 411.77 1114.09 411.714 cv
1113.99 411.66 1113.82 411.593 1113.57 411.517 cv
1113.57 410.938 li
1116.9 410.938 li
1116.9 411.517 li
1116.65 411.593 1116.5 411.657 1116.4 411.711 cv
1116.3 411.763 1116.23 411.834 1116.16 411.92 cv
1116.08 412.008 1116.03 412.141 1116.01 412.32 cv
1115.96 412.499 1115.94 412.772 1115.94 413.14 cv
1115.94 422.918 li
1113.72 422.918 li
1109.76 416.089 li
1109.22 415.166 1108.82 414.439 1108.58 413.914 cv
1108.5 413.914 li
1108.55 415.171 1108.58 416.499 1108.58 417.896 cv
1108.58 420.723 li
1108.58 421.162 1108.6 421.469 1108.65 421.646 cv
1108.7 421.82 1108.77 421.96 1108.9 422.061 cv
1109 422.164 1109.22 422.257 1109.54 422.338 cv
1109.54 422.918 li
1106.22 422.918 li
1106.22 422.338 li
1106.51 422.257 1106.73 422.162 1106.86 422.054 cv
1106.95 421.945 1107.03 421.806 1107.08 421.636 cv
1107.13 421.467 1107.15 421.162 1107.15 420.723 cv
1107.15 413.133 li
1107.15 412.693 1107.13 412.391 1107.1 412.224 cv
1107.05 412.057 1106.98 411.918 1106.86 411.807 cv
1106.73 411.697 1106.51 411.598 1106.22 411.517 cv
cp
ef
1087.54 406.123 mo
1104.52 406.123 li
1121.5 406.123 li
1121.5 407.596 li
1104.52 407.596 li
1087.54 407.596 li
cp
ef
430.963 437.962 mo
426.928 448.447 li
434.261 448.447 li
cp
430.471 434.714 mo
433.522 434.714 li
438.69 450.261 li
438.69 451.121 li
424.221 451.121 li
424.221 450.239 li
cp
ef
439.773 439.45 mo
445.063 439.45 li
445.063 440.452 li
444.596 440.565 444.3 440.651 444.177 440.712 cv
444.054 440.771 443.981 440.847 443.931 440.933 cv
443.882 441.022 443.858 441.149 443.858 441.316 cv
443.858 441.52 443.882 441.726 443.931 441.938 cv
443.956 442.149 444.03 442.377 444.128 442.618 cv
445.974 448.467 li
448.139 442.937 li
448.287 442.559 448.385 442.259 448.459 442.041 cv
448.508 441.822 448.533 441.616 448.533 441.422 cv
448.533 441.164 448.459 440.968 448.336 440.835 cv
448.188 440.702 447.844 440.577 447.303 440.459 cv
447.303 439.45 li
452.175 439.45 li
452.175 440.457 li
451.781 440.538 451.51 440.634 451.387 440.739 cv
451.24 440.847 451.092 441.032 450.944 441.294 cv
450.797 441.555 450.6 441.933 450.379 442.426 cv
446.367 451.239 li
444.645 451.239 li
441.397 442.335 li
441.175 441.751 441.028 441.356 440.905 441.152 cv
440.782 440.948 440.659 440.803 440.536 440.715 cv
440.412 440.626 440.166 440.54 439.773 440.459 cv
cp
ef
459.656 445.82 mo
474.395 445.82 li
474.395 447.408 li
459.656 447.408 li
cp
459.656 440.865 mo
474.395 440.865 li
474.395 442.453 li
459.656 442.453 li
cp
ef
492.777 434.021 mo
494.254 434.021 li
494.254 444.089 li
494.647 444.089 li
494.943 444.089 495.164 444.062 495.312 444.005 cv
495.484 443.949 495.632 443.86 495.804 443.737 cv
495.976 443.612 496.247 443.389 496.616 443.067 cv
496.96 442.745 497.231 442.458 497.428 442.208 cv
497.6 441.957 497.723 441.739 497.797 441.552 cv
497.846 441.363 497.895 441.184 497.895 441.007 cv
497.895 440.459 497.526 440.135 496.837 440.04 cv
496.837 439.276 li
502.817 439.276 li
502.817 440.04 li
502.497 440.089 502.153 440.231 501.783 440.469 cv
501.39 440.71 500.799 441.211 499.987 441.974 cv
498.24 443.588 li
501.34 448.15 li
501.783 448.825 502.128 449.292 502.325 449.547 cv
502.546 449.8 502.743 449.982 502.891 450.09 cv
503.063 450.198 503.26 450.279 503.506 450.333 cv
503.506 451.121 li
497.649 451.121 li
497.649 450.333 li
497.994 450.261 498.191 450.075 498.191 449.773 cv
498.191 449.567 498.117 449.321 497.969 449.039 cv
497.846 448.756 497.551 448.317 497.157 447.718 cv
496.222 446.333 li
496.025 446.023 495.853 445.798 495.73 445.66 cv
495.607 445.52 495.484 445.414 495.361 445.343 cv
495.238 445.27 495.066 445.235 494.844 445.235 cv
494.254 445.235 li
494.254 447.671 li
494.254 448.427 494.278 448.948 494.327 449.235 cv
494.377 449.522 494.475 449.751 494.623 449.923 cv
494.77 450.092 495.041 450.23 495.459 450.333 cv
495.459 451.121 li
489.603 451.121 li
489.603 450.333 li
489.996 450.23 490.267 450.095 490.439 449.928 cv
490.587 449.761 490.685 449.535 490.735 449.252 cv
490.784 448.97 490.809 448.442 490.809 447.671 cv
490.809 438.358 li
490.809 437.506 490.784 436.897 490.759 436.531 cv
490.735 436.162 490.685 435.887 490.612 435.701 cv
490.538 435.512 490.439 435.364 490.292 435.259 cv
490.144 435.151 489.849 435.057 489.455 434.976 cv
489.455 434.188 li
cp
ef
626.666 429.366 mo
629.151 430.016 631.071 431.708 632.424 434.439 cv
633.778 437.172 634.442 440.403 634.442 444.135 cv
634.442 447.87 633.778 451.101 632.424 453.832 cv
631.071 456.565 629.151 458.254 626.666 458.907 cv
626.371 457.93 li
628.29 457.205 629.767 455.627 630.751 453.193 cv
631.735 450.762 632.252 447.747 632.252 444.147 cv
632.252 440.543 631.735 437.52 630.751 435.084 cv
629.767 432.649 628.29 431.067 626.371 430.343 cv
cp
513.57 429.366 mo
513.866 430.343 li
511.946 431.067 510.47 432.649 509.486 435.084 cv
508.477 437.52 507.985 440.543 507.985 444.147 cv
507.985 447.747 508.477 450.762 509.486 453.193 cv
510.47 455.627 511.946 457.205 513.866 457.93 cv
513.57 458.907 li
511.085 458.254 509.166 456.565 507.812 453.832 cv
506.459 451.101 505.794 447.87 505.794 444.135 cv
505.794 440.403 506.459 437.172 507.812 434.439 cv
509.166 431.708 511.085 430.016 513.57 429.366 cv
cp
ef
514.924 434.822 mo
521.543 434.822 li
521.543 435.61 li
521.125 435.659 520.83 435.774 520.633 435.956 cv
520.436 436.14 520.337 436.398 520.337 436.732 cv
520.337 436.995 520.362 437.253 520.411 437.503 cv
520.436 437.754 520.559 438.154 520.707 438.704 cv
523.069 447.276 li
526.022 438.738 li
526.145 438.404 526.243 438.09 526.317 437.795 cv
526.366 437.501 526.415 437.191 526.415 436.865 cv
526.415 436.474 526.317 436.175 526.096 435.968 cv
525.899 435.762 525.579 435.642 525.161 435.61 cv
525.161 434.822 li
530.328 434.822 li
530.328 435.61 li
530.008 435.659 529.762 435.755 529.541 435.902 cv
529.344 436.049 529.147 436.261 528.975 436.536 cv
528.802 436.811 528.605 437.258 528.359 437.879 cv
523.364 451.207 li
520.583 451.207 li
516.646 437.832 li
516.474 437.233 516.326 436.811 516.203 436.56 cv
516.08 436.31 515.933 436.106 515.736 435.951 cv
515.539 435.794 515.268 435.681 514.924 435.61 cv
cp
ef
541.451 447.285 mo
541.869 447.285 542.287 447.303 542.706 447.337 cv
543.099 447.371 543.641 447.448 544.28 447.565 cv
544.28 449.611 li
543.124 449.611 li
543.001 449.235 542.853 448.945 542.681 448.742 cv
542.533 448.538 542.336 448.395 542.14 448.317 cv
541.967 448.236 541.721 448.196 541.451 448.196 cv
541.081 448.196 540.762 448.285 540.54 448.462 cv
540.294 448.636 540.196 448.882 540.196 449.198 cv
540.196 449.419 540.22 449.611 540.319 449.768 cv
540.392 449.925 540.54 450.08 540.762 450.23 cv
540.958 450.379 541.377 450.578 541.967 450.831 cv
542.853 451.192 543.468 451.587 543.838 452.01 cv
544.207 452.435 544.379 452.945 544.379 453.542 cv
544.379 454.418 544.084 455.094 543.444 455.565 cv
542.829 456.037 541.918 456.272 540.786 456.272 cv
539.802 456.272 538.744 456.135 537.563 455.86 cv
537.563 453.76 li
538.719 453.76 li
538.867 454.293 539.088 454.694 539.408 454.959 cv
539.703 455.226 540.122 455.359 540.614 455.359 cv
541.057 455.359 541.401 455.258 541.623 455.059 cv
541.844 454.86 541.967 454.571 541.967 454.193 cv
541.967 453.952 541.918 453.746 541.795 453.576 cv
541.697 453.407 541.524 453.245 541.303 453.09 cv
541.057 452.935 540.639 452.732 540.073 452.481 cv
539.26 452.123 538.67 451.73 538.301 451.3 cv
537.932 450.87 537.735 450.387 537.735 449.846 cv
537.735 449.321 537.883 448.864 538.202 448.479 cv
538.498 448.091 538.941 447.796 539.507 447.592 cv
540.073 447.386 540.712 447.285 541.451 447.285 cv
cp
535.225 447.285 mo
535.569 447.285 535.939 447.322 536.332 447.398 cv
536.332 449.822 li
534.757 449.822 li
534.659 449.481 534.511 449.22 534.364 449.041 cv
534.191 448.859 533.97 448.769 533.699 448.769 cv
533.576 448.769 533.429 448.808 533.281 448.886 cv
533.133 448.965 532.986 449.076 532.863 449.22 cv
532.715 449.363 532.617 449.51 532.567 449.657 cv
532.518 449.807 532.469 449.959 532.469 450.112 cv
532.444 450.264 532.444 450.49 532.444 450.794 cv
532.444 453.596 li
532.444 454.151 532.444 454.539 532.493 454.762 cv
532.543 454.983 532.617 455.158 532.74 455.285 cv
532.863 455.41 533.084 455.499 533.379 455.553 cv
533.379 456.13 li
529.024 456.13 li
529.024 455.553 li
529.319 455.477 529.516 455.376 529.614 455.253 cv
529.713 455.131 529.787 454.964 529.836 454.752 cv
529.885 454.544 529.885 454.158 529.885 453.603 cv
529.885 449.996 li
529.885 449.564 529.885 449.242 529.86 449.036 cv
529.86 448.827 529.811 448.661 529.762 448.535 cv
529.713 448.41 529.614 448.307 529.516 448.228 cv
529.393 448.15 529.196 448.081 528.925 448.022 cv
528.925 447.425 li
531.337 447.354 li
532.444 447.354 li
532.321 448.68 li
532.42 448.707 li
532.863 448.204 533.306 447.84 533.748 447.617 cv
534.191 447.396 534.684 447.285 535.225 447.285 cv
cp
546.963 445.23 mo
549.079 445.23 li
549.079 447.425 li
551.589 447.425 li
551.589 448.523 li
549.079 448.523 li
549.079 452.481 li
549.079 453.142 549.104 453.63 549.177 453.945 cv
549.227 454.261 549.325 454.495 549.473 454.644 cv
549.62 454.792 549.817 454.868 550.014 454.868 cv
550.309 454.868 550.555 454.819 550.752 454.718 cv
550.974 454.62 551.146 454.492 551.318 454.34 cv
551.884 455.079 li
551.367 455.516 550.9 455.825 550.482 456.005 cv
550.039 456.182 549.596 456.272 549.128 456.272 cv
548.267 456.272 547.602 456.037 547.184 455.565 cv
546.741 455.094 546.52 454.382 546.52 453.429 cv
546.52 448.523 li
545.437 448.523 li
545.437 447.917 li
545.781 447.858 546.052 447.769 546.224 447.654 cv
546.397 447.536 546.52 447.379 546.618 447.185 cv
546.717 446.988 546.79 446.731 546.84 446.416 cv
546.889 446.1 546.938 445.704 546.963 445.23 cv
cp
ef
559.759 444.923 mo
574.502 444.923 li
574.502 443.335 li
559.759 443.335 li
cp
ef
587.565 434.822 mo
594.184 434.822 li
594.184 435.61 li
593.766 435.659 593.471 435.774 593.274 435.956 cv
593.077 436.14 592.979 436.398 592.979 436.732 cv
592.979 436.995 593.003 437.253 593.052 437.503 cv
593.077 437.754 593.2 438.154 593.348 438.704 cv
595.71 447.276 li
598.663 438.738 li
598.786 438.404 598.884 438.09 598.958 437.795 cv
599.007 437.501 599.057 437.191 599.057 436.865 cv
599.057 436.474 598.958 436.175 598.737 435.968 cv
598.54 435.762 598.22 435.642 597.802 435.61 cv
597.802 434.822 li
602.969 434.822 li
602.969 435.61 li
602.649 435.659 602.403 435.755 602.182 435.902 cv
601.985 436.049 601.788 436.261 601.616 436.536 cv
601.444 436.811 601.247 437.258 601.001 437.879 cv
596.005 451.207 li
593.225 451.207 li
589.287 437.832 li
589.115 437.233 588.968 436.811 588.845 436.56 cv
588.721 436.31 588.574 436.106 588.377 435.951 cv
588.18 435.794 587.909 435.681 587.565 435.61 cv
cp
ef
618.472 456.692 mo
618.275 456.857 618.103 457.036 618.004 457.228 cv
617.906 457.421 617.832 457.642 617.832 457.895 cv
617.832 458.315 618.029 458.627 618.398 458.831 cv
618.767 459.032 619.333 459.133 620.121 459.133 cv
620.859 459.133 621.425 459.01 621.818 458.765 cv
622.188 458.519 622.384 458.173 622.384 457.728 cv
622.384 457.36 622.261 457.1 622.04 456.953 cv
621.794 456.803 621.449 456.729 621.006 456.729 cv
619.481 456.729 li
619.062 456.729 618.718 456.717 618.472 456.692 cv
cp
620.071 448.189 mo
619.628 448.189 619.309 448.356 619.112 448.692 cv
618.89 449.029 618.792 449.547 618.792 450.242 cv
618.792 450.978 618.89 451.528 619.112 451.887 cv
619.309 452.248 619.653 452.427 620.096 452.427 cv
620.49 452.427 620.81 452.26 621.031 451.926 cv
621.228 451.595 621.351 451.084 621.351 450.401 cv
621.351 449.68 621.228 449.132 621.031 448.754 cv
620.81 448.378 620.49 448.189 620.071 448.189 cv
cp
612.541 447.354 mo
613.649 447.354 li
613.649 453.596 li
613.649 454.156 613.649 454.541 613.698 454.75 cv
613.723 454.956 613.796 455.123 613.895 455.248 cv
614.018 455.374 614.215 455.477 614.51 455.553 cv
614.51 456.13 li
610.228 456.13 li
610.228 455.553 li
610.524 455.477 610.721 455.376 610.819 455.253 cv
610.917 455.131 610.991 454.964 611.04 454.752 cv
611.09 454.544 611.09 454.158 611.09 453.603 cv
611.09 449.522 li
611.09 449.112 611.065 448.823 611.016 448.648 cv
610.967 448.476 610.868 448.346 610.77 448.255 cv
610.647 448.165 610.425 448.086 610.13 448.022 cv
610.13 447.425 li
cp
620.096 447.285 mo
620.391 447.285 620.662 447.3 620.883 447.33 cv
621.129 447.357 621.351 447.391 621.548 447.425 cv
624.747 447.425 li
624.747 448.602 li
623.221 448.435 li
623.196 448.53 li
623.369 448.695 623.492 448.918 623.615 449.203 cv
623.713 449.486 623.762 449.827 623.762 450.225 cv
623.762 451.244 623.467 452.015 622.827 452.543 cv
622.212 453.068 621.302 453.331 620.121 453.331 cv
619.53 453.331 619.062 453.279 618.693 453.174 cv
618.398 453.436 618.25 453.721 618.25 454.026 cv
618.25 454.2 618.275 454.335 618.349 454.428 cv
618.423 454.522 618.546 454.593 618.718 454.644 cv
618.915 454.694 619.161 454.718 619.481 454.718 cv
621.646 454.718 li
622.631 454.718 623.369 454.907 623.861 455.288 cv
624.353 455.668 624.575 456.26 624.575 457.061 cv
624.575 457.687 624.402 458.227 624.058 458.676 cv
623.689 459.126 623.196 459.469 622.532 459.707 cv
621.868 459.943 621.08 460.064 620.17 460.064 cv
619.505 460.064 618.915 460.034 618.373 459.975 cv
617.832 459.916 617.365 459.811 616.995 459.656 cv
616.602 459.499 616.306 459.288 616.11 459.018 cv
615.888 458.75 615.79 458.406 615.79 457.991 cv
615.79 457.657 615.888 457.35 616.11 457.07 cv
616.306 456.79 616.626 456.55 616.995 456.351 cv
616.749 456.174 616.577 455.973 616.454 455.744 cv
616.356 455.516 616.282 455.236 616.282 454.902 cv
616.282 454.546 616.405 454.207 616.602 453.883 cv
616.799 453.562 617.168 453.21 617.66 452.832 cv
617.217 452.574 616.872 452.236 616.626 451.818 cv
616.38 451.398 616.282 450.91 616.282 450.347 cv
616.282 449.645 616.429 449.066 616.774 448.607 cv
617.118 448.147 617.561 447.811 618.127 447.6 cv
618.718 447.391 619.358 447.285 620.096 447.285 cv
cp
605.528 447.285 mo
605.947 447.285 606.365 447.303 606.783 447.337 cv
607.177 447.371 607.718 447.448 608.358 447.565 cv
608.358 449.611 li
607.202 449.611 li
607.079 449.235 606.931 448.945 606.759 448.742 cv
606.611 448.538 606.414 448.395 606.217 448.317 cv
606.045 448.236 605.799 448.196 605.528 448.196 cv
605.159 448.196 604.839 448.285 604.618 448.462 cv
604.372 448.636 604.273 448.882 604.273 449.198 cv
604.273 449.419 604.298 449.611 604.396 449.768 cv
604.47 449.925 604.618 450.08 604.839 450.23 cv
605.036 450.379 605.455 450.578 606.045 450.831 cv
606.931 451.192 607.546 451.587 607.915 452.01 cv
608.284 452.435 608.457 452.945 608.457 453.542 cv
608.457 454.418 608.161 455.094 607.522 455.565 cv
606.906 456.037 605.996 456.272 604.864 456.272 cv
603.88 456.272 602.822 456.135 601.64 455.86 cv
601.64 453.76 li
602.797 453.76 li
602.945 454.293 603.166 454.694 603.486 454.959 cv
603.781 455.226 604.2 455.359 604.692 455.359 cv
605.135 455.359 605.479 455.258 605.701 455.059 cv
605.922 454.86 606.045 454.571 606.045 454.193 cv
606.045 453.952 605.996 453.746 605.873 453.576 cv
605.774 453.407 605.602 453.245 605.381 453.09 cv
605.135 452.935 604.716 452.732 604.15 452.481 cv
603.338 452.123 602.748 451.73 602.379 451.3 cv
602.009 450.87 601.813 450.387 601.813 449.846 cv
601.813 449.321 601.96 448.864 602.28 448.479 cv
602.575 448.091 603.018 447.796 603.584 447.592 cv
604.15 447.386 604.79 447.285 605.528 447.285 cv
cp
611.163 443.924 mo
613.575 443.924 li
613.575 446.073 li
611.163 446.073 li
cp
ef
30.4602 460.388 mo
37.0781 460.388 li
37.0781 461.176 li
36.6633 461.223 36.3559 461.338 36.1566 461.522 cv
35.957 461.704 35.8574 461.964 35.8574 462.298 cv
35.8574 462.561 35.8812 462.816 35.9292 463.069 cv
35.977 463.319 36.0769 463.72 36.2284 464.267 cv
38.5979 472.842 li
41.553 464.304 li
41.6736 463.97 41.7671 463.656 41.836 463.361 cv
41.9024 463.066 41.9369 462.755 41.9369 462.428 cv
41.9369 462.04 41.836 461.741 41.6317 461.534 cv
41.4275 461.326 41.115 461.208 40.6917 461.176 cv
40.6917 460.388 li
45.8495 460.388 li
45.8495 461.176 li
45.5468 461.223 45.2884 461.321 45.0793 461.468 cv
44.8676 461.615 44.6757 461.827 44.5034 462.102 cv
44.3312 462.377 44.1319 462.823 43.9006 463.445 cv
38.8851 476.77 li
36.1207 476.77 li
32.1714 463.396 li
31.996 462.799 31.8483 462.377 31.7287 462.124 cv
31.6089 461.873 31.4534 461.672 31.2619 461.515 cv
31.0705 461.36 30.8032 461.247 30.4602 461.176 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
57.6315 473.762 mo
57.1812 473.762 56.8219 473.991 56.5537 474.447 cv
56.2879 474.904 56.128 475.562 56.0763 476.422 cv
59.0046 476.422 li
58.98 475.525 58.8643 474.86 58.6527 474.42 cv
58.4411 473.981 58.1015 473.762 57.6315 473.762 cv
cp
57.7742 472.849 mo
58.3057 472.849 58.7733 472.91 59.1768 473.033 cv
59.578 473.156 59.9225 473.328 60.2104 473.546 cv
60.4958 473.767 60.7345 474.032 60.9215 474.342 cv
61.1454 474.71 61.3128 475.135 61.4284 475.614 cv
61.5416 476.095 61.6031 476.679 61.6081 477.369 cv
56.032 477.369 li
56.0369 478.428 56.2264 479.208 56.598 479.709 cv
56.972 480.208 57.538 480.458 58.3008 480.458 cv
58.7462 480.458 59.1473 480.375 59.5066 480.208 cv
59.8634 480.041 60.2497 479.749 60.6656 479.326 cv
61.3792 480.1 li
60.7813 480.731 60.1882 481.178 59.6026 481.443 cv
59.0169 481.706 58.3427 481.836 57.5798 481.836 cv
56.2141 481.836 55.1855 481.463 54.4965 480.719 cv
53.8075 479.972 53.463 478.865 53.463 477.396 cv
53.463 476.449 53.6402 475.631 53.9945 474.943 cv
54.3513 474.256 54.8533 473.735 55.503 473.382 cv
56.1551 473.026 56.9105 472.849 57.7742 472.849 cv
cp
51.0392 472.849 mo
51.396 472.849 51.7725 472.888 52.1637 472.964 cv
52.1637 475.385 li
50.5741 475.385 li
50.4732 475.047 50.3428 474.786 50.1804 474.605 cv
50.0204 474.423 49.8039 474.332 49.5357 474.332 cv
49.4052 474.332 49.265 474.371 49.1075 474.452 cv
48.9525 474.531 48.8097 474.641 48.6769 474.784 cv
48.5464 474.929 48.4529 475.074 48.3963 475.223 cv
48.3397 475.373 48.3028 475.523 48.2856 475.675 cv
48.2684 475.827 48.261 476.056 48.261 476.36 cv
48.261 479.159 li
48.261 479.717 48.2807 480.105 48.3225 480.328 cv
48.3619 480.549 48.4455 480.723 48.5686 480.849 cv
48.6916 480.974 48.8983 481.065 49.1912 481.116 cv
49.1912 481.696 li
44.8553 481.696 li
44.8553 481.116 li
45.1383 481.04 45.3327 480.942 45.441 480.819 cv
45.5493 480.696 45.6231 480.53 45.66 480.318 cv
45.6994 480.107 45.719 479.724 45.719 479.169 cv
45.719 475.562 li
45.719 475.128 45.7117 474.808 45.6969 474.6 cv
45.6821 474.393 45.6452 474.226 45.5911 474.101 cv
45.5345 473.974 45.4508 473.873 45.3352 473.794 cv
45.222 473.713 45.0227 473.645 44.7421 473.588 cv
44.7421 472.991 li
47.1512 472.92 li
48.261 472.92 li
48.1355 474.246 li
48.2511 474.271 li
48.6793 473.767 49.1198 473.406 49.5701 473.183 cv
50.0229 472.962 50.5126 472.849 51.0392 472.849 cv
cp
72.4403 469.129 mo
73.5402 469.129 li
73.5402 479.159 li
73.5402 479.717 73.5574 480.1 73.5919 480.309 cv
73.6288 480.52 73.7002 480.689 73.8084 480.814 cv
73.9167 480.94 74.1209 481.04 74.4187 481.116 cv
74.4187 481.696 li
70.1099 481.696 li
70.1099 481.116 li
70.4101 481.04 70.6144 480.942 70.7251 480.819 cv
70.8383 480.696 70.9097 480.53 70.9466 480.323 cv
70.981 480.115 70.9983 479.727 70.9983 479.159 cv
70.9983 472.314 li
70.9983 471.695 70.9909 471.248 70.9712 470.975 cv
70.954 470.703 70.9171 470.499 70.8629 470.362 cv
70.8063 470.224 70.7251 470.116 70.6168 470.037 cv
70.5086 469.959 70.3043 469.89 70.0041 469.831 cv
70.0041 469.252 li
cp
67.8559 469.095 mo
68.3603 469.095 68.8082 469.134 69.2019 469.217 cv
69.2019 471.007 li
68.006 471.007 li
67.9051 470.686 67.7944 470.448 67.6763 470.295 cv
67.5557 470.143 67.3982 470.067 67.2038 470.067 cv
66.9528 470.067 66.7584 470.15 66.6231 470.317 cv
66.4902 470.484 66.3967 470.723 66.3475 471.029 cv
66.2982 471.336 66.2736 471.769 66.2736 472.323 cv
66.2736 472.991 li
67.9691 472.991 li
67.9691 474.086 li
66.2736 474.086 li
66.2736 479.493 li
66.2736 479.933 66.2958 480.242 66.3425 480.424 cv
66.3893 480.606 66.473 480.748 66.5935 480.854 cv
66.7141 480.959 66.9257 481.048 67.2309 481.116 cv
67.2309 481.696 li
62.8507 481.696 li
62.8507 481.116 li
63.1263 481.035 63.3183 480.944 63.4266 480.844 cv
63.5348 480.746 63.6136 480.606 63.6603 480.429 cv
63.7071 480.25 63.7317 479.938 63.7317 479.493 cv
63.7317 474.086 li
62.6588 474.086 li
62.6588 473.482 li
62.9689 473.436 63.1829 473.377 63.3035 473.311 cv
63.4241 473.244 63.5225 473.136 63.5988 472.991 cv
63.6751 472.844 63.7268 472.613 63.7563 472.296 cv
63.8498 471.243 64.2411 470.448 64.9301 469.905 cv
65.6191 469.365 66.596 469.095 67.8559 469.095 cv
cp
ef
67.1226 495.618 mo
66.628 495.618 66.2736 495.625 66.0596 495.643 cv
66.0596 509.076 li
66.2023 509.101 66.564 509.113 67.1472 509.113 cv
68.3751 509.113 69.3323 508.865 70.014 508.372 cv
70.6956 507.878 71.2148 507.127 71.5692 506.115 cv
71.9235 505.103 72.1031 503.834 72.1031 502.307 cv
72.1031 500.116 71.675 498.454 70.8211 497.32 cv
69.9672 496.185 68.7344 495.618 67.1226 495.618 cv
cp
61.0692 494.221 mo
67.2924 494.221 li
68.6236 494.221 69.7359 494.324 70.6292 494.533 cv
71.5249 494.739 72.3172 495.066 73.0112 495.51 cv
73.7051 495.957 74.2661 496.487 74.6918 497.106 cv
75.12 497.722 75.4374 498.439 75.6441 499.255 cv
75.8509 500.07 75.9567 500.993 75.9567 502.019 cv
75.9567 503.692 75.6958 505.121 75.1766 506.307 cv
74.714 507.372 74.0471 508.232 73.1736 508.885 cv
72.3 509.538 71.2566 509.987 70.0435 510.235 cv
69.1183 510.427 67.9371 510.523 66.5025 510.523 cv
61.0692 510.523 li
61.0692 509.734 li
61.4998 509.621 61.7926 509.494 61.9476 509.351 cv
62.1027 509.209 62.2085 509.02 62.2651 508.784 cv
62.3217 508.548 62.3487 508.129 62.3487 507.524 cv
62.3487 497.231 li
62.3487 496.625 62.3217 496.205 62.27 495.972 cv
62.2183 495.736 62.1125 495.547 61.9526 495.404 cv
61.7951 495.26 61.4998 495.129 61.0692 495.009 cv
cp
43.9055 494.221 mo
48.7531 494.221 li
52.9881 501.565 li
53.2514 502.027 53.5959 502.653 54.0167 503.441 cv
54.4399 504.229 54.8164 504.973 55.1437 505.673 cv
55.3332 505.673 li
55.247 503.77 55.2028 501.693 55.2028 499.439 cv
55.2028 497.219 li
55.2028 496.694 55.1831 496.318 55.1437 496.09 cv
55.1019 495.864 55.0379 495.689 54.9518 495.571 cv
54.8632 495.451 54.7549 495.353 54.622 495.279 cv
54.4916 495.203 54.2578 495.112 53.9232 495.009 cv
53.9232 494.221 li
58.446 494.221 li
58.446 495.009 li
58.1261 495.112 57.9022 495.201 57.7693 495.272 cv
57.6389 495.343 57.5257 495.439 57.4346 495.559 cv
57.3436 495.68 57.2722 495.859 57.2255 496.102 cv
57.1763 496.345 57.1541 496.718 57.1541 497.219 cv
57.1541 510.523 li
54.1126 510.523 li
48.7285 501.231 li
48.0026 499.974 47.4686 498.987 47.1241 498.27 cv
47.0159 498.27 li
47.0971 499.981 47.1364 501.789 47.1364 503.692 cv
47.1364 507.537 li
47.1364 508.133 47.166 508.551 47.2275 508.789 cv
47.2865 509.03 47.3948 509.219 47.5498 509.356 cv
47.7049 509.496 47.9977 509.621 48.4283 509.734 cv
48.4283 510.523 li
43.9055 510.523 li
43.9055 509.734 li
44.3287 509.621 44.6166 509.494 44.7741 509.346 cv
44.9291 509.199 45.0374 509.01 45.0965 508.779 cv
45.1555 508.548 45.1851 508.133 45.1851 507.537 cv
45.1851 497.207 li
45.1851 496.61 45.1605 496.198 45.1088 495.972 cv
45.0571 495.743 44.9488 495.554 44.784 495.404 cv
44.6216 495.252 44.3287 495.122 43.9055 495.009 cv
cp
35.4435 494.029 mo
37.1906 494.029 38.7943 494.241 40.2542 494.663 cv
40.2542 498.054 li
38.6146 498.054 li
38.4313 497.386 38.2219 496.87 37.9864 496.509 cv
37.7512 496.146 37.448 495.876 37.0769 495.697 cv
36.7058 495.517 36.2292 495.427 35.6467 495.427 cv
34.8571 495.427 34.159 495.667 33.5526 496.151 cv
32.9463 496.632 32.4674 497.401 32.1165 498.454 cv
31.7654 499.51 31.5899 500.846 31.5899 502.461 cv
31.5899 504.666 31.8712 506.361 32.4335 507.542 cv
32.996 508.725 33.7879 509.314 34.8091 509.314 cv
35.5111 509.314 36.0299 509.106 36.3648 508.688 cv
36.6999 508.271 36.8675 507.603 36.8675 506.687 cv
36.8675 506.235 li
36.8675 505.629 36.8476 505.197 36.8077 504.939 cv
36.7678 504.681 36.7058 504.487 36.6222 504.359 cv
36.5383 504.232 36.4288 504.129 36.2932 504.05 cv
36.1573 503.969 35.9181 503.878 35.5751 503.775 cv
35.5751 502.987 li
41.7031 502.987 li
41.7031 503.775 li
41.3045 503.893 41.0313 504.03 40.8886 504.18 cv
40.7459 504.332 40.6475 504.534 40.5958 504.784 cv
40.5441 505.035 40.5175 505.386 40.5175 505.84 cv
40.5175 510.343 li
38.7943 510.702 li
37.9805 509.84 li
37.0311 510.422 35.942 510.712 34.7134 510.712 cv
32.3838 510.712 30.6465 510.034 29.5015 508.676 cv
28.3568 507.318 27.7844 505.263 27.7844 502.508 cv
27.7844 500.725 28.0935 499.198 28.7119 497.929 cv
29.33 496.659 30.2237 495.692 31.3923 495.026 cv
32.5612 494.363 33.9117 494.029 35.4435 494.029 cv
cp
ef
.61709 .780514 0 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f329fef63f1000000cc000000606376
74203fba58ec0000012c000006886670676da1ea42ac000007b400000913
676c7966eba0f3e30000f8b80000446868656164f85c7982000010c80000
0036686865610dbb1cd30000110000000024686d747831ce1a2500001124
000069ac6c6f636101b7f29300007ad0000036566d61787028a8181e0000
b128000000206e616d65df42d3300000b1480000308b70726570f940ca73
0000e1d4000016e1676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e4002effc000247b00000009000000004d53202000200000
25cc0600fe0001c4079e0226200001ff0000000003c0050e000000200014
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000005aa001500a0fff8ff42fea2fdbc03b6015401cc
0108010e00ff00f5006e014000a0055e006b0570fff60122fff10547ffec
04faffec0131fff4000a03a0036600b400e1044c007c40465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d000001000000063ae1bdcd10815f0f3cf50019080000000000
bbeb7ccc00000000d7497752fbdafd350a1a085000010009000200000000
0000000100000600fe0001c40aa0fbdafa860a1a00010000000000000000
00000000000019ac040e0000000000000000000001cf0000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000043c004f000000000000
0000000000000000000000000000050b008d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000005190049000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000006fe008d00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000481008d00000000000000000000000003c8003f0000
00000000000000000000000000000000000003f6000c0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000447000a00000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003cb005a0000000000000000
00000000000000000000000004910086000000000000000000000000038f
008600000000000000000000000000000000000000000000000000000000
000000000000000000000000049c00580000000000000000000000000000
0000049c0086000000000000000002100086000000000000000000000000
000000000000000000000000000000000210001800000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000648008604c700860000000000000000000000000000
00000000000004da00550000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003fd00860000
00000000000004250086000000000000000000000000036f004300000000
00000000000000000000000000000000037b001b00000000000000000000
000004ac0084000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003f30047000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000359004800000000000000000000
00000000000000000000077d004800000000060e004800000000044b004b
0000000000000000000000000407004a0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000044b007e000000000000000001f7006b0000
000000000000000000000000000000000000000000000000000000000000
01f7007e0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0682007e044b007e00000000000000000000000000000000000000000000
0000044d0048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000044b007e000000000000
000002d8007e000000000000000000000000033100490000000000000000
00000000000000000000000005d4004900000000000000000000000002c6
00170000000000000000000000000000000004af00170000000000000000
00000000000000000000000000000000000000000000000004af00170540
001700000000072800170000000000000000000000000000000000000000
00000000000000000000000007280017044b007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002bf0036000000000244003802f5
003a02c7003a000000000000000002fb005a017a004f0000000000000000
00000000046c005a02f9005a02f5003902f5005a000000000200005a023a
003c01fa001c02fb005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001f7000001e200000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000029b00e600000000000000000000
0000000000000000000000000000026900cf000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000038200790000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004c1006600000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003160054036b00780000
000000000000037c00550000000000000000000000000000000000000000
049a007800000000000000000000000000000000030d00780288003a02b0
001e00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000036b007800000000
00000000037c00550000000000000000000000000000000000000000049a
00780000000000000000000000000000000000000000030d007802b0001e
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000019900000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000ffba000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00>
<0000009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e01300130013001300130013001990199019901990199
0199019901990199019901990199019901990199025b025b025b025b025b
025b025b025b025b025b025b025b025b025b025b025b025b025b025b025b
025b025b025b025b025b025b025b025b025b031e031e031e031e031e031e
031e031e031e031e031e031e031e031e031e031e031e031e031e031e031e
031e03ce03ce03ce03ce04890489048904890489048904e704e704e704e7
04e704e704e704e704e704e704e704e704e704e704e704e704e704e704e7
04e704e704e704e704e704e704e704e704e704e704e704e7054d054d054d
054d054d054d054d054d054d054d054d054d054d054d05b405b405b405b4
05b405b405f905f905f905f9065806580658065806580658065806580658
0658065806d406d406d406d406d4073207320732075e075e075e075e075e
075e075e075e076907690769076907690769076907690769076907690769
076907df084a084a084a084a084a084a0898089808980898089808980898
0898089808980898089808f208f208f2096f096f096f096f09f809f809f8
09f809f809f80a380a380a380a380a880a880a880a880a880a880a880a88
0a880a880a880a880a880a880a880a880a880a880a880a880a880a880a88
0a880a880a880a880b730b730b730b730b730b730b730b730b730b730b73
0b730b730b730c080c080c080c080c080c080cd90cd90db60db60e510e51
0e510e510f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c0f1c
0f1c0f1c0f990f990f990fed0fed0fed0fed0fed0fed0fed0fed0fed1019
1019101910191019101910191019101910191019101910191019101910da
116011601160116011601160116011d211d211d211d211d211d211d211d2
11d211d211d211d212731273127312f112f112f112f113c313c313c313c3
13c313c314c414c414c414c4155a155a155a155a155a1566156615661566
1566156615661566156615dd168d168d1699169916991699169916991699
16991699175617d117d117d117d117d117d117d117d117d117d117d117d1
17d117d117d117d117d117d117d117d117d117d117d117d117d117d117d1
17d117d117d118401840189d190319661966196619c31a061a061a061a06
1a861adc1b251b8f1b8f1be21c581cb11d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a
1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d0a1d2e1d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521d521d521d521d521d521d521d521d521d521d521d521d52
1d521d521d521da01da01da01da01da01da01da01ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded1ded
1ded1ded1ded1ded1ded1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c1e3c
1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e1f4e
1f4e1f4e1f4e1f4e1fba1fc21fc21fc21fca1fca1fca1fca1fca1fca1fd2
1fd21fd21fd21fd21fda2055205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d205d205d205d
205d205d205d205d205d205d205d205d205d205d205d205d20a220a220a2
211a211a211a211a211a211a217c217c217c217c217c217c21ef22232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322232223222322232223222322232223222322232223222322232223
222322342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
223422342234223422342234223422342234223422342234223422342234
22342234223422342234223422342234223422340000000100001b2a0093
00100078000300020010002f006000000cf816e1000200010000002d0222
0000000300000000021000000000000300000001000e0210000000030000
0002000804d60000000300000003002e04b00000000300000004001804c6
0000000300000005001804de0000000300000006001804f6000000030000
00070076050e0000000300000008002a0592000000030000000900200796
000000030000000a02a00210000000030000000b005607b6000000030000
000c002a080c000000030000000d0e060836000000030000000e004a07b6
00010000000000000108163c000100000000000100071744000100000000
0002000418a70001000000000003001718940001000000000004000c189f
0001000000000005000c18ab0001000000000006000c18b7000100000000
0007003b18c30001000000000008001516430001000000000009001018fe
000100000000000a01501744000100000000000b002b190e000100000000
000c00151939000100000000000d0703194e000100000000000e0025190e
0003000104090000021205840003000104090001000e0210000300010409
0002000804d60003000104090003002e04b00003000104090004001804c6
0003000104090005001804de0003000104090006001804f6000300010409
00070076050e0003000104090008002a0592000300010409000900200796
000300010409000a02a00210000300010409000b005607b6000300010409
000c002a080c000300010409000d0e182051000300010409000e004a07b6
00a9002000320030003100380020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00430061006c006900620072
0069002000690073002000610020006d006f006400650072006e00200073
0061006e0073002000730065007200690066002000660061006d0069006c
00790020007700690074006800200073007500620074006c006500200072
006f0075006e00640069006e006700730020006f006e0020007300740065
006d007300200061006e006400200063006f0072006e006500720073002e
002000490074002000660065006100740075007200650073002000720065
0061006c0020006900740061006c006900630073002c00200073006d0061
006c006c00200063006100700073002c00200061006e00640020006d0075
006c007400690070006c00650020006e0075006d006500720061006c0020
0073006500740073002e0020004900740073002000700072006f0070006f
007200740069006f006e007300200061006c006c006f0077002000680069
0067006800200069006d007000610063007400200069006e002000740069
006700680074006c007900200073006500740020006c0069006e00650073
0020006f0066002000620069006700200061006e006400200073006d0061
006c006c0020007400650078007400200061006c0069006b0065002e0020
00430061006c0069006200720069002700730020006d0061006e00790020
00630075007200760065007300200061006e006400200074006800650020
006e00650077002000720061007300740065007200690073006500720020
007400650061006d00200075007000200069006e00200062006900670067
00650072002000730069007a0065007300200074006f0020007200650076
00650061006c002000610020007700610072006d00200061006e00640020
0073006f006600740020006300680061007200610063007400650072002e
004d006900630072006f0073006f00660074003a002000430061006c0069
00620072006900200042006f006c006400560065007200730069006f006e
00200036002e0032003300430061006c0069006200720069002d0042006f
006c006400430061006c0069006200720069002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000740068
00650020004d006900630072006f0073006f00660074002000670072006f
007500700020006f006600200063006f006d00700061006e006900650073
002e00a9002000320030003100380020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e000d000a0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
00700073003a002f002f0064006f00630073002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f00610062006f007500740068007400740070003a
002f002f006c00750063006100730066006f006e00740073002e0063006f
006d004d006900630072006f0073006f0066007400200073007500700070
006c00690065006400200066006f006e0074002e00200059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e007400200074006f0020006300720065006100740065002c00200064
006900730070006c00610079002c00200061006e00640020007000720069
006e007400200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
0020006c006900630065006e007300650020007400650072006d00730020
006f00720020007400650072006d00730020006f00660020007500730065
002c0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000700072006f0064007500630074002c002000730065
00720076006900630065002c0020006f007200200063006f006e00740065
006e007400200069006e0020007700680069006300680020007400680069
007300200066006f006e0074002000770061007300200069006e0063006c
0075006400650064002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e00200041006e00790020006f00740068006500720020
007500730065002000690073002000700072006f00680069006200690074
00650064002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c6456657273696f6e20362e323343616c
696272692d426f6c6443616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f7468747470733a
2f2f646f63732e6d6963726f736f66742e636f6d2f7479706f6772617068
792f61626f7574687474703a2f2f6c75636173666f6e74732e636f6d4d69
63726f736f667420737570706c69656420666f6e742e20596f75206d6179
20757365207468697320666f6e7420746f206372656174652c2064697370
6c61792c20616e64207072696e7420636f6e74656e74206173207065726d
697474656420627920746865206c6963656e7365207465726d73206f7220
7465726d73206f66207573652c206f6620746865204d6963726f736f6674
2070726f647563742c20736572766963652c206f7220636f6e74656e7420
696e207768696368207468697320666f6e742077617320696e636c756465
642e20596f75206d6179206f6e6c792028692920656d6265642074686973
20666f6e7420696e20636f6e74656e74206173207065726d697474656420
62792074686520656d62656464696e67207265737472696374696f6e7320
696e636c7564656420696e207468697320666f6e743b20616e6420286969
292074656d706f726172696c7920646f776e6c6f6164207468697320666f
6e7420746f2061207072696e746572206f72206f74686572206f75747075
742064657669636520746f2068656c70207072696e7420636f6e74656e74
2e20416e79206f74686572207573652069732070726f686962697465642e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d004d0069006300
72006f0073006f0066007400200073007500700070006c00690065006400
200066006f006e0074002e00200059006f00750020006d00610079002000
75007300650020007400680069007300200066006f006e00740020007400
6f0020006300720065006100740065002c00200064006900730070006c00
610079002c00200061006e00640020007000720069006e00740020006300
6f006e00740065006e00740020006100730020007000650072006d006900
7400740065006400200062007900200074006800650020006c0069006300
65006e007300650020007400650072006d00730020006f00720020007400
650072006d00730020006f00660020007500730065002c0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
700072006f0064007500630074002c002000730065007200760069006300
65002c0020006f007200200063006f006e00740065006e00740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e0074002000770061007300200069006e0063006c007500640065006400
2e00200059006f00750020006d006100790020006f006e006c0079002000
280069002900200065006d00620065006400200074006800690073002000
66006f006e007400200069006e00200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
79002000740068006500200065006d00620065006400640069006e006700
20007200650073007400720069006300740069006f006e00730020006900
6e0063006c007500640065006400200069006e0020007400680069007300
200066006f006e0074003b00200061006e00640020002800690069002900
2000740065006d0070006f0072006100720069006c007900200064006f00
77006e006c006f006100640020007400680069007300200066006f006e00
7400200074006f002000610020007000720069006e007400650072002000
6f00720020006f00740068006500720020006f0075007400700075007400
2000640065007600690063006500200074006f002000680065006c007000
20007000720069006e007400200063006f006e00740065006e0074002e00
200041006e00790020006f00740068006500720020007500730065002000
690073002000700072006f0068006900620069007400650064002e000d00
0a000d000a00540068006500200066006f006c006c006f00770069006e00
670020006c006900630065006e00730065002c0020006200610073006500
640020006f006e00200074006800650020004d004900540020006c006900
630065006e00730065002000280068007400740070003a002f002f006500
6e002e00770069006b006900700065006400690061002e006f0072006700
2f00770069006b0069002f004d00490054005f004c006900630065006e00
7300650029002c0020006100700070006c00690065007300200074006f00
200074006800650020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200066006f007200
20004200690062006c006900630061006c00200048006500620072006500
770020201c004c00610079006f007500740020004c006f00670069006320
1d0020006100730020006a006f0069006e0074006c007900200064006500
760065006c006f007000650064002000620079002000520061006c007000
68002000480061006e0063006f0063006b00200061006e00640020004a00
6f0068006e00200048007500640073006f006e002e0020000d000a000d00
0a005000650072006d0069007300730069006f006e002000690073002000
68006500720065006200790020006700720061006e007400650064002c00
2000660072006500650020006f0066002000630068006100720067006500
2c00200074006f00200061006e007900200070006500720073006f006e00
20006f0062007400610069006e0069006e00670020006100200063006f00
7000790020006f006600200074006800650020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
480065006200720065007700200061006e00640020006100730073006f00
630069006100740065006400200064006f00630075006d0065006e007400
6100740069006f006e002000660069006c00650073002000280074006800
650020201c004c00610079006f007500740020004c006f00670069006300
200053006f006600740077006100720065201d0029002c00200074006f00
20006400650061006c00200069006e00200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
7700610072006500200077006900740068006f0075007400200072006500
73007400720069006300740069006f006e002c00200069006e0063006c00
7500640069006e006700200077006900740068006f007500740020006c00
69006d00690074006100740069006f006e00200074006800650020007200
69006700680074007300200074006f0020007500730065002c0020006300
6f00700079002c0020006d006f0064006900660079002c0020006d006500
7200670065002c0020007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c0020007300750062006c00
6900630065006e00730065002c00200061006e0064002f006f0072002000
730065006c006c00200063006f00700069006500730020006f0066002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f006600740077006100720065002c00200061006e006400
200074006f0020007000650072006d006900740020007000650072007300
6f006e007300200074006f002000770068006f006d002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f0066007400770061007200650020006900730020006600750072006e00
69007300680065006400200074006f00200064006f00200073006f002c00
20007300750062006a00650063007400200074006f002000740068006500
200066006f006c006c006f00770069006e006700200063006f006e006400
6900740069006f006e0073003a000d000a000d000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
20006e006f007400690063006500200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c0020006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f007200200073007500620073007400
61006e007400690061006c00200070006f007200740069006f006e007300
20006f006600200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002e00
0d000a000d000a00540048004500200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002700
4100530020004900530027002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f002000540048004500
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054002e00200049004e0020004e00
4f0020004500560045004e00540020005300480041004c004c0020005400
48004500200041005500540048004f005200530020004f00520020004300
4f005000590052004900470048005400200048004f004c00440045005200
530020004200450020004c004900410042004c004500200046004f005200
200041004e005900200043004c00410049004d002c002000440041004d00
410047004500530020004f00520020004f00540048004500520020004c00
49004100420049004c004900540059002c00200057004800450054004800
45005200200049004e00200041004e00200041004300540049004f004e00
20004f004600200043004f004e00540052004100430054002c0020005400
4f005200540020004f00520020004f005400480045005200570049005300
45002c002000410052004900530049004e0047002000460052004f004d00
2c0020004f005500540020004f00460020004f005200200049004e002000
43004f004e004e0045004300540049004f004e0020005700490054004800
2000540048004500200053004f0046005400570041005200450020004f00
52002000540048004500200055005300450020004f00520020004f005400
48004500520020004400450041004c0049004e0047005300200049004e00
2000540048004500200053004f004600540057004100520045002e000d00
0a0000>
<b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[16309 1205 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 316 18 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>IAAAAA+Calibri-Bold AddT42Char 
3 5392 258 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>IAAAAA+Calibri-Bold AddT42Char 
3 8242 373 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>IAAAAA+Calibri-Bold AddT42Char 
3 8896 381 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>IAAAAA+Calibri-Bold AddT42Char 
3 9124 393 <0002007efe95040003d7002a003d0094b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022711140e0223222e
023511343e0233321e0215153e0333321e0205342e0223220e0207111616
33323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e2919
0a274b4e532f628a5728fefa11294332193133361e35603431452c1501ed
77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a6928
3d29144d86b277396952310f223628feda4349325166>IAAAAA+Calibri-Bold AddT42Char 
3 9446 396 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>IAAAAA+Calibri-Bold AddT42Char 
3 9698 400 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>IAAAAA+Calibri-Bold AddT42Char 
3 10632 410 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>IAAAAA+Calibri-Bold AddT42Char 
3 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>IAAAAA+Calibri-Bold AddT42Char 
IAAAAA+Calibri-Bold /CharStrings get begin
/C 18 def
/a 258 def
/m 373 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
end
IAAAAA+Calibri-Bold /Encoding get
dup 67 /C put
dup 97 /a put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/AARSST+Calibri-Bold /IAAAAA+Calibri-Bold findfont ct_VMDictPut
/AARSST+Calibri-Bold*1 
[67{/.notdef}rp /C 29{/.notdef}rp /a 11{/.notdef}rp /m /.notdef /o 
/p /.notdef /r /s /t 139{/.notdef}rp]
AARSST+Calibri-Bold nf
AARSST+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
963.936 216.925 mo
(Comparators)
[12.9655 13.2837 20.0485 13.2595 11.8134 8.2594 11.8134 8.25952 12.9897 8.2594 0 ]xsh
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSST+Calibri-Bold gcheck setglobal} if

3 0 3 <> AARSST+Calibri-Bold AddT42Char 
3 818 39 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>AARSST+Calibri-Bold AddT42Char 
3 1596 90 <0002008dfffa044d050e00360044009bb10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1aed2b12392fed2b39012fed32d4edd4ed1112393930311bb12e10b8ffe8
b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b6402151
1755055500183f3f3f1aed2b12392fed2b3930315925140e0223222e0227
032e03232311140e0223222e023511343633213216171e0315140e02071e
031717161601342627262623231133323e02044d081e3a322a321d0c0474
152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e3c1d
332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b110c01
21314c331afe130a100a06060a100a04972c2704030b3657774d416b543e
130e2839492eff262303644058120506fe911b314400>AARSST+Calibri-Bold AddT42Char 
3 2322 100 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>AARSST+Calibri-Bold AddT42Char 
3 7330 286 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>AARSST+Calibri-Bold AddT42Char 
3 7736 346 <0001007efffa03d205700032006bb10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1aed2b1239012fed32d4ed30311bb22a1910b8ffe8b40b0f
014c10b8014d4009402d4a2446194c054c00183f3f3f3f1aed2b12393031
5925140e0223222e023511342e022322060711140e0223222e023511343e
0233321e021511363633321e021503d20c1c312425311c0c132439263062
350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a0505
0a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b06060b10
0afe13403f3c688b6300>AARSST+Calibri-Bold AddT42Char 
3 8628 374 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>AARSST+Calibri-Bold AddT42Char 
AARSST+Calibri-Bold /CharStrings get begin
/space 3 def
/G 39 def
/R 90 def
/T 100 def
/e 286 def
/h 346 def
/n 374 def
end
AARSST+Calibri-Bold /Encoding get
dup 32 /space put
dup 71 /G put
dup 82 /R put
dup 84 /T put
dup 101 /e put
dup 104 /h put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSST+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 10{/.notdef}rp /R 
/.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h 
4{/.notdef}rp /m /n /o /p /.notdef /r /s 
/t 139{/.notdef}rp]
AARSST+Calibri-Bold nf
AARSST+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
963.936 260.877 mo
(The Ramp )
[12.1318 13.2349 12.3773 5.02429 13.8477 12.1075 20.0483 13.2594 0 ]xsh
963.936 294.467 mo
(Generator)
[15.6121 12.4262 13.2595 12.3771 8.2594 11.8135 7.96533 13.2593 0 ]xsh
0 .356603 .845365 0 cmyk
%ADOBeginSubsetFont: IAAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSST+Calibri-Bold gcheck setglobal} if
3 608 24 <0002008d000004c0050e0012001f006fb10102435558bf0013029b000000
1a029200090018ffe8b40b0f014c18b8012e40090e511b180b0f014c1bb8
0154b240055400183f1aed2b3fed2b012fedd4ed30311bb90018ffe8b40b
0f014c18b8012e40090e511b180b0f014c1bb80154b240055400183f1aed
2b3fed2b30315901140e0223212226351134363321321e0205342e022323
1133323e0204c05daef9acfecb212d2d21014cadf1a556fef02b5f957985
896c946331029ab2fda04b272c04682c27519feaa35c9e7441fc903871a8
>AARSST+Calibri-Bold AddT42Char 
3 1948 94 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>AARSST+Calibri-Bold AddT42Char 
3 5862 272 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>AARSST+Calibri-Bold AddT42Char 
3 7986 349 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>AARSST+Calibri-Bold AddT42Char 
3 11948 437 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>AARSST+Calibri-Bold AddT42Char 
AARSST+Calibri-Bold /CharStrings get begin
/D 24 def
/S 94 def
/c 272 def
/i 349 def
/u 437 def
end
AARSST+Calibri-Bold /Encoding get
dup 68 /D put
dup 83 /S put
dup 99 /c put
dup 105 /i put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSST+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 2{/.notdef}rp /G 10{/.notdef}rp 
/R /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
AARSST+Calibri-Bold nf
AARSST+Calibri-Bold*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
963.936 333.656 mo
(CDS Circuits)
[12.9655 15.4407 11.4704 5.539 13.039 5.90668 8.55359 10.3181 13.2595 5.90662 8.25964 0 
]xsh
117.349 499.643 mo
129.227 258.225 li
121.116 257.832 li
109.238 499.247 li
cp
.61709 .780514 0 0 cmyk
f
89.6704 494.994 mo
114.945 494.994 li
114.945 503.097 li
89.6704 503.097 li
cp
f
421.908 211.768 mo
421.908 223.923 li
418.881 223.923 li
418.881 211.768 li
cp
421.908 233.032 mo
421.908 245.187 li
418.881 245.187 li
418.881 233.032 li
cp
421.908 254.296 mo
421.908 266.451 li
418.881 266.451 li
418.881 254.296 li
cp
421.908 275.56 mo
421.908 287.715 li
418.881 287.715 li
418.881 275.56 li
cp
421.908 296.849 mo
421.908 309.003 li
418.881 309.003 li
418.881 296.849 li
cp
421.908 318.113 mo
421.908 330.267 li
418.881 330.267 li
418.881 318.113 li
cp
421.908 339.382 mo
421.908 351.536 li
418.881 351.536 li
418.881 339.382 li
cp
421.908 360.653 mo
421.908 372.807 li
418.881 372.807 li
418.881 360.653 li
cp
421.908 381.922 mo
421.908 394.076 li
418.881 394.076 li
418.881 381.922 li
cp
.899962 .828183 .680751 .520256 cmyk
f
744.954 408.878 mo
745.003 421.032 li
741.952 421.044 li
741.927 408.89 li
cp
745.052 430.149 mo
745.102 442.301 li
742.05 442.313 li
742.001 430.159 li
cp
745.126 451.418 mo
745.176 463.572 li
742.124 463.585 li
742.075 451.43 li
cp
745.2 472.687 mo
745.249 484.841 li
742.198 484.854 li
742.149 472.699 li
cp
745.299 493.958 mo
745.323 506.113 li
742.297 506.122 li
742.247 493.971 li
cp
745.372 515.227 mo
745.422 527.381 li
742.37 527.394 li
742.321 515.239 li
cp
745.446 536.498 mo
745.471 542.566 li
742.42 542.578 li
742.395 536.508 li
cp
f
692.343 542.583 mo
688.332 553.067 li
695.641 553.067 li
cp
691.851 539.335 mo
694.927 539.335 li
700.07 554.882 li
700.07 555.742 li
685.601 555.742 li
685.601 554.858 li
cp
.997223 .918425 .647791 .507591 cmyk
ef
gsave
16.1434 576.246 mo
1134.4 576.246 li
1134.4 21.7122 li
16.1434 21.7122 li
cp
eclp
%ADOBeginSubsetFont: KAAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f328821eb1d000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c796625e47cb50000d1bc00004aa268656164fa71cec900001a800000
00366868656112c41fa400001ab800000024686d74789174285f00001adc
000054546c6f6361fcdfe92e00006f3000003b7e6d61787027ff11d80000
aab0000000206e616d65030148160000aad0000015c370726570664ecf85
0000c0940000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00006ff420024ff02000000000000004d53202000c00000
20830639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006fd719b9d5c595f0f3cf5001b080000000000b9e6
983d00000000d630eee4f434ec4a16f118ef000000090002000000000000
00010000063bfe390161175af434fda416f1000100000000000000000000
000000000c6c054400be0000000001c3000001c3000004fc000600000000
0480007700000000049a00790000000000000000057e0079000000000000
000005090079044b0079068600750000000000000000048b007900000000
0000000003f8007000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004700069000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034f
00530000000002b500250000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000045dfffe0000000003ef006904aa006a04170068000000000000
000004e3006800000000000000000476006803b7006805bb006500000000
000000000433006800000000046a006803a4005e04390039000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000034e005d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000284004e00000000021c002e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000024900c0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000002bf
002b03ae003103b000330000000000000000000000000000000000000000
0000000000000000043600b10436006f0436008100000000000000000000
00000000000000000000000000000000000002e5002c03e0002903e3003f
00000000000000000000000000000000000000000000000000000000046e
00b2046e0081046e00900000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000342007e034200630342007300000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000342007e03420063034200730000000000000000000000000000
000000000000000000000000000003b00015000000000351006400000000
035b005d000000000000000003f6005d000000000000000003af005d031a
005d04af005d00000000000000000357005d000000000000000002fa0062
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000004a100b704a10088
04a1009d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000005970014
000000000509008e00000000051f008a00000000000000000613008a0000
000000000000059d008a04c0008a0731008800000000000000000515008a
0000000000000000047c008a000000000000000000000000000000000000
000000000000000000000000000000000000000000000501008200000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003c6006b000000000321003a
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c200b804c2
009004c200a8000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000060d
002200000000057100a40000000005810099000000000000000006800099
0000000000000000060b00990517009907af00990000000000000000057b
0099000000000000000004e200a100000000000000000000000000000000
000000000000000000000000000000000000000000000000056c00990000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004210080000000000376
004b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000>
<000000760076007600760110011001a401a4024f024f024f02e502e502e5
039503fd049f049f049f05140514051405cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb05cb
0663066306630663066306630663066306630663066306630663066306ee
06ee07660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
076607660766076607660766076607660766076607660766076607660766
0766076607660766076607660766076607dc07dc08430899092209220922
0995099509950a2c0a7c0af70af70af70b610b610bed0c630cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb90cb9
0cb90cb90cb90d380d380d380d380d380d380d380d380d380d380d380d38
0d380d380d990d990df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20df20df20df20df20df20df2
0df20df20df20df20df20df20df20df20df20e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e280e28
0e280e280e280e280e280e280e280e280e280e280e280e280e280e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e52
0e520e520e520e520e520e520e520e520e520e520e520e520e520e520e99
0f090f9e0f9e0f9e0f9e0f9e0f9e0f9e0f9e0fe8105810e910e910e910e9
10e910e910e910e91133119d12201220122012201220122012201220127b
130513a713a713a713a713a713a713a713a713b513c313d113d113d113d1
13d113d113d113d113d113d113d113d113d113e413f7140a140a140a140a
140a140a140a140a140a140a140a140a140a1489151a15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce15ce
15ce15ce15ce15ce15ce15ce15ce15ce15dc15ea15f815f815f815f815f8
15f815f815f8165f165f16ac16ac17231723172317a917a917a9183c1888
19111911191119741974197419df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df19df19df19df19df19df19df19df19df19df19df
19df19df19df19df19df1a2b1a841ae31ae31ae31ae31ae31ae31ae31ae3
1ae31ae31ae31ae31ae31ae31b351b351b8c1b8c1bfe1bfe1bfe1c6d1c6d
1c6d1cff1d441dc61dc61dc61e1e1e1e1e1e1e901e901e901e901e901e90
1e901e901e901e901e901f141f141f141f141f141f141f141f141f141f14
1f141f141f141f141f771f771fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc8
1fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc81fc82008205f
20c620c620c620c620c620c620c620c620c620c620c620c620c620c62118
21182169216921d421d421d4224c224c224c22cd231023832383238323df
23df23df2445244524452445244524452445244524452445244524b424b4
24b424b424b424b424b424b424b424b424b424b424b424b4250a250a2551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
255125512551255125512551255125512551255125512551255125512551
25512551255125512551255125512551255125510000000100001dbe0050
0004002e000100020010002f0086000009a41128000100010000002f023a
000000000000000d03880000000000000000000e006c0388000000030000
0000006403f400000003000000010018046e0000000300000002000e0486
0000000300000003002e045800000003000000040018046e000000030000
0005001804940000000300000006001604ac0000000300000007007604c2
0000000300000008002a0402000000030000000900460538000000030000
000a070a057e000000030000000b00560c88000000030000000c00280cde
000000030000000d03880000000000030000000e006c0388000100000000
000000320d060001000000000001000c0d43000100000000000200070d4f
000100000000000300170d380001000000000004000c0d43000100000000
0005000c0d560001000000000006000b0d620001000000000007003b0d6d
000100000000000800150d0d000100000000000900230da8000100000000
000a03850dcb000100000000000b002b1150000100000000000c0014117b
000100000000000d01c4118f000100000000000e00361353000300010409
0000006403f400030001040900010018046e0003000104090002000e0486
0003000104090003002e045800030001040900040018046e000300010409
0005001804940003000104090006001604ac0003000104090007007604c2
0003000104090008002a0402000300010409000900460538000300010409
000a070a057e000300010409000b00560c88000300010409000c00280cde
000300010409000d03880000000300010409000e006c0388004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020007200690067
006800740073002000720065007300650072007600650064002e004d0069
00630072006f0073006f00660074003a002000430061006d006200720069
00610020004d0061007400680052006500670075006c0061007200560065
007200730069006f006e00200036002e0039003900430061006d00620072
00690061004d00610074006800430061006d006200720069006100200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004d006f006e006f007400790070006500200049
006d006100670069006e006700200061006e00640020005400690072006f
002000540079007000650077006f0072006b007300430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f007700770077002e0066006f006e00740073002e0063006f006da920
32303137204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e4d6963726f736f66743a2043
616d62726961204d617468526567756c617256657273696f6e20362e3939
43616d627269614d61746843616d6272696120697320612074726164656d
61726b206f6620746865204d6963726f736f66742067726f7570206f6620
636f6d70616e6965732e4d6f6e6f7479706520496d6167696e6720616e64
205469726f2054797065776f726b7343616d627269612068617320626565
6e2064657369676e656420666f72206f6e2d73637265656e207265616469
6e6720616e6420746f206c6f6f6b20676f6f64207768656e207072696e74
656420617420736d616c6c2073697a65732e204974206861732076657279
206576656e2073706163696e6720616e642070726f706f7274696f6e732e
20446961676f6e616c20616e6420766572746963616c20686169726c696e
657320616e6420736572696673206172652072656c61746976656c792073
74726f6e672c207768696c6520686f72697a6f6e74616c20736572696673
2061726520736d616c6c20616e6420696e74656e6420746f20656d706861
73697a65207374726f6b6520656e64696e67732072617468657220746861
6e207374616e64206f7574207468656d73656c7665732e20546869732070
72696e6369706c65206973206d6f7374206e6f7469636561626c6520696e
20746865206974616c69637320776865726520746865206c6f7765726361
7365206368617261637465727320617265207375626475656420696e2073
74796c6520746f206265206174207468656972206265737420617320656c
656d656e7473206f6620776f72642d696d616765732e205768656e204361
6d62726961206973207573656420666f722063617074696f6e7320617420
73697a6573206f76657220323020706f696e742c207468652020696e7465
722d6368617261637465722073706163696e672073686f756c6420626520
736c696768746c79207265647563656420666f7220626573742072657375
6c74732e205468652064657369676e2069736e2774206a75737420696e74
656e64656420666f7220627573696e65737320646f63756d656e74733a20
54686520726567756c61722077656967687420686173206265656e206578
74656e64656420776974682061206c6172676520736574206f66206d6174
6820616e6420736369656e63652073796d626f6c732e2054686520477265
656b20616e6420437972696c6c696320686173206265656e206465736967
6e656420756e64657220636c6f7365207375706572766973696f6e206f66
20616e20696e7465726e6174696f6e616c207465616d206f662065787065
7274732c2077686f2061696d656420746f20736574206120686973746f72
6963616c206e6577207374616e6461726420696e206d756c74692d736372
69707420747970652064657369676e2e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f7777772e666f6e74732e636f6d4d6963726f736f66742073
7570706c69656420666f6e742e20596f75206d6179207573652074686973
20666f6e7420746f206372656174652c20646973706c61792c20616e6420
7072696e7420636f6e74656e74206173207065726d697474656420627920
746865206c6963656e7365207465726d73206f72207465726d73206f6620
7573652c206f6620746865204d6963726f736f66742070726f647563742c
20736572766963652c206f7220636f6e74656e7420696e20776869636820
7468697320666f6e742077617320696e636c756465642e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e20416e79206f7468
6572207573652069732070726f686962697465642e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f6e
74732f64656661756c742e6173707800b9002001feb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f0b40918014a20b801efb40918014a20
b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801eb
b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918
014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20
b801e0b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801a0b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018ab40918014a20b80188b40918014a20b80187
b40918014a20b80186b40918014a20b8015bb40918014a20b8015ab40918
014a20b80159b40918014a20b80158b40918014a20b80154b40918014a20
b80150b40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80136b40918014a20b80130b40918014a20b8012fb40918
014a20b8012db40918014a20b8012cb40918014a20b80109b40918014a20
b80107b40918014a20b8010540ff0918014a20f40918014a20f20918014a
20f10918014a20f00918014a20ef0918014a20ed0918014a20ec0918014a
20ea0918014a20e50918014a20e40918014a20e30918014a20e10918014a
20de0918014a20da0918014a20d80918014a20d30918014a20cd0918014a
20cc0918014a20ca0918014a20c90918014a20c80918014a20c60918014a
20c40918014a20c20918014a20c00918014a20bf0918014a20bd0918014a
20b30918014a20b10918014a20af0918014a20a50918014a20a40918014a
20a00918014a208e0918014a208d0918014a208c0918014a208b0918014a
208a0918014a20890918014a20850918014a20840918014a208309180140
3e4a20800918014a207f0918014a207e0918014a207d0918014a20620918
014a20510918014a20500918014a20480918014a20420918014a200e0918
014a0f41630441001f0441002f0441003f0441004f0441005f0441006f04
41007f0441008f0441009f044100af044100bf044100cf0441000d005f03
ea0001008003f4009003f400a003f400b003f400c003f400d003f400e003
f400f003f40008002f0433003f0433004f0433005f0433006f0433007f04
33008f0433009f043300af043300bf0433000a001f0434002f0434003f04
34004f0434005f0434006f0434007f0434000700cf042300df042300ef04
230003000f0423001f0423003f0423005f0423009f0423402305f0e201b0
fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ffe0fff0ff0470
410a0425000100c0042500d0042500e0042500f00425400c04e0bef0be02
e0bef0be020f41110421003f04210002001002580001000f025800e00258
0002000f040a0001000f0408b4010f26010f411b04070001000f04060001
007f02170001000f029c001f029c002f029c003f029c004f029c005f029c
000600df029c00ef029c00ff029c405303dfe016171cd4d516171c7b7c16
1b7b7c19d1d216171c767716171c6d7016171c6c6f16171c6b6e161b6b6e
7f721a747514151c676a14151c666914151c6568141b656885711a197316
7a431921794319211941310292009902920002001c0292002c0292000202
99029a029b000c028d028e028f000c028a028b028c000c001b0299008b02
990002000f0299009f029900bb029900db0299000402a5028b02a7000d02
9f029a02a1000d029c028e029e000dffe8028eb2142339b9ffe8029ab214
2339411a0282027d0008002b0281027c0005002b027e027a0004002b027d
027a0004002b027a02570005002b027702670005002b02670257b2052b20
b80270b21b2039bd027202570004002b026e0257b2042b20b80257b33133
3909414102710019027100aa025700b8025700040069027100da025700e8
02570003028402790006002b028002790004002b027f02790008002b027b
02790008002b027902560006002b027802660000002b027602660008002b
027502660008002b027302660008002b026602560006002b027402560000
002b027302560000002b026f0256b2072b29415002560001008602560001
025d025e025f000c025102520253000c024e024f0250000c000b024e000b
0251000a025d003b024e00590251007602510075025d009b024e00b5025d
00d9024e000a0269024f026b000d0263025e0265000d026002520262000d
0269003c0263003c0260003c025d003c0251003c024e003c0244023c0005
002b024302110002002b0240023c0005002b023e02110004002b023d0211
b2042b464115023c00010046023c00c6023c0002023b02110007002b0239
02110006002b023702110004002b02210211b2072b20b80233b213163941
16022f02110004002b022e02110004002b022d02110005002b022c021100
04002b022b02110004002b022a0211b2052b474142021100010005021100
a502110002003b0233004b02330064021100740211000402420210000700
2b024102100005002b023f02100002002b023a02100007002b0238021000
07002b023602100007002b023502100007002b022002100007002b023402
100005002b023102100005002b023002100007002b022902100007002b02
280210b2072b8a416e02100001001a021000b90232000202170218021900
0c020b020c020d000c02080209020a000c000b0208000b020b000a021700
3b02080059020b0076020b00750217009b020800b5021700d90208000a02
2302090225000d021d0218021f000d021a020c021c000d0223003c021d00
3c021a003c0217003c020b003c0208003c0153014d0002002b014e014d00
02002b0156015c0004002b0155015c0004002b0157015c0002002b01da01
d4000a002b01d801d4000a002b01e501e00005002b01e101e00005002b01
e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b801ebb2090a39
b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f203940b80103
b22c2c39ba010301000100b21f2223b901030100b3c01e1e23ba01030100
0100b21d1d23b901030100b3c01c1c23ba010301000100b21b1b23b90103
0100b3c0141a23b901030100b3800b1323b901030100b340090a23b90102
0101b340508b23b901010100b340508b23410a01020100004f001f010101
00004f001fffc00100b2505539b9ffc00100b323233940b80100b71d1e39
40e81b1b39b8ffc0b4e724253956b80108401301ddd8052b3bd64bd60240
b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a012b9b9a052b
9a91042ba999042b9992032b40c52c31399291032b889198910209631863
c7630320630d0f39b8fff0b4471f2539cbb8010a401c019895012b379e01
9695022b1897262a3917970110953f4039d99501bc0136012c0003002b01
30b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd042bbc014c01
4a0003002b014ab27f052bb9015b0154b2042b0f41190154001f01540002
018601880002002b018701880004002b018901880004002b0188018f0003
002b018e018f0004002b018fb385052b3f410c01a0000101ce01cc000300
2b01d201cc0006002b01d101ccb2062b40b80107b2323239b80107b2af03
2bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8042b40c82122
39b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a39b8ffc04023
bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a2a39cdcc052b
40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea012bb80109b2da
032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1c0052b40c03d
3d39c0af042bd3af052baf7d052b20da121639c5bd01208e01108e01b8ff
c0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c8d052b8d8a04
2b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a0042bef85052b40
ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a0454739b8ffc0b3a0
383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394313139b8ffc0
40d480181a39817f012b7e7d052b7d7f052bed7f052bd87f017f85251f88
85012b8785012b8485052b8385052b298539854985036685014685013685
012685011b37151836151535151234150f33150c3215093115063015032f
15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f22230e24230f
1e1f0e201f0f00051005023c3d0e0b3c743c993c030f10110c090a0b0c06
07080c0304050c0001020c0603641f702a010f2a010b0f4b0f020b003b00
44037403ab00db0f060b000b030b0f3b003b0959035b0976039b009b0999
0fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d1204140d2ff9
6ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8010bb22ff92f
ba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c263c243c223c
203c1e3c1b3c183c153c123c0f3c093c063c033c003c035050335401b012
4b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58
b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58b801
19b101018e851bb900010100b04b60858d592b2b1d42b0644b5358b20380
801d4259b0324b5358b20390901d4259004bb03251b01b23422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73747573742b
2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c4560442b2b73
2b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b2b2b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b2b2b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b74742b2b2b
2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b
0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b2b2b2b
2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b2b2b2b
2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b
2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b101322b4bb0505242b002435c4bb064524bb01e505b60b01a23424bb0c8
524bb036505bb00e23420073747373737373737374737374737573737475
7373747373737373b100024354b102024354b1060243545b5b58416301fe
006401fa006401f9006401f8006401f7006401f6006401f0006401ef0064
01ee006401ed006401ec006401eb006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401d3006401d2006401d1006401cf0064
01ce006401cd006401cc006401a00064018f0064018e0064018a00640188
00640187006401860064015b0064015a0064015900640158006401540064
01500064014c0064014b0064014a00640136006401300064012f0064012d
0064012c006401090064010700640105406964f464f264f164f064ef64ed
64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c964c8
64c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d648c
648b648a64896485648464836480647f647e647d64626451645064486442
640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[16273 2835 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3548 150 <00010025fff002c204b3001c0097b0852b58403117100314201340262f48
13400c0f481310971716020a0f06010c030607400a00a7441b0aee070f13
1409091e07050b851a2fe1393211392fd6cd003fed322b001a1810cd5f5e
5d11393ffdd62b2b1a19cd2b31301b4023141340262f4813400c0f481317
10976c1716020a0f06010c030607401b070aee6c070f00183f2b321a10cd
5f5e5d11393f2bd62b2b19cd303159133e0337331521152111141e023332
363717060623222635112325323e23140b8e0143febd102c382c2846222d
477f44817e94038a08283f5f5bf765fe436173411c211f36453e99a3022b
>KAAAAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>KAAAAA+CambriaMath AddT42Char 
KAAAAA+CambriaMath /CharStrings get begin
/g150 150 def
end
KAAAAA+CambriaMath /Encoding get
dup 116 /g150 put
pop
end
%ADOEndSubsetFont
/AARSSU+CambriaMath /KAAAAA+CambriaMath findfont ct_VMDictPut
/AARSSU+CambriaMath*1 
[116{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
700.759 555.941 mo
(t)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
700.759 555.941 mo
(t) false chp
.28457 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
grestore
1 /0 /CSD get_res sepcs
.506 sep
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 2366 19 <00020079000004380555001e002b006bb0852b5840251c20032091401c1c
130705080708a644071312a64413290329911303177e24242d1f007f0c2f
e13211392fe1003fed2b2b00182f2b110033111239182f1aed2b31301b40
111c20916c1c1c13070508071329916c130300183f2b2f11331112392f2b
30315925141e02171521353e023511342e02273521321615140e02232227
353332363635342e0223220701a90d1b2e31fe493e2a0d0a17262e01f0ea
e54884b4636f3d7471934e2e5170426332fd3b4629170b31311027484a03
61453f23150d31b3b768a66a2e04533b89715673461d0400>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g19 19 def
end
AARSSU+CambriaMath /Encoding get
dup 80 /g19 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[80{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
278.569 175.895 mo
(P)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
278.569 175.895 mo
(P) false chp
.28457 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 1182 11 <000100790000050405550038008ab0852b5840302b0f030f91402b23172b
91303006091503181718a644081712253134032232232322a6442303007f
2c0d0d3a0f2a7f1db8fff0b30f014d1d2f2be13212392f33e1003f2b1100
33111733183f332b110017332b00182f1aed2b31301b40152b0f916c2b06
09150318081712253134032232230300183f331117333f331117332f2b30
315925141e03171521353e0235112111141e02171521353e023511342e02
273521150e0315112111342626273521150e02150490060e142527fe5d37
2c11fdd40915292efe5b3e2a0d0a17262e01a52c27170b022c11283b01a3
382c10fa3a3a2316120a31310e22465301a3fe5d433e24180c3131102748
4a0361453f23150d31310b16214245fe9e01625740221031310e23465200
>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g11 11 def
end
AARSSU+CambriaMath /Encoding get
dup 72 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[72{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
292.711 175.895 mo
(H)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
292.711 175.895 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 236 4 <00020006000004e90565001f002200beb0852b58404408092122050b0a20
220e2219182220212203050e051a1f1f240e1713080b2214200a030a9140
0f204f200211032020181201141e03111211a64400160e061b0512221804
003f332f17332b11001733111239182f5f5e5d1aed2b1112003939300118
2f333312392f3333111217391133331087c0c0c087c0c0c0311b4022080b
2214200a916c0f204f200211032020181201141e031100160e061b051222
180400183f332f17331117331112392f5f5e5d2b11123939305921353e02
353426272721070606151416171521353636370133011e02171501210303
1c323118100f25fe2e221a103d3ffe5538532701a19e01541825342dfcb3
01a2be310a182b24224f3181624a4c1f3c380931310970680453fba54e52
2e0b31021c028500>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g4 4 def
end
AARSSU+CambriaMath /Encoding get
dup 65 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 35{/.notdef}rp /g150 
139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
309.254 175.895 mo
(A)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
309.254 175.895 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 2600 22 <00010070fff003950565003000e1b0852b58400f2f100e15482f2d2f0001
00000b0416b8fff0403c0e154816130018101820188018040e0318181c0b
2424041c2d04030491402d13131c031c91130418a44f170117172820ed0f
0f3028ed07073200a4302fe112392fe112392fe111392f5de1003fed2b00
183f1aed2b1112003911331239182f5f5e5d12392b1112392f5d12392b31
301b400f2f100e15482f2d2f000100000b0416b8fff040230e1548161300
18101820188018040e0318181c0b24241c2d04916c2d13131c916c130400
183f2b3f2b1139113312392f5f5e5d12392b1112392f5d12392b30315913
1e0233323635342626272e02353436363332161711232e02232206061514
1616171e0215140e0223222711d414446c55757d34767975884369cb834c
916d6317465e4b41673c336c6a808d4f4275a3619dcd01375866317a754b
665a3c3a6f824d70a55a101cfef258622730614347625434406e8d5e6991
5b2935011200>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g22 22 def
end
AARSSU+CambriaMath /Encoding get
dup 83 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[65{/.notdef}rp /g4 6{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 
32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
324.009 175.895 mo
(S)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
324.009 175.895 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 840 8 <000100790000042a0555002e00ceb0852b58b9000fffc0404b090c480f0a
1f1f17180202090a0a17031240090c48121791400a2e220a9128302223a6
44221803189140222e2da6442e090309912e0311a40f12121801a4020218
2120a41f1f300a187f272fe13212392fe13212392fe112392f33e1003fed
2b2b00182f1aed2b2b2b00182f1afdc62b2b11120039182f1112392f10c6
2b31301bb9000fffc04023090c480f0a1f1f17180202090a1240090c4812
0a17916c0a2218916c222e09916c2e0300183f2b2f2b2f2bc62b1112392f
1112392f10c62b3031590111232e0423211133323636373311232e022323
1121323e0337330321353e023511342e0227350420620f2022293827fec4
d62c32210f5e5e0e222f2fd60137313d2c2217146313fc623e2a0d0a1726
2e0555fed2314a321e0bfdf4193c40fe803c3d1afdbf1129424744fea131
1027484a0361453f23150d31>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g8 8 def
end
AARSSU+CambriaMath /Encoding get
dup 69 /g8 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[65{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 
2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
335.822 175.895 mo
(E)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
335.822 175.895 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if

2 0 3 <> AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g3 3 def
end
AARSSU+CambriaMath /Encoding get
dup 32 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 32{/.notdef}rp /g4 3{/.notdef}rp /g8 2{/.notdef}rp /g11 
7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
349.4 175.895 mo
( )sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
349.4 175.895 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 9280 883 <000100b2000003ce0565001a005fb0852b58401e12161515170806090809
994408170417000e161609060009008a0e0e1c1b1112392fe1c610c61133
2f111239003f2f2b110033111239182f333931301b400b12161515170806
0908170400183f2f11331112392f333930315901141e03171521353e0335
11342623220607270133061502b70d213e5e4dfd1d6f5f32171c1b207657
2c01d4370601053a3b25150b0249490511223e46032b2825423a4d011760
aa00>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g883 883 def
end
AARSSU+CambriaMath /Encoding get
dup 49 /g883 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 15{/.notdef}rp /g4 3{/.notdef}rp /g8 
2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 
139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
353.836 175.895 mo
(1)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
353.836 175.895 mo
(1) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
493.761 177.073 mo
(P)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
493.761 177.073 mo
(P) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
507.903 177.073 mo
(H)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
507.903 177.073 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
524.446 177.073 mo
(A)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
524.446 177.073 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
539.201 177.073 mo
(S)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
539.201 177.073 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
551.014 177.073 mo
(E)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
551.014 177.073 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
564.592 177.073 mo
( )sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
564.592 177.073 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 9462 884 <00010081000003c9056500280099b0852b584033201d121209181816081d
16031a169b401d040905401013480528082803289f081919120905070620
8c12122a19280909188e192fe1332f331112392ff1d632cd1112392f002f
ed2b001810c62b333f1aed322b11120039182f113911123931301b401b20
1d1212091818081a1d169b6c1d040905401013480508289f6c0800182f2b
c62b333f2b3211392f113911123930315925323e02373303213536363736
373e02353426262322072335363633321615140e0307060702be313c2415
105511fcc92b9286743338371830634bbb417979d354babe152d4c5c71be
59a00c1c2d2ffedc3069dc95804248695d2f4b7342d0c03933a39b355957
646778c99600>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g884 884 def
end
AARSSU+CambriaMath /Encoding get
dup 50 /g884 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 3{/.notdef}rp 
/g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp 
/g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
569.028 177.073 mo
(2)sh
AARSSU+CambriaMath*1 [24.509 0 -7.61653e-8 -24.456 0 0 ]msf
569.028 177.073 mo
(2) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
.997223 .918425 .647791 .507591 cmyk
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 544 6 <00010077fff004120565002000bdb0852b58401014100e1548140f125f12
6f1203121700b8fff040300e154800000250026002d002040903021e170e
030e914017131e060306911e041e010606020a0113a4021212220a7e1a2f
e112392f33e132111239111239003fed2b00183f1aed2b001810c45f5e5d
392b10c45d392b31301b401014100e1548140f125f126f1203121700b8ff
f0401d0e154800000250026002d002040903021e170e916c17131e06916c
1e0400183f2b3f2b10c45f5e5d392b10c45d392b3031590111232e022322
06021514121633323636373311060623220011341224333216041263184a
624567a15c4c946c52684720635ec576fefefc870106b65b9a0538feeb57
672c89feedc3c4feeb8d2f6663fee2191901580155d60142b013>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g6 6 def
end
AARSSU+CambriaMath /Encoding get
dup 67 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 7{/.notdef}rp /g19 2{/.notdef}rp 
/g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
943.265 463.597 mo
(C)sh
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
943.265 463.597 mo
(C) false chp
.25029 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 1834 15 <00010079000004100555001e0071b0852b58402700091009020c03090917
000b0ca6440b00030091400b19161716a64417030a09a4080820007f102f
e112392fe132003f2b110033182f1aed2b2b11120039182f5f5e5d31301b
401300091009020c030909170b00916c0b1916170300183f11332f2b1139
2f5f5e5d3031592521323e0437330321353e023511342e02273521150e03
1501a901062b3a29211e1b146514fc7d3e2a0d0a17262e01a52c25180c5c
0a15253c5b5bfe6e311027484a0361453f23150d31310c1320424800>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g15 15 def
end
AARSSU+CambriaMath /Encoding get
dup 76 /g15 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 3{/.notdef}rp /g15 3{/.notdef}rp 
/g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
955.639 463.597 mo
(L)sh
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
955.639 463.597 mo
(L) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 1482 14 <0001007900000509055500450094b0852b584038002a032a401626030300
3e3100911e301b1e3303303130a6441d211803310e1140033d3e3da6440f
0914033e03450b11161b2125072b7f372fe11732003f17332b1100173318
2f17332b110017332b00182f17331acd2b31301b401c2a4016260303001b
1e3303301d211803310e1140033d0f0914033e0300183f17331117332f17
331117332f17331acd303159013332363637363736373635342627352115
0e020701011e0217152135363635342627032e02232311141e0217152135
3e023511342e02273521150e031501a81e263f4e5060232c0f0c2e2801b4
203e413ffeb0016c3a423c22fe4725221719e929262c25350915292efe5b
3e2a0d0a17262e01a52c27170b02ec18425a6b3039271d1b282504313107
233d46fe86fdef54431f053131031616123324015b3e2813fe5d433e2418
0c31311027484a0361453f23150d31310b1621424500>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g14 14 def
end
AARSSU+CambriaMath /Encoding get
dup 75 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 14{/.notdef}rp /g4 /.notdef 
/g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 /g15 
3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
967.43 463.597 mo
(K)sh
AARSSU+CambriaMath*1 [21.5561 0 -6.69888e-8 -21.5095 0 0 ]msf
967.43 463.597 mo
(K) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
.506 sep
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
763.951 182.377 mo
(P)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
763.951 182.377 mo
(P) false chp
.28526 lw
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
778.102 182.377 mo
(H)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
778.102 182.377 mo
(H) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
794.636 182.377 mo
(A)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
794.636 182.377 mo
(A) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
809.402 182.377 mo
(S)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
809.402 182.377 mo
(S) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
821.219 182.377 mo
(E)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
821.219 182.377 mo
(E) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
834.805 182.377 mo
( )sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
834.805 182.377 mo
( ) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
%ADOBeginSubsetFont: KAAAAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AARSSU+CambriaMath gcheck setglobal} if
2 9738 885 <00010090fff003ca0565003000bbb0852b5840440d0c2526262503259a40
260416269a28300f1a0111031a001a001e2d161e03191e9a401613042d03
012d9b04040c0826262a308e00001a088c2a2a1a128c2121321b8e1a2fe1
12392fe112392fe112392fe112392f1239003fed322b00183f1aed322b11
12003939182f2f5f5e5d2b00182f1aed2b111200393931301b401f0d0c26
259a6c260f1a0111031a001a002d19161e9a6c161301042d9b6c04040018
3f2b323f2b321139392f2f5f5e5d2f2b3939303159133536363332161615
14060607151e031514060623222627353316163332363534262323353e02
353426232206079f74ca5e71aa5a447b623d71583565d09556c753782373
638285b0aa5a87b95a76715e761c043abe373646835b5581602e090b3554
754b74b4682720d4685e8e8b929a5808588a566f78666900>AARSSU+CambriaMath AddT42Char 
AARSSU+CambriaMath /CharStrings get begin
/g885 885 def
end
AARSSU+CambriaMath /Encoding get
dup 51 /g885 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AARSSU+CambriaMath*1 
[32{/.notdef}rp /g3 16{/.notdef}rp /g883 /g884 /g885 13{/.notdef}rp /g4 
/.notdef /g6 /.notdef /g8 2{/.notdef}rp /g11 2{/.notdef}rp /g14 
/g15 3{/.notdef}rp /g19 2{/.notdef}rp /g22 32{/.notdef}rp /g150 139{/.notdef}rp]
AARSSU+CambriaMath nf
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
839.227 182.377 mo
(3)sh
AARSSU+CambriaMath*1 [24.5681 0 -7.63488e-8 -24.515 0 0 ]msf
839.227 182.377 mo
(3) false chp
gsave
[2.46074 0 -7.64712e-9 -2.45543 15.9342 576.35 ]ct
@
grestore newpath
945.234 431.34 mo
965.117 431.274 li
965.092 427.222 li
945.234 427.288 li
cp
947.252 423.232 mo
935.071 429.349 li
947.276 435.387 li
cp
963.099 435.332 mo
975.255 429.214 li
963.05 423.178 li
cp
.997223 .918425 .647791 .507591 cmyk
f
988.789 398.68 mo
988.789 408.956 li
984.729 408.956 li
984.729 398.68 li
cp
980.669 400.706 mo
986.747 388.552 li
992.849 400.706 li
cp
992.849 406.931 mo
986.747 419.085 li
980.669 406.931 li
cp
f
77.5266 332.973 mo
77.5266 447.843 li
73.4664 447.843 li
73.4664 332.973 li
cp
69.4062 334.999 mo
75.4965 322.852 li
81.5868 334.999 li
cp
81.5868 445.82 mo
75.4965 457.974 li
69.4062 445.82 li
cp
f
478.825 418.717 mo
478.825 455.126 li
474.764 455.126 li
474.764 418.717 li
cp
470.704 420.742 mo
476.782 408.588 li
482.885 420.742 li
cp
482.885 453.1 mo
476.782 465.254 li
470.704 453.1 li
cp
f
117.725 500.323 mo
129.906 500.308 li
129.901 497.268 li
117.72 497.285 li
cp
139.04 500.296 mo
151.221 500.281 li
151.219 497.244 li
139.038 497.258 li
cp
160.358 500.271 mo
172.538 500.256 li
172.533 497.217 li
160.353 497.231 li
cp
181.673 500.244 mo
193.853 500.229 li
193.851 497.19 li
181.67 497.204 li
cp
202.99 500.217 mo
215.171 500.202 li
215.166 497.165 li
202.985 497.18 li
cp
224.305 500.19 mo
236.486 500.175 li
236.483 497.138 li
224.303 497.153 li
cp
245.622 500.166 mo
257.803 500.151 li
257.798 497.111 li
245.618 497.126 li
cp
266.93 500.139 mo
279.111 500.124 li
279.111 497.084 li
266.93 497.101 li
cp
288.265 500.112 mo
300.445 500.097 li
300.421 497.059 li
288.24 497.074 li
cp
309.575 500.087 mo
321.755 500.07 li
321.755 497.032 li
309.575 497.047 li
cp
330.885 500.06 mo
343.065 500.045 li
343.065 497.005 li
330.885 497.02 li
cp
352.195 500.033 mo
364.376 500.018 li
364.376 496.978 li
352.195 496.996 li
cp
373.529 500.006 mo
385.71 499.991 li
385.686 496.954 li
373.505 496.969 li
cp
394.84 499.981 mo
407.02 499.967 li
407.02 496.927 li
394.84 496.942 li
cp
416.15 499.954 mo
428.33 499.94 li
428.33 496.9 li
416.15 496.915 li
cp
437.46 499.927 mo
449.64 499.913 li
449.64 496.875 li
437.46 496.89 li
cp
458.794 499.9 mo
470.975 499.886 li
470.95 496.848 li
458.77 496.863 li
cp
480.104 499.876 mo
492.285 499.861 li
492.285 496.821 li
480.104 496.836 li
cp
501.414 499.849 mo
513.595 499.834 li
513.595 496.794 li
501.414 496.811 li
cp
522.724 499.822 mo
534.905 499.807 li
534.905 496.77 li
522.724 496.784 li
cp
544.059 499.797 mo
556.24 499.78 li
556.215 496.743 li
544.034 496.757 li
cp
565.369 499.77 mo
577.55 499.755 li
577.55 496.716 li
565.369 496.73 li
cp
586.679 499.743 mo
598.86 499.728 li
598.86 496.691 li
586.679 496.706 li
cp
607.989 499.716 mo
620.17 499.701 li
620.17 496.664 li
607.989 496.679 li
cp
629.324 499.692 mo
636.115 499.682 li
636.091 496.644 li
629.299 496.652 li
cp
f
30.554 298.617 mo
37.1719 298.617 li
37.1719 299.402 li
36.757 299.452 36.4497 299.55 36.2503 299.746 cv
36.0508 299.918 35.9511 300.188 35.9511 300.507 cv
35.9511 300.778 35.975 301.023 36.023 301.293 cv
36.0707 301.539 36.1706 301.932 36.3222 302.496 cv
38.6917 311.066 li
41.6465 302.521 li
41.7671 302.177 41.8606 301.882 41.9295 301.588 cv
41.9959 301.293 42.0304 300.974 42.0304 300.655 cv
42.0304 300.262 41.9295 299.967 41.7253 299.746 cv
41.521 299.55 41.2085 299.427 40.7853 299.402 cv
40.7853 298.617 li
45.943 298.617 li
45.943 299.402 li
45.6403 299.452 45.3844 299.55 45.1728 299.697 cv
44.9611 299.844 44.7692 300.041 44.5969 300.311 cv
44.4272 300.581 44.2254 301.048 43.9941 301.661 cv
38.9788 314.994 li
36.2144 314.994 li
32.2652 301.612 li
32.0897 301.023 31.9421 300.581 31.8225 300.336 cv
31.7026 300.09 31.5471 299.894 31.3557 299.722 cv
31.1642 299.574 30.897 299.476 30.554 299.402 cv
cp
1 /0 /CSD get_res sepcs
.506 sep
ef
57.725 311.974 mo
57.2747 311.974 56.9154 312.22 56.6497 312.662 cv
56.3814 313.128 56.2215 313.791 56.1698 314.651 cv
59.0981 314.651 li
59.0735 313.742 58.9578 313.079 58.7462 312.637 cv
58.5346 312.195 58.195 311.974 57.725 311.974 cv
cp
57.8677 311.066 mo
58.3993 311.066 58.8693 311.139 59.2704 311.262 cv
59.6715 311.385 60.016 311.557 60.3039 311.753 cv
60.5893 311.974 60.828 312.244 61.015 312.564 cv
61.239 312.932 61.4063 313.349 61.5219 313.84 cv
61.6351 314.307 61.6967 314.896 61.7016 315.584 cv
56.1255 315.584 li
56.1304 316.64 56.3199 317.425 56.6915 317.916 cv
57.0655 318.432 57.6315 318.678 58.3943 318.678 cv
58.8397 318.678 59.2408 318.604 59.6001 318.432 cv
59.9569 318.26 60.3432 317.966 60.7616 317.548 cv
61.4727 318.309 li
60.8748 318.948 60.2817 319.39 59.6961 319.66 cv
59.1104 319.93 58.4362 320.053 57.6733 320.053 cv
56.3076 320.053 55.279 319.684 54.59 318.923 cv
53.901 318.187 53.5565 317.082 53.5565 315.608 cv
53.5565 314.675 53.7337 313.84 54.0905 313.153 cv
54.4448 312.465 54.9468 311.95 55.5965 311.606 cv
56.2486 311.238 57.004 311.066 57.8677 311.066 cv
cp
51.1327 311.066 mo
51.4895 311.066 51.866 311.115 52.2597 311.189 cv
52.2597 313.595 li
50.6676 313.595 li
50.5667 313.276 50.4363 313.006 50.2763 312.834 cv
50.1139 312.637 49.8974 312.539 49.6292 312.539 cv
49.4987 312.539 49.3585 312.588 49.2035 312.662 cv
49.046 312.76 48.9032 312.858 48.7704 313.006 cv
48.6399 313.153 48.5464 313.3 48.4898 313.448 cv
48.4332 313.595 48.3963 313.742 48.3791 313.89 cv
48.3619 314.037 48.3545 314.282 48.3545 314.577 cv
48.3545 317.376 li
48.3545 317.941 48.3742 318.334 48.416 318.555 cv
48.4554 318.776 48.5391 318.948 48.6621 319.07 cv
48.7851 319.193 48.9918 319.291 49.2847 319.341 cv
49.2847 319.905 li
44.9488 319.905 li
44.9488 319.341 li
45.2318 319.267 45.4262 319.169 45.5345 319.046 cv
45.6428 318.923 45.7166 318.751 45.7535 318.53 cv
45.7929 318.334 45.8126 317.941 45.8126 317.376 cv
45.8126 313.791 li
45.8126 313.349 45.8052 313.03 45.7904 312.809 cv
45.7756 312.613 45.7387 312.441 45.6846 312.318 cv
45.628 312.195 45.5443 312.097 45.4287 311.999 cv
45.3155 311.925 45.1162 311.852 44.8356 311.802 cv
44.8356 311.213 li
47.2447 311.139 li
48.3545 311.139 li
48.2315 312.465 li
48.3447 312.49 li
48.7728 311.974 49.2133 311.631 49.6636 311.41 cv
50.1164 311.189 50.6061 311.066 51.1327 311.066 cv
cp
72.5338 307.358 mo
73.6337 307.358 li
73.6337 312.367 li
73.6682 312.367 li
74.2022 311.901 74.6795 311.557 75.0979 311.36 cv
75.5187 311.164 75.9468 311.066 76.3873 311.066 cv
77.032 311.066 77.5315 311.189 77.8834 311.434 cv
78.2328 311.655 78.4912 311.999 78.6512 312.441 cv
78.8136 312.883 78.8948 313.472 78.8948 314.184 cv
78.8948 317.376 li
78.8948 317.941 78.912 318.309 78.9465 318.53 cv
78.9809 318.727 79.0547 318.899 79.1655 319.021 cv
79.2787 319.169 79.4829 319.267 79.7831 319.341 cv
79.7831 319.905 li
75.5162 319.905 li
75.5162 319.341 li
75.7918 319.267 75.9813 319.169 76.0846 319.046 cv
76.1855 318.923 76.2569 318.751 76.2938 318.555 cv
76.3332 318.334 76.3528 317.941 76.3528 317.376 cv
76.3528 315.093 li
76.3528 314.503 76.3332 314.061 76.2938 313.742 cv
76.2569 313.398 76.1929 313.153 76.1018 312.981 cv
76.0108 312.809 75.8927 312.662 75.75 312.588 cv
75.6048 312.49 75.4178 312.441 75.1815 312.441 cv
74.9601 312.441 74.7263 312.514 74.4827 312.662 cv
74.2391 312.785 74.0373 312.981 73.8749 313.202 cv
73.7149 313.448 73.6337 313.693 73.6337 313.963 cv
73.6337 317.376 li
73.6337 317.941 73.6509 318.334 73.6829 318.53 cv
73.7149 318.751 73.7863 318.899 73.897 319.021 cv
74.0102 319.169 74.2145 319.267 74.5147 319.341 cv
74.5147 319.905 li
70.2034 319.905 li
70.2034 319.341 li
70.5037 319.267 70.7079 319.169 70.8186 319.046 cv
70.9318 318.923 71.0032 318.751 71.0401 318.53 cv
71.0745 318.334 71.0918 317.941 71.0918 317.376 cv
71.0918 310.526 li
71.0918 309.912 71.0844 309.47 71.0647 309.2 cv
71.0475 308.93 71.0106 308.709 70.9564 308.586 cv
70.8998 308.438 70.8186 308.34 70.7104 308.267 cv
70.6021 308.168 70.3978 308.095 70.0976 308.046 cv
70.0976 307.481 li
cp
67.9494 307.309 mo
68.4539 307.309 68.9017 307.358 69.2954 307.432 cv
69.2954 309.224 li
68.0995 309.224 li
67.9986 308.905 67.8903 308.659 67.7698 308.512 cv
67.6492 308.365 67.4917 308.291 67.2973 308.291 cv
67.0463 308.291 66.8519 308.365 66.719 308.537 cv
66.5837 308.709 66.4902 308.93 66.441 309.249 cv
66.3917 309.543 66.3671 309.985 66.3671 310.55 cv
66.3671 311.213 li
68.0626 311.213 li
68.0626 312.293 li
66.3671 312.293 li
66.3671 317.72 li
66.3671 318.162 66.3893 318.457 66.436 318.653 cv
66.4828 318.825 66.5665 318.972 66.687 319.07 cv
66.8076 319.169 67.0192 319.267 67.3244 319.341 cv
67.3244 319.905 li
62.9443 319.905 li
62.9443 319.341 li
63.2199 319.242 63.4118 319.169 63.5201 319.07 cv
63.6283 318.972 63.7071 318.825 63.7538 318.653 cv
63.8006 318.457 63.8252 318.162 63.8252 317.72 cv
63.8252 312.293 li
62.7523 312.293 li
62.7523 311.704 li
63.0624 311.655 63.2765 311.606 63.397 311.532 cv
63.5176 311.459 63.616 311.36 63.6923 311.213 cv
63.7686 311.066 63.8203 310.82 63.8498 310.526 cv
63.9458 309.47 64.337 308.659 65.026 308.119 cv
65.715 307.579 66.6895 307.309 67.9494 307.309 cv
cp
ef
215.761 258.274 mo
227.942 258.299 li
227.937 261.319 li
215.756 261.319 li
cp
237.076 258.299 mo
249.257 258.323 li
249.252 261.368 li
237.071 261.343 li
cp
258.394 258.348 mo
270.572 258.348 li
270.572 261.392 li
258.389 261.368 li
cp
279.701 258.372 mo
291.882 258.397 li
291.882 261.442 li
279.701 261.417 li
cp
301.036 258.397 mo
313.217 258.421 li
313.192 261.466 li
301.011 261.442 li
cp
322.346 258.446 mo
334.527 258.471 li
334.527 261.491 li
322.346 261.491 li
cp
343.656 258.471 mo
355.837 258.495 li
355.837 261.54 li
343.656 261.515 li
cp
364.966 258.52 mo
377.147 258.544 li
377.147 261.564 li
364.966 261.54 li
cp
386.301 258.544 mo
398.481 258.569 li
398.457 261.613 li
386.276 261.589 li
cp
407.611 258.593 mo
419.791 258.593 li
419.791 261.638 li
407.611 261.613 li
cp
428.921 258.618 mo
441.102 258.642 li
441.102 261.663 li
428.921 261.663 li
cp
450.231 258.642 mo
462.412 258.667 li
462.412 261.712 li
450.231 261.687 li
cp
471.566 258.692 mo
483.746 258.716 li
483.722 261.736 li
471.541 261.736 li
cp
492.876 258.716 mo
505.056 258.741 li
505.056 261.785 li
492.876 261.761 li
cp
514.186 258.765 mo
526.366 258.765 li
526.366 261.81 li
514.186 261.785 li
cp
535.496 258.79 mo
547.676 258.814 li
547.676 261.859 li
535.496 261.834 li
cp
556.83 258.814 mo
569.011 258.839 li
568.986 261.884 li
556.806 261.859 li
cp
578.14 258.863 mo
590.321 258.888 li
590.321 261.908 li
578.14 261.908 li
cp
599.45 258.888 mo
611.631 258.913 li
611.631 261.957 li
599.45 261.933 li
cp
620.76 258.937 mo
632.941 258.937 li
632.941 261.982 li
620.76 261.957 li
cp
642.095 258.962 mo
654.276 258.986 li
654.251 262.031 li
642.07 262.006 li
cp
663.405 258.986 mo
675.586 259.011 li
675.586 262.055 li
663.405 262.031 li
cp
684.715 259.035 mo
696.896 259.06 li
696.896 262.08 li
684.715 262.08 li
cp
706.025 259.06 mo
718.206 259.084 li
718.206 262.129 li
706.025 262.105 li
cp
727.36 259.109 mo
739.54 259.109 li
739.516 262.154 li
727.335 262.129 li
cp
748.67 259.134 mo
752.386 259.134 li
752.386 262.178 li
748.67 262.178 li
cp
.997223 .918425 .647791 .507591 cmyk
f
93.8094 257.39 mo
105.99 257.439 li
105.98 260.459 li
93.7995 260.435 li
cp
115.127 257.464 mo
122.553 257.488 li
122.541 260.533 li
115.114 260.509 li
cp
f
655.555 522.36 mo
730.116 522.36 li
730.116 526.412 li
655.555 526.412 li
cp
657.573 530.463 mo
645.392 524.386 li
657.573 518.309 li
cp
728.098 518.309 mo
740.279 524.386 li
728.098 530.463 li
cp
f
89.3751 72.03 mo
222.617 72.03 li
222.617 25.8434 li
218.557 29.8948 li
350.989 29.8948 li
350.989 21.7919 li
214.497 21.7919 li
214.497 67.9785 li
218.557 63.9271 li
89.3751 63.9271 li
cp
f
343.902 21.7919 mo
559.882 21.7919 li
559.882 29.8948 li
343.902 29.8948 li
cp
f
552.376 21.7919 mo
650.216 21.7919 li
650.216 67.9785 li
646.155 63.9271 li
726.917 63.9271 li
726.917 72.03 li
642.095 72.03 li
642.095 25.8434 li
646.155 29.8948 li
552.376 29.8948 li
cp
f
726.917 72.1773 mo
952.37 72.03 li
952.346 63.9271 li
726.892 64.0744 li
cp
f
91.4421 133.023 mo
224.684 133.023 li
224.684 86.8362 li
220.624 90.8877 li
353.056 90.8877 li
353.056 82.7848 li
216.564 82.7848 li
216.564 128.971 li
220.624 124.92 li
91.4421 124.92 li
cp
f
223.141 82.4901 mo
423.729 82.4901 li
423.729 126.418 li
419.668 122.366 li
728.221 122.366 li
728.221 130.469 li
415.608 130.469 li
415.608 86.5416 li
419.668 90.593 li
223.141 90.593 li
cp
f
724.555 130.42 mo
952.37 130.076 li
952.346 121.973 li
724.53 122.317 li
cp
f
416.322 22.3812 mo
454.266 22.3812 li
454.266 72.6193 li
416.322 72.6193 li
cp
424.442 68.5678 mo
420.382 64.5164 li
450.206 64.5164 li
446.146 68.5678 li
446.146 26.4327 li
450.206 30.4842 li
420.382 30.4842 li
424.442 26.4327 li
cp
f
446.884 24.0755 mo
417.085 65.695 li
423.704 70.3849 li
453.504 28.7899 li
cp
f
423.753 24.1492 mo
451.56 65.1302 li
444.817 69.6728 li
417.035 28.6917 li
cp
f
58.3599 45.4131 mo
64.6422 45.4131 li
64.6422 46.1989 li
64.2189 46.3217 63.931 46.4445 63.776 46.5917 cv
63.6185 46.7145 63.5102 46.9109 63.4462 47.1565 cv
63.3823 47.402 63.3503 47.8195 63.3503 48.4088 cv
63.3503 60.293 li
65.6708 60.293 li
66.1752 60.293 66.5837 60.1948 66.8987 59.9984 cv
67.2136 59.8265 67.4843 59.5073 67.7132 59.0653 cv
67.9396 58.6234 68.1659 57.8867 68.3874 56.88 cv
70.0287 56.88 li
69.7654 61.7172 li
58.3599 61.7172 li
58.3599 60.9315 li
58.7905 60.8087 59.0833 60.6859 59.2384 60.5386 cv
59.3959 60.3912 59.5017 60.2194 59.5558 59.9738 cv
59.6124 59.7283 59.6395 59.3109 59.6395 58.697 cv
59.6395 48.4333 li
59.6395 47.8195 59.6149 47.402 59.5632 47.1565 cv
59.5115 46.9355 59.4057 46.7391 59.2458 46.5917 cv
59.0858 46.4445 58.7905 46.3217 58.3599 46.1989 cv
cp
43.8907 45.4131 mo
55.7613 45.4131 li
55.7613 49.2191 li
54.1225 49.2191 li
53.8592 48.4579 53.6353 47.9423 53.4532 47.6722 cv
53.2686 47.402 53.0496 47.2056 52.7937 47.0337 cv
52.5402 46.8864 52.1047 46.8127 51.4895 46.8127 cv
48.8811 46.8127 li
48.8811 52.5339 li
50.4609 52.5339 li
50.8128 52.5339 51.0859 52.4847 51.2877 52.3866 cv
51.487 52.2884 51.6519 52.1165 51.7823 51.8955 cv
51.9152 51.6745 52.0407 51.3062 52.1613 50.8151 cv
53.5122 50.8151 li
53.5122 55.6768 li
52.1613 55.6768 li
52.0481 55.2103 51.925 54.8665 51.7897 54.621 cv
51.6544 54.3754 51.4919 54.2036 51.3049 54.1053 cv
51.1179 53.9826 50.8349 53.9335 50.4609 53.9335 cv
48.8811 53.9335 li
48.8811 60.3176 li
51.4772 60.3176 li
51.7577 60.3176 51.9915 60.293 52.1834 60.2685 cv
52.3754 60.2194 52.5476 60.1703 52.6977 60.0721 cv
52.8503 59.9984 52.9955 59.8756 53.1357 59.7283 cv
53.276 59.5564 53.399 59.4091 53.5073 59.2372 cv
53.6131 59.0408 53.7288 58.8198 53.8469 58.5251 cv
53.9675 58.255 54.0979 57.8622 54.2431 57.3466 cv
55.8819 57.3466 li
55.6555 61.7172 li
43.8907 61.7172 li
43.8907 60.9315 li
44.3213 60.8087 44.6142 60.6859 44.7692 60.5386 cv
44.9267 60.3912 45.0325 60.2194 45.0866 59.9738 cv
45.1432 59.7283 45.1703 59.3109 45.1703 58.7216 cv
45.1703 48.4333 li
45.1703 47.8195 45.1457 47.402 45.094 47.1565 cv
45.0423 46.9355 44.9365 46.7391 44.7766 46.5917 cv
44.6166 46.4445 44.3213 46.3217 43.8907 46.1989 cv
cp
37.0491 45.2167 mo
37.7593 45.2167 38.4375 45.2659 39.0836 45.3395 cv
39.7298 45.4131 40.4678 45.5359 41.2971 45.7324 cv
41.2971 49.1945 li
39.658 49.1945 li
39.4427 48.286 39.1235 47.6476 38.7008 47.2302 cv
38.2778 46.8127 37.6675 46.6163 36.8697 46.6163 cv
36.1517 46.6163 35.5751 46.8127 35.1403 47.1811 cv
34.7055 47.5494 34.4882 48.065 34.4882 48.7034 cv
34.4882 49.17 34.578 49.5629 34.7574 49.9066 cv
34.937 50.2504 35.238 50.5695 35.661 50.8887 cv
36.0838 51.2325 36.6982 51.6008 37.5039 51.9937 cv
38.4852 52.5093 39.2571 53.0004 39.8197 53.4915 cv
40.3819 53.9826 40.7976 54.5228 41.0633 55.1121 cv
41.3315 55.6768 41.4644 56.3398 41.4644 57.1255 cv
41.4644 58.0831 41.238 58.9426 40.7828 59.6547 cv
40.3283 60.3912 39.6661 60.9315 38.7965 61.3243 cv
37.9269 61.7172 36.9216 61.9136 35.7806 61.9136 cv
34.9668 61.9136 34.1191 61.8645 33.2377 61.7663 cv
32.356 61.6681 31.5282 61.5453 30.7543 61.3734 cv
30.7543 57.6903 li
32.3939 57.6903 li
32.5934 58.6234 32.9264 59.3354 33.3932 59.8019 cv
33.86 60.2685 34.5441 60.514 35.4454 60.514 cv
36.2353 60.514 36.8518 60.293 37.2944 59.9001 cv
37.7374 59.4827 37.9586 58.918 37.9586 58.1569 cv
37.9586 57.4448 37.7453 56.8309 37.3183 56.3398 cv
36.8916 55.8488 36.1517 55.3331 35.0985 54.8174 cv
34.221 54.3754 33.4889 53.9335 32.9025 53.467 cv
32.3161 53.025 31.8535 52.4847 31.5144 51.8955 cv
31.1753 51.2816 31.0058 50.5941 31.0058 49.8083 cv
31.0058 48.8262 31.2491 47.9914 31.7356 47.3038 cv
32.2224 46.6163 32.9264 46.1007 33.8479 45.7569 cv
34.7695 45.3886 35.8365 45.2167 37.0491 45.2167 cv
cp
ef
50.3182 113.011 mo
47.9239 119.739 li
52.2326 119.739 li
cp
60.39 109.868 mo
66.3376 109.868 li
69.6547 119.69 li
73.2449 109.868 li
78.8554 109.868 li
78.8554 110.654 li
78.4346 110.777 78.1467 110.924 77.9942 111.047 cv
77.8441 111.194 77.7382 111.39 77.6767 111.611 cv
77.6177 111.857 77.5881 112.274 77.5881 112.864 cv
77.5881 123.201 li
77.5881 123.668 77.6127 124.06 77.6595 124.355 cv
77.7087 124.625 77.8047 124.846 77.9523 124.994 cv
78.1 125.141 78.4026 125.264 78.8554 125.386 cv
78.8554 126.172 li
72.7183 126.172 li
72.7183 125.386 li
73.0677 125.288 73.3114 125.215 73.4467 125.141 cv
73.582 125.067 73.6879 124.969 73.7641 124.846 cv
73.8404 124.748 73.897 124.576 73.9315 124.331 cv
73.9684 124.085 73.9856 123.717 73.9856 123.177 cv
73.9856 117.308 li
73.9856 116.67 73.9979 115.908 74.0225 115.025 cv
74.0447 114.165 74.0693 113.551 74.0939 113.183 cv
73.8429 113.183 li
73.6977 113.649 73.395 114.509 72.9324 115.761 cv
69.7261 124.38 li
67.6197 124.38 li
64.2435 114.681 li
64.0442 114.141 63.8695 113.6 63.7169 113.06 cv
63.5028 113.06 li
63.5816 114.362 63.621 115.908 63.621 117.701 cv
63.621 123.201 li
63.621 123.79 63.6505 124.208 63.7071 124.429 cv
63.7612 124.674 63.8744 124.846 64.0417 125.018 cv
64.2091 125.165 64.4994 125.288 64.9153 125.386 cv
64.9153 126.172 li
60.39 126.172 li
60.39 125.386 li
60.8206 125.288 61.1159 125.141 61.2709 125.018 cv
61.426 124.871 61.5318 124.674 61.5884 124.453 cv
61.6425 124.208 61.672 123.79 61.672 123.201 cv
61.672 112.864 li
61.672 112.25 61.645 111.832 61.5933 111.611 cv
61.5416 111.39 61.4407 111.219 61.2882 111.071 cv
61.1381 110.924 60.8379 110.801 60.39 110.654 cv
cp
49.7916 109.794 mo
52.9856 109.794 li
56.9351 123.177 li
57.1098 123.766 57.2575 124.183 57.378 124.429 cv
57.4986 124.699 57.6537 124.895 57.8456 125.043 cv
58.0351 125.215 58.3033 125.313 58.6453 125.386 cv
58.6453 126.172 li
52.0407 126.172 li
52.0407 125.386 li
52.4541 125.337 52.7617 125.215 52.961 125.043 cv
53.1603 124.871 53.2612 124.601 53.2612 124.257 cv
53.2612 124.011 53.2342 123.741 53.1776 123.447 cv
53.121 123.152 53.0299 122.759 52.902 122.293 cv
52.5796 121.114 li
47.4686 121.114 li
47.0749 122.268 li
46.9617 122.587 46.8707 122.882 46.7993 123.177 cv
46.728 123.496 46.691 123.79 46.691 124.134 cv
46.691 124.92 47.1069 125.337 47.9362 125.386 cv
47.9362 126.172 li
42.8252 126.172 li
42.8252 125.386 li
43.1205 125.362 43.3789 125.264 43.6028 125.067 cv
43.8267 124.895 44.031 124.674 44.2131 124.355 cv
44.3976 124.06 44.592 123.618 44.8012 123.054 cv
cp
37.0491 109.696 mo
37.7593 109.696 38.4375 109.721 39.0836 109.794 cv
39.7298 109.868 40.4678 110.015 41.2971 110.187 cv
41.2971 113.674 li
39.658 113.674 li
39.4427 112.766 39.1235 112.103 38.7008 111.71 cv
38.2778 111.292 37.6675 111.071 36.8697 111.071 cv
36.1517 111.071 35.5751 111.268 35.1403 111.636 cv
34.7055 112.029 34.4882 112.52 34.4882 113.183 cv
34.4882 113.625 34.578 114.042 34.7574 114.362 cv
34.937 114.705 35.238 115.049 35.661 115.368 cv
36.0838 115.687 36.6982 116.056 37.5039 116.473 cv
38.4852 116.989 39.2571 117.48 39.8197 117.971 cv
40.3819 118.462 40.7976 119.002 41.0633 119.567 cv
41.3315 120.156 41.4644 120.819 41.4644 121.58 cv
41.4644 122.563 41.238 123.398 40.7828 124.134 cv
40.3283 124.846 39.6661 125.411 38.7965 125.779 cv
37.9269 126.172 36.9216 126.369 35.7806 126.369 cv
34.9668 126.369 34.1191 126.319 33.2377 126.221 cv
32.356 126.148 31.5282 126 30.7543 125.828 cv
30.7543 122.145 li
32.3939 122.145 li
32.5934 123.103 32.9264 123.815 33.3932 124.281 cv
33.86 124.748 34.5441 124.969 35.4454 124.969 cv
36.2353 124.969 36.8518 124.773 37.2944 124.355 cv
37.7374 123.962 37.9586 123.373 37.9586 122.636 cv
37.9586 121.9 37.7453 121.286 37.3183 120.795 cv
36.8916 120.304 36.1517 119.788 35.0985 119.272 cv
34.221 118.855 33.4889 118.413 32.9025 117.946 cv
32.3161 117.48 31.8535 116.964 31.5144 116.35 cv
31.1753 115.737 31.0058 115.049 31.0058 114.263 cv
31.0058 113.281 31.2491 112.471 31.7356 111.783 cv
32.2224 111.096 32.9264 110.58 33.8479 110.212 cv
34.7695 109.868 35.8365 109.696 37.0491 109.696 cv
cp
ef
395.627 41.4108 mo
402.296 41.4108 li
402.296 42.1965 li
401.902 42.2211 401.656 42.3193 401.483 42.4421 cv
401.336 42.5894 401.262 42.7858 401.262 43.0559 cv
401.262 43.2769 401.336 43.5225 401.459 43.7926 cv
401.582 44.0872 401.853 44.5783 402.271 45.2413 cv
403.378 47.1074 li
404.83 44.9712 li
405.15 44.5046 405.347 44.1364 405.47 43.8907 cv
405.568 43.6453 405.618 43.3752 405.618 43.0805 cv
405.618 42.835 405.544 42.614 405.371 42.4667 cv
405.199 42.3193 404.953 42.2211 404.633 42.1965 cv
404.633 41.4108 li
409.579 41.4108 li
409.579 42.1965 li
409.358 42.2702 409.136 42.3684 408.915 42.5157 cv
408.718 42.6385 408.472 42.8841 408.201 43.2032 cv
407.931 43.5225 407.488 44.1118 406.897 44.9712 cv
404.313 48.6298 li
407.808 54.4 li
408.177 55.0385 408.497 55.5295 408.743 55.8733 cv
408.989 56.217 409.186 56.4626 409.383 56.6099 cv
409.579 56.7817 409.776 56.88 409.973 56.9045 cv
409.973 57.6903 li
403.329 57.6903 li
403.329 56.9045 li
403.674 56.88 403.92 56.7817 404.092 56.659 cv
404.264 56.5363 404.338 56.3398 404.338 56.0452 cv
404.338 55.9224 404.313 55.7751 404.264 55.6031 cv
404.215 55.4313 404.141 55.2594 404.043 55.0875 cv
403.969 54.9156 403.797 54.621 403.551 54.2036 cv
401.877 51.4781 li
399.933 54.3509 li
399.786 54.5719 399.663 54.7928 399.54 54.9893 cv
399.441 55.1612 399.367 55.3577 399.343 55.5049 cv
399.293 55.6523 399.269 55.8488 399.269 56.0697 cv
399.269 56.2907 399.367 56.4626 399.54 56.6345 cv
399.712 56.7817 399.958 56.88 400.278 56.9045 cv
400.278 57.6903 li
395.307 57.6903 li
395.307 56.9045 li
395.676 56.8063 396.021 56.5854 396.341 56.2907 cv
396.66 55.996 397.153 55.3577 397.817 54.4 cv
400.942 49.9312 li
397.94 44.9221 li
397.596 44.3819 397.325 43.9399 397.079 43.5716 cv
396.857 43.2278 396.66 42.9332 396.488 42.7613 cv
396.341 42.5649 396.193 42.4421 396.07 42.3684 cv
395.947 42.2702 395.799 42.2211 395.627 42.1965 cv
cp
380.075 41.4108 mo
394.175 41.4108 li
394.175 45.585 li
392.526 45.585 li
392.354 44.9957 392.207 44.5292 392.083 44.21 cv
391.96 43.8907 391.813 43.6207 391.641 43.3997 cv
391.444 43.2032 391.247 43.0314 391.001 42.9332 cv
390.755 42.835 390.361 42.8104 389.844 42.8104 cv
388.983 42.8104 li
388.983 54.6947 li
388.983 55.3331 389.032 55.7505 389.081 55.996 cv
389.155 56.2416 389.278 56.438 389.45 56.5854 cv
389.647 56.7327 389.967 56.8309 390.435 56.9045 cv
390.435 57.6903 li
383.84 57.6903 li
383.84 56.9045 li
384.16 56.8554 384.431 56.7817 384.627 56.6836 cv
384.824 56.6099 384.972 56.4626 385.07 56.3152 cv
385.169 56.1434 385.218 55.9224 385.243 55.6768 cv
385.267 55.4067 385.267 55.0875 385.267 54.6947 cv
385.267 42.8104 li
384.308 42.8104 li
383.815 42.8104 383.446 42.8595 383.151 42.9823 cv
382.856 43.1296 382.61 43.3506 382.388 43.7189 cv
382.167 44.0627 381.945 44.701 381.724 45.585 cv
380.075 45.585 li
cp
ef
221.665 197.429 mo
648.764 197.429 li
648.764 147.534 li
644.703 151.586 li
954.068 151.586 li
954.068 143.483 li
640.643 143.483 li
640.643 193.377 li
644.703 189.326 li
221.665 189.326 li
cp
f
905.247 143.188 mo
955.864 143.188 li
955.864 192.346 li
951.804 188.294 li
960.983 188.294 li
960.983 196.397 li
947.744 196.397 li
947.744 147.24 li
951.804 151.291 li
905.247 151.291 li
cp
f
45.3302 169.093 mo
50.1779 169.093 li
54.4153 176.435 li
54.6786 176.901 55.0207 177.515 55.4439 178.301 cv
55.8672 179.087 56.2412 179.848 56.5685 180.535 cv
56.7604 180.535 li
56.6718 178.645 56.6275 176.557 56.6275 174.298 cv
56.6275 172.089 li
56.6275 171.548 56.6078 171.18 56.5685 170.959 cv
56.5291 170.738 56.4651 170.542 56.3765 170.444 cv
56.2904 170.321 56.1797 170.223 56.0468 170.149 cv
55.9164 170.075 55.6826 169.977 55.3479 169.879 cv
55.3479 169.093 li
59.8708 169.093 li
59.8708 169.879 li
59.5533 169.977 59.327 170.075 59.1965 170.124 cv
59.0637 170.198 58.9529 170.296 58.8594 170.419 cv
58.7684 170.542 58.6995 170.714 58.6502 170.959 cv
58.6035 171.205 58.5789 171.573 58.5789 172.089 cv
58.5789 185.372 li
55.5399 185.372 li
50.1533 176.091 li
49.4274 174.839 48.8934 173.857 48.5514 173.144 cv
48.4431 173.144 li
48.5218 174.839 48.5612 176.656 48.5612 178.546 cv
48.5612 182.401 li
48.5612 182.991 48.5932 183.408 48.6522 183.654 cv
48.7113 183.899 48.8196 184.071 48.9746 184.218 cv
49.1296 184.366 49.4249 184.489 49.8556 184.587 cv
49.8556 185.372 li
45.3302 185.372 li
45.3302 184.587 li
45.7535 184.489 46.0439 184.366 46.1989 184.218 cv
46.3539 184.071 46.4622 183.875 46.5212 183.629 cv
46.5828 183.408 46.6123 182.991 46.6123 182.401 cv
46.6123 172.064 li
46.6123 171.475 46.5852 171.057 46.5336 170.836 cv
46.4819 170.615 46.3736 170.419 46.2112 170.272 cv
46.0463 170.124 45.7535 169.977 45.3302 169.879 cv
cp
30.898 169.093 mo
42.7686 169.093 li
42.7686 172.874 li
41.1298 172.874 li
40.8665 172.138 40.6425 171.622 40.4599 171.352 cv
40.2764 171.082 40.0569 170.861 39.8017 170.714 cv
39.5463 170.566 39.1115 170.493 38.4973 170.493 cv
35.8884 170.493 li
35.8884 176.214 li
37.4679 176.214 li
37.8191 176.214 38.0944 176.165 38.2938 176.066 cv
38.4933 175.968 38.6587 175.796 38.7903 175.575 cv
38.922 175.33 39.0477 174.986 39.1673 174.495 cv
40.5197 174.495 li
40.5197 179.332 li
39.1673 179.332 li
39.0556 178.89 38.9321 178.522 38.7965 178.276 cv
38.6606 178.031 38.4992 177.859 38.3117 177.761 cv
38.1242 177.662 37.8429 177.613 37.4679 177.613 cv
35.8884 177.613 li
35.8884 183.997 li
38.4852 183.997 li
38.7645 183.997 38.9997 183.973 39.1914 183.924 cv
39.3829 183.899 39.5544 183.826 39.706 183.752 cv
39.8576 183.654 40.003 183.531 40.1428 183.384 cv
40.2823 183.236 40.4061 183.064 40.5136 182.892 cv
40.6204 182.721 40.736 182.5 40.8542 182.205 cv
40.9747 181.91 41.1051 181.517 41.2503 181.026 cv
42.8892 181.026 li
42.6628 185.372 li
30.898 185.372 li
30.898 184.587 li
31.3289 184.489 31.6219 184.366 31.7775 184.218 cv
31.9332 184.071 32.0388 183.875 32.0946 183.654 cv
32.1505 183.408 32.1786 182.991 32.1786 182.377 cv
32.1786 172.089 li
32.1786 171.499 32.1525 171.057 32.1008 170.836 cv
32.0489 170.591 31.9431 170.419 31.7836 170.272 cv
31.6239 170.124 31.3289 170.001 30.898 169.879 cv
cp
ef
223.193 196.446 mo
218.222 196.446 li
218.222 156.669 li
222.282 160.72 li
91.4421 160.72 li
91.4421 152.617 li
226.343 152.617 li
226.343 192.395 li
222.282 188.344 li
223.193 188.344 li
cp
f
905.247 130.052 mo
957.489 130.052 li
957.489 87.1309 li
953.428 91.1823 li
960.983 91.1823 li
960.983 83.0794 li
949.368 83.0794 li
949.368 126 li
953.428 121.949 li
905.247 121.949 li
cp
f
907.019 71.1215 mo
959.26 71.1215 li
959.26 28.2006 li
955.2 32.2521 li
962.755 32.2521 li
962.755 24.1492 li
951.14 24.1492 li
951.14 67.07 li
955.2 63.0186 li
907.019 63.0186 li
cp
f
293.137 41.9265 mo
299.756 41.9265 li
299.756 42.7122 li
299.338 42.7613 299.043 42.8595 298.846 43.0559 cv
298.649 43.2278 298.551 43.4979 298.551 43.8171 cv
298.551 44.0872 298.575 44.3573 298.624 44.6028 cv
298.649 44.8484 298.772 45.2413 298.92 45.806 cv
301.282 54.3754 li
304.235 45.8306 li
304.358 45.5114 304.456 45.1921 304.53 44.8975 cv
304.579 44.6028 304.629 44.2836 304.629 43.9644 cv
304.629 43.5716 304.53 43.2769 304.309 43.0559 cv
304.112 42.8595 303.792 42.7367 303.374 42.7122 cv
303.374 41.9265 li
308.541 41.9265 li
308.541 42.7122 li
308.221 42.7613 307.975 42.8595 307.754 43.0068 cv
307.557 43.1542 307.36 43.3506 307.188 43.6207 cv
307.016 43.9153 306.819 44.3573 306.573 44.9712 cv
301.577 58.3041 li
298.797 58.3041 li
294.859 44.9221 li
294.687 44.3328 294.54 43.9153 294.417 43.6453 cv
294.294 43.3997 294.146 43.2032 293.949 43.0559 cv
293.752 42.8841 293.481 42.7858 293.137 42.7122 cv
cp
ef
319.639 54.3754 mo
320.082 54.3754 320.5 54.4 320.919 54.4246 cv
321.312 54.4737 321.854 54.5474 322.494 54.6701 cv
322.494 56.7081 li
321.337 56.7081 li
321.214 56.3398 321.066 56.0452 320.894 55.8488 cv
320.747 55.6277 320.55 55.4804 320.353 55.4067 cv
320.181 55.3331 319.934 55.2839 319.664 55.2839 cv
319.27 55.2839 318.975 55.3822 318.753 55.5541 cv
318.507 55.726 318.409 55.9715 318.409 56.2907 cv
318.409 56.5117 318.433 56.7081 318.532 56.8554 cv
318.606 57.0273 318.753 57.1746 318.975 57.322 cv
319.172 57.4693 319.59 57.6657 320.181 57.9358 cv
321.066 58.2796 321.682 58.6724 322.051 59.1144 cv
322.42 59.5319 322.592 60.0475 322.592 60.6368 cv
322.592 61.5208 322.272 62.1837 321.657 62.6502 cv
321.017 63.1414 320.131 63.3623 318.999 63.3623 cv
318.015 63.3623 316.957 63.2396 315.751 62.9449 cv
315.751 60.8578 li
316.932 60.8578 li
317.08 61.3979 317.301 61.7908 317.621 62.061 cv
317.917 62.3311 318.335 62.4539 318.827 62.4539 cv
319.27 62.4539 319.615 62.3556 319.836 62.1592 cv
320.057 61.9627 320.181 61.6681 320.181 61.2752 cv
320.181 61.0542 320.107 60.8333 320.008 60.6613 cv
319.91 60.514 319.738 60.3422 319.516 60.1948 cv
319.27 60.0229 318.852 59.8265 318.286 59.5809 cv
317.474 59.2126 316.883 58.8198 316.514 58.4023 cv
316.145 57.9604 315.948 57.4693 315.948 56.9537 cv
315.948 56.4135 316.096 55.9715 316.416 55.5786 cv
316.711 55.1857 317.154 54.8911 317.72 54.6947 cv
318.286 54.4737 318.926 54.3754 319.639 54.3754 cv
cp
313.733 54.3754 mo
314.078 54.3754 314.447 54.4246 314.841 54.4982 cv
314.841 56.9045 li
313.266 56.9045 li
313.167 56.5854 313.02 56.3152 312.872 56.1434 cv
312.7 55.9469 312.478 55.8733 312.208 55.8733 cv
312.085 55.8733 311.937 55.8978 311.789 55.9715 cv
311.642 56.0697 311.494 56.1679 311.371 56.3152 cv
311.223 56.4626 311.125 56.6099 311.076 56.7572 cv
311.027 56.9045 310.977 57.0519 310.977 57.1992 cv
310.953 57.3466 310.953 57.592 310.953 57.8867 cv
310.953 60.6859 li
310.953 61.2507 310.953 61.6436 311.002 61.8645 cv
311.051 62.0855 311.125 62.2574 311.248 62.3801 cv
311.371 62.5029 311.593 62.6011 311.863 62.6502 cv
311.863 63.215 li
307.532 63.215 li
307.532 62.6502 li
307.828 62.5766 308.024 62.4784 308.123 62.3556 cv
308.221 62.2328 308.295 62.061 308.344 61.84 cv
308.394 61.6436 308.394 61.2507 308.394 60.7104 cv
308.394 57.101 li
308.394 56.659 308.394 56.3398 308.369 56.1188 cv
308.369 55.9224 308.32 55.7505 308.271 55.6277 cv
308.221 55.5049 308.123 55.4067 308.024 55.3331 cv
307.901 55.2349 307.705 55.1857 307.434 55.1121 cv
307.434 54.5228 li
309.845 54.4491 li
310.953 54.4491 li
310.83 55.7751 li
310.928 55.7996 li
311.371 55.3085 311.814 54.9402 312.257 54.7192 cv
312.7 54.4982 313.192 54.3754 313.733 54.3754 cv
cp
325.471 52.3375 mo
327.587 52.3375 li
327.587 54.5228 li
330.097 54.5228 li
330.097 55.6277 li
327.587 55.6277 li
327.587 59.5809 li
327.587 60.2439 327.612 60.735 327.661 61.0297 cv
327.735 61.3489 327.833 61.5944 327.981 61.7418 cv
328.129 61.889 328.326 61.9627 328.522 61.9627 cv
328.818 61.9627 329.064 61.9136 329.261 61.8154 cv
329.482 61.7172 329.654 61.5944 329.827 61.4471 cv
330.393 62.1837 li
329.876 62.6011 329.408 62.9203 328.99 63.0922 cv
328.547 63.2887 328.104 63.3623 327.637 63.3623 cv
326.775 63.3623 326.111 63.1414 325.693 62.6502 cv
325.25 62.1837 325.028 61.4716 325.028 60.514 cv
325.028 55.6277 li
323.945 55.6277 li
323.945 55.0139 li
324.29 54.9648 324.561 54.8665 324.733 54.7438 cv
324.905 54.621 325.028 54.4737 325.127 54.2773 cv
325.225 54.0808 325.299 53.8353 325.348 53.5161 cv
325.397 53.1968 325.447 52.804 325.471 52.3375 cv
cp
ef
522.011 42.3193 mo
528.63 42.3193 li
528.63 43.1296 li
528.212 43.1787 527.917 43.2769 527.695 43.4733 cv
527.498 43.6453 527.4 43.9153 527.4 44.2346 cv
527.4 44.5046 527.424 44.7502 527.474 45.0203 cv
527.523 45.2659 527.621 45.6587 527.769 46.2234 cv
530.156 54.7928 li
533.109 46.248 li
533.232 45.9042 533.306 45.6096 533.379 45.3149 cv
533.453 45.0203 533.478 44.701 533.478 44.3819 cv
533.478 43.989 533.379 43.6944 533.182 43.4733 cv
532.986 43.2769 532.666 43.1542 532.247 43.1296 cv
532.247 42.3193 li
537.39 42.3193 li
537.39 43.1296 li
537.095 43.1787 536.849 43.2769 536.628 43.3997 cv
536.406 43.547 536.234 43.768 536.062 44.0381 cv
535.889 44.3082 535.668 44.7747 535.446 45.3886 cv
530.426 58.7216 li
527.67 58.7216 li
523.709 45.3395 li
523.536 44.7502 523.389 44.3082 523.266 44.0627 cv
523.167 43.8171 522.995 43.6207 522.823 43.4488 cv
522.626 43.3015 522.355 43.2032 522.011 43.1296 cv
cp
ef
553.213 64.1971 mo
552.991 64.3691 552.844 64.5409 552.745 64.7374 cv
552.622 64.9338 552.573 65.1548 552.573 65.4004 cv
552.573 65.8178 552.745 66.137 553.115 66.3334 cv
553.484 66.5298 554.074 66.6526 554.862 66.6526 cv
555.6 66.6526 556.166 66.5298 556.535 66.2843 cv
556.929 66.0388 557.125 65.6704 557.125 65.2285 cv
557.125 64.8602 557.003 64.6146 556.756 64.4673 cv
556.535 64.3199 556.19 64.2463 555.723 64.2463 cv
554.222 64.2463 li
553.779 64.2463 553.459 64.2217 553.213 64.1971 cv
cp
554.812 55.7014 mo
554.37 55.7014 554.05 55.8733 553.853 56.1925 cv
553.631 56.5363 553.533 57.0519 553.533 57.7394 cv
553.533 58.5006 553.631 59.0408 553.853 59.4091 cv
554.05 59.7529 554.37 59.9247 554.812 59.9247 cv
555.231 59.9247 555.526 59.7774 555.747 59.4337 cv
555.969 59.1144 556.067 58.5988 556.067 57.9113 cv
556.067 57.1992 555.969 56.6345 555.772 56.2662 cv
555.551 55.8978 555.231 55.7014 554.812 55.7014 cv
cp
547.283 54.8665 mo
548.365 54.8665 li
548.365 61.1033 li
548.365 61.6681 548.39 62.061 548.414 62.2574 cv
548.464 62.4539 548.513 62.6257 548.636 62.7485 cv
548.759 62.8958 548.956 62.994 549.251 63.0677 cv
549.251 63.6324 li
544.969 63.6324 li
544.969 63.0677 li
545.24 62.994 545.437 62.8958 545.56 62.773 cv
545.658 62.6502 545.732 62.4784 545.781 62.2574 cv
545.806 62.061 545.831 61.6681 545.831 61.1033 cv
545.831 57.0273 li
545.831 56.6345 545.806 56.3398 545.757 56.1679 cv
545.708 55.996 545.609 55.8488 545.486 55.7751 cv
545.363 55.6768 545.166 55.6031 544.846 55.5295 cv
544.846 54.9402 li
cp
554.837 54.7928 mo
555.132 54.7928 555.403 54.8174 555.625 54.842 cv
555.846 54.8665 556.067 54.8911 556.289 54.9402 cv
559.463 54.9402 li
559.463 56.1188 li
557.962 55.9469 li
557.938 56.0452 li
558.085 56.1925 558.233 56.438 558.331 56.7081 cv
558.454 57.0028 558.504 57.3466 558.504 57.7394 cv
558.504 58.7461 558.184 59.5319 557.568 60.0475 cv
556.953 60.5877 556.043 60.8333 554.837 60.8333 cv
554.271 60.8333 553.779 60.7841 553.41 60.6859 cv
553.115 60.956 552.967 61.2261 552.967 61.5453 cv
552.967 61.7172 553.016 61.84 553.09 61.9382 cv
553.164 62.0364 553.287 62.11 553.459 62.1592 cv
553.631 62.2083 553.877 62.2328 554.197 62.2328 cv
556.387 62.2328 li
557.372 62.2328 558.11 62.4293 558.577 62.7976 cv
559.07 63.1659 559.316 63.7797 559.316 64.5655 cv
559.316 65.2039 559.143 65.7441 558.774 66.1861 cv
558.43 66.6281 557.913 66.9718 557.249 67.2173 cv
556.609 67.4629 555.821 67.5611 554.911 67.5611 cv
554.246 67.5611 553.631 67.5366 553.09 67.4874 cv
552.549 67.4138 552.106 67.3156 551.712 67.1683 cv
551.343 67.0209 551.047 66.7999 550.826 66.5298 cv
550.629 66.2597 550.531 65.916 550.531 65.4986 cv
550.531 65.1794 550.629 64.8602 550.851 64.5901 cv
551.047 64.2954 551.343 64.0499 551.737 63.8534 cv
551.49 63.6815 551.294 63.4851 551.195 63.2641 cv
551.072 63.0186 551.023 62.7485 551.023 62.4047 cv
551.023 62.061 551.121 61.7172 551.343 61.3979 cv
551.54 61.0787 551.884 60.7104 552.401 60.3422 cv
551.933 60.0721 551.589 59.7529 551.367 59.3354 cv
551.121 58.918 550.998 58.4269 550.998 57.8622 cv
550.998 57.1501 551.171 56.5854 551.515 56.1188 cv
551.835 55.6523 552.302 55.3085 552.868 55.1121 cv
553.434 54.8911 554.099 54.7928 554.837 54.7928 cv
cp
540.245 54.7928 mo
540.688 54.7928 541.106 54.8174 541.5 54.842 cv
541.918 54.8911 542.459 54.9648 543.099 55.063 cv
543.099 57.1255 li
541.943 57.1255 li
541.795 56.7572 541.647 56.4626 541.5 56.2416 cv
541.328 56.0452 541.155 55.8978 540.958 55.8242 cv
540.762 55.7505 540.54 55.7014 540.269 55.7014 cv
539.876 55.7014 539.58 55.7996 539.334 55.9715 cv
539.113 56.1434 538.99 56.3889 538.99 56.7081 cv
538.99 56.9291 539.039 57.1255 539.113 57.2729 cv
539.211 57.4448 539.359 57.592 539.556 57.7394 cv
539.777 57.8867 540.171 58.0831 540.786 58.3287 cv
541.647 58.697 542.287 59.0898 542.656 59.5319 cv
543.001 59.9493 543.198 60.4649 543.198 61.0542 cv
543.198 61.9382 542.878 62.6011 542.263 63.0677 cv
541.623 63.5342 540.737 63.7797 539.58 63.7797 cv
538.621 63.7797 537.538 63.6324 536.357 63.3623 cv
536.357 61.2752 li
537.538 61.2752 li
537.686 61.8154 537.907 62.2083 538.202 62.4784 cv
538.522 62.7239 538.916 62.8713 539.433 62.8713 cv
539.876 62.8713 540.196 62.773 540.417 62.5766 cv
540.663 62.3801 540.762 62.0855 540.762 61.6926 cv
540.762 61.4716 540.712 61.2507 540.614 61.0787 cv
540.516 60.9069 540.343 60.7596 540.097 60.5877 cv
539.876 60.4404 539.457 60.2439 538.891 59.9984 cv
538.055 59.6301 537.464 59.2372 537.095 58.8198 cv
536.726 58.3778 536.554 57.8867 536.554 57.3466 cv
536.554 56.8309 536.701 56.3643 536.997 55.996 cv
537.317 55.6031 537.735 55.3085 538.301 55.1121 cv
538.867 54.8911 539.531 54.7928 540.245 54.7928 cv
cp
545.88 51.429 mo
548.291 51.429 li
548.291 53.5897 li
545.88 53.5897 li
cp
ef
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/AARSSU+CambriaMath*1 uf
/AARSSU+CambriaMath uf
/KAAAAA+CambriaMath uf
/AARSST+Calibri-Bold*1 uf
/AARSST+Calibri-Bold uf
/IAAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
